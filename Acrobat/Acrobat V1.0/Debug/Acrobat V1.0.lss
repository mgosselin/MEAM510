
Acrobat V1.0.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003a  00800100  00002992  00002a26  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002992  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000056  0080013a  0080013a  00002a60  2**0
                  ALLOC
  3 .stab         00002bec  00000000  00000000  00002a60  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      000009c5  00000000  00000000  0000564c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001a0  00000000  00000000  00006018  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000021dd  00000000  00000000  000061b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000877  00000000  00000000  00008395  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f7c  00000000  00000000  00008c0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000738  00000000  00000000  00009b88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000900  00000000  00000000  0000a2c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002b6f  00000000  00000000  0000abc0  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000080  00000000  00000000  0000d72f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__ctors_end>
       4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
       8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
       c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      10:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      14:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      18:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      1c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      20:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      24:	0c 94 16 05 	jmp	0xa2c	; 0xa2c <__vector_9>
      28:	0c 94 20 0e 	jmp	0x1c40	; 0x1c40 <__vector_10>
      2c:	0c 94 5e 0e 	jmp	0x1cbc	; 0x1cbc <__vector_11>
      30:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      34:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      38:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      3c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      40:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      44:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      48:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      4c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      50:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      54:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      58:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      5c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      60:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      64:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      68:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      6c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      70:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      74:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      78:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      7c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      80:	0c 94 64 05 	jmp	0xac8	; 0xac8 <__vector_32>
      84:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      88:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      8c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      90:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      94:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      98:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      9c:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      a0:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      a4:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      a8:	0c 94 0e 01 	jmp	0x21c	; 0x21c <__bad_interrupt>
      ac:	be 0d       	add	r27, r14
      ae:	bb 0d       	add	r27, r11
      b0:	b8 0d       	add	r27, r8
      b2:	b5 0d       	add	r27, r5
      b4:	b2 0d       	add	r27, r2
      b6:	af 0d       	add	r26, r15
      b8:	ac 0d       	add	r26, r12
      ba:	a9 0d       	add	r26, r9
      bc:	a6 0d       	add	r26, r6
      be:	a3 0d       	add	r26, r3
      c0:	a0 0d       	add	r26, r0
      c2:	9d 0d       	add	r25, r13
      c4:	9a 0d       	add	r25, r10
      c6:	97 0d       	add	r25, r7
      c8:	94 0d       	add	r25, r4
      ca:	91 0d       	add	r25, r1
      cc:	8e 0d       	add	r24, r14
      ce:	8b 0d       	add	r24, r11
      d0:	88 0d       	add	r24, r8
      d2:	85 0d       	add	r24, r5
      d4:	82 0d       	add	r24, r2
      d6:	7f 0d       	add	r23, r15
      d8:	7c 0d       	add	r23, r12
      da:	79 0d       	add	r23, r9
      dc:	76 0d       	add	r23, r6
      de:	73 0d       	add	r23, r3
      e0:	70 0d       	add	r23, r0
      e2:	6d 0d       	add	r22, r13
      e4:	6a 0d       	add	r22, r10
      e6:	67 0d       	add	r22, r7
      e8:	64 0d       	add	r22, r4
      ea:	61 0d       	add	r22, r1
      ec:	5e 0d       	add	r21, r14
      ee:	5b 0d       	add	r21, r11
      f0:	58 0d       	add	r21, r8
      f2:	55 0d       	add	r21, r5
      f4:	52 0d       	add	r21, r2
      f6:	4f 0d       	add	r20, r15
      f8:	4c 0d       	add	r20, r12
      fa:	49 0d       	add	r20, r9
      fc:	46 0d       	add	r20, r6
      fe:	43 0d       	add	r20, r3
     100:	40 0d       	add	r20, r0
     102:	3d 0d       	add	r19, r13
     104:	3a 0d       	add	r19, r10
     106:	37 0d       	add	r19, r7
     108:	34 0d       	add	r19, r4
     10a:	31 0d       	add	r19, r1
     10c:	2e 0d       	add	r18, r14
     10e:	2b 0d       	add	r18, r11
     110:	28 0d       	add	r18, r8
     112:	25 0d       	add	r18, r5
     114:	22 0d       	add	r18, r2
     116:	1f 0d       	add	r17, r15
     118:	1c 0d       	add	r17, r12
     11a:	19 0d       	add	r17, r9
     11c:	16 0d       	add	r17, r6
     11e:	13 0d       	add	r17, r3
     120:	10 0d       	add	r17, r0
     122:	0d 0d       	add	r16, r13
     124:	0a 0d       	add	r16, r10
     126:	07 0d       	add	r16, r7
     128:	04 0d       	add	r16, r4
     12a:	01 0d       	add	r16, r1
     12c:	fe 0c       	add	r15, r14

0000012e <descriptor_list>:
     12e:	00 01 00 00 62 01 12 00 02 00 00 74 01 43 00 03     ....b......t.C..
     13e:	00 00 b7 01 04 01 03 09 04 bb 01 12 02 03 09 04     ................
     14e:	cf 01 06 03 03 09 04 d7 01 08                       ..........

00000158 <endpoint_config_table>:
     158:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000162 <device_descriptor>:
     162:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
     172:	03 01                                               ..

00000174 <config1_descriptor>:
     174:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
     184:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
     194:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
     1a4:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
     1b4:	40 00 00                                            @..

000001b7 <string0>:
     1b7:	04 03 09 04                                         ....

000001bb <string1>:
     1bb:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
     1cb:	65 00 00 00                                         e...

000001cf <string2>:
     1cf:	06 03 4d 00 32 00 00 00                             ..M.2...

000001d7 <string3>:
     1d7:	08 03 34 00 31 00 30 00 00 00 00                    ..4.1.0....

000001e2 <__ctors_end>:
     1e2:	11 24       	eor	r1, r1
     1e4:	1f be       	out	0x3f, r1	; 63
     1e6:	cf ef       	ldi	r28, 0xFF	; 255
     1e8:	da e0       	ldi	r29, 0x0A	; 10
     1ea:	de bf       	out	0x3e, r29	; 62
     1ec:	cd bf       	out	0x3d, r28	; 61

000001ee <__do_copy_data>:
     1ee:	11 e0       	ldi	r17, 0x01	; 1
     1f0:	a0 e0       	ldi	r26, 0x00	; 0
     1f2:	b1 e0       	ldi	r27, 0x01	; 1
     1f4:	e2 e9       	ldi	r30, 0x92	; 146
     1f6:	f9 e2       	ldi	r31, 0x29	; 41
     1f8:	02 c0       	rjmp	.+4      	; 0x1fe <__do_copy_data+0x10>
     1fa:	05 90       	lpm	r0, Z+
     1fc:	0d 92       	st	X+, r0
     1fe:	aa 33       	cpi	r26, 0x3A	; 58
     200:	b1 07       	cpc	r27, r17
     202:	d9 f7       	brne	.-10     	; 0x1fa <__do_copy_data+0xc>

00000204 <__do_clear_bss>:
     204:	11 e0       	ldi	r17, 0x01	; 1
     206:	aa e3       	ldi	r26, 0x3A	; 58
     208:	b1 e0       	ldi	r27, 0x01	; 1
     20a:	01 c0       	rjmp	.+2      	; 0x20e <.do_clear_bss_start>

0000020c <.do_clear_bss_loop>:
     20c:	1d 92       	st	X+, r1

0000020e <.do_clear_bss_start>:
     20e:	a0 39       	cpi	r26, 0x90	; 144
     210:	b1 07       	cpc	r27, r17
     212:	e1 f7       	brne	.-8      	; 0x20c <.do_clear_bss_loop>
     214:	0e 94 43 01 	call	0x286	; 0x286 <main>
     218:	0c 94 c7 14 	jmp	0x298e	; 0x298e <_exit>

0000021c <__bad_interrupt>:
     21c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000220 <TimerSetup>:
//************************************************************************

//================= system initialize ===================================
void TimerSetup(void){
	//Timer1 is used to generate the PWM
	OCR1A = 4000;
     220:	80 ea       	ldi	r24, 0xA0	; 160
     222:	9f e0       	ldi	r25, 0x0F	; 15
     224:	90 93 89 00 	sts	0x0089, r25
     228:	80 93 88 00 	sts	0x0088, r24
	OCR1B = 2000;
     22c:	80 ed       	ldi	r24, 0xD0	; 208
     22e:	97 e0       	ldi	r25, 0x07	; 7
     230:	90 93 8b 00 	sts	0x008B, r25
     234:	80 93 8a 00 	sts	0x008A, r24
	OCR1C = 2000;
     238:	90 93 8d 00 	sts	0x008D, r25
     23c:	80 93 8c 00 	sts	0x008C, r24
	set(DDRB,6);
     240:	26 9a       	sbi	0x04, 6	; 4
	set(DDRB,7);
     242:	27 9a       	sbi	0x04, 7	; 4
	TCCR1A = 0b00101011;
     244:	8b e2       	ldi	r24, 0x2B	; 43
     246:	80 93 80 00 	sts	0x0080, r24
	TCCR1B = 0b00011001;
     24a:	89 e1       	ldi	r24, 0x19	; 25
     24c:	80 93 81 00 	sts	0x0081, r24
	//Timer3 is used to generate periodical interrupt
	OCR3A = (int)(15625*((float)PERIOD/1000));		//The equation to calculate the period of interrupt wich determined by PERIOD
     250:	8e e4       	ldi	r24, 0x4E	; 78
     252:	90 e0       	ldi	r25, 0x00	; 0
     254:	90 93 99 00 	sts	0x0099, r25
     258:	80 93 98 00 	sts	0x0098, r24
	TCCR3A = 0b00000000;
     25c:	10 92 90 00 	sts	0x0090, r1
	TCCR3B = 0b00001101;// /1024
     260:	8d e0       	ldi	r24, 0x0D	; 13
     262:	80 93 91 00 	sts	0x0091, r24
	clear(TIMSK3 , OCIE3A);
     266:	e1 e7       	ldi	r30, 0x71	; 113
     268:	f0 e0       	ldi	r31, 0x00	; 0
     26a:	80 81       	ld	r24, Z
     26c:	8d 7f       	andi	r24, 0xFD	; 253
     26e:	80 83       	st	Z, r24
	// The setup for the input capture should be here
}
     270:	08 95       	ret

00000272 <systemInitial>:
void systemInitial(void){
	m_clockdivide(0);
     272:	e1 e6       	ldi	r30, 0x61	; 97
     274:	f0 e0       	ldi	r31, 0x00	; 0
     276:	80 e8       	ldi	r24, 0x80	; 128
     278:	80 83       	st	Z, r24
     27a:	10 82       	st	Z, r1
	wirelessinitial();
     27c:	0e 94 09 11 	call	0x2212	; 0x2212 <wirelessinitial>
	TimerSetup();
     280:	0e 94 10 01 	call	0x220	; 0x220 <TimerSetup>
	//m_usb_init();
	//while(!m_imu_init(1,0));
	//sei();
	//while(!m_usb_isconnected());
}
     284:	08 95       	ret

00000286 <main>:
//==========================================================================

int main(void)
{
     286:	cf 93       	push	r28
     288:	df 93       	push	r29
     28a:	cd b7       	in	r28, 0x3d	; 61
     28c:	de b7       	in	r29, 0x3e	; 62
     28e:	e9 97       	sbiw	r28, 0x39	; 57
     290:	0f b6       	in	r0, 0x3f	; 63
     292:	f8 94       	cli
     294:	de bf       	out	0x3e, r29	; 62
     296:	0f be       	out	0x3f, r0	; 63
     298:	cd bf       	out	0x3d, r28	; 61
	//original data
	int Data[9]={0};
     29a:	fe 01       	movw	r30, r28
     29c:	31 96       	adiw	r30, 0x01	; 1
     29e:	82 e1       	ldi	r24, 0x12	; 18
     2a0:	df 01       	movw	r26, r30
     2a2:	1d 92       	st	X+, r1
     2a4:	8a 95       	dec	r24
     2a6:	e9 f7       	brne	.-6      	; 0x2a2 <main+0x1c>
	// PID variables for speed controller
	int speedHis1 = 0, speedHis2 = 0;
	int speedI = 0, speedD = 0;
	int outputSpeed =0;
	
	systemInitial();
     2a8:	0e 94 39 01 	call	0x272	; 0x272 <systemInitial>
	// send back comfirm information to prove that wireless has been connected
	char haha[5]="Hello";
     2ac:	de 01       	movw	r26, r28
     2ae:	53 96       	adiw	r26, 0x13	; 19
     2b0:	e0 e0       	ldi	r30, 0x00	; 0
     2b2:	f1 e0       	ldi	r31, 0x01	; 1
     2b4:	85 e0       	ldi	r24, 0x05	; 5
     2b6:	01 90       	ld	r0, Z+
     2b8:	0d 92       	st	X+, r0
     2ba:	81 50       	subi	r24, 0x01	; 1
     2bc:	e1 f7       	brne	.-8      	; 0x2b6 <main+0x30>
	wireless_string(haha,5);
     2be:	ce 01       	movw	r24, r28
     2c0:	43 96       	adiw	r24, 0x13	; 19
     2c2:	65 e0       	ldi	r22, 0x05	; 5
     2c4:	70 e0       	ldi	r23, 0x00	; 0
     2c6:	0e 94 8f 11 	call	0x231e	; 0x231e <wireless_string>
	wireless_char('\n');
     2ca:	8a e0       	ldi	r24, 0x0A	; 10
     2cc:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
	clear(DDRB,0);
     2d0:	20 98       	cbi	0x04, 0	; 4
	clear(PORTB,0);
     2d2:	28 98       	cbi	0x05, 0	; 5
	// using wireless to change parameters of PID controller, and if DIP switch 1 is ON, this can be skipped
	if (!check(PINB,0))
     2d4:	18 99       	sbic	0x03, 0	; 3
     2d6:	04 c1       	rjmp	.+520    	; 0x4e0 <main+0x25a>
     2d8:	e8 e8       	ldi	r30, 0x88	; 136
     2da:	f3 e1       	ldi	r31, 0x13	; 19
     2dc:	fb a7       	lds	r31, 0x7b
     2de:	ea a7       	lds	r30, 0x7a
     2e0:	aa 24       	eor	r10, r10
     2e2:	bb 24       	eor	r11, r11
     2e4:	0f 2e       	mov	r0, r31
     2e6:	f8 ee       	ldi	r31, 0xE8	; 232
     2e8:	ef 2e       	mov	r14, r31
     2ea:	f3 e0       	ldi	r31, 0x03	; 3
     2ec:	ff 2e       	mov	r15, r31
     2ee:	f0 2d       	mov	r31, r0
     2f0:	88 24       	eor	r8, r8
     2f2:	99 24       	eor	r9, r9
     2f4:	00 e0       	ldi	r16, 0x00	; 0
     2f6:	10 e0       	ldi	r17, 0x00	; 0
	{
		while(1)
		{
			//m_green(ON);
			int success;
			success = m_rf_read(buffer, packLength);
     2f8:	0f 2e       	mov	r0, r31
     2fa:	f0 e4       	ldi	r31, 0x40	; 64
     2fc:	cf 2e       	mov	r12, r31
     2fe:	f1 e0       	ldi	r31, 0x01	; 1
     300:	df 2e       	mov	r13, r31
     302:	f0 2d       	mov	r31, r0
			if ((success==1)&&(buffer[0]>=45))
			{
				m_green(ON);
				ConvertFinishFlag=1;
     304:	66 24       	eor	r6, r6
     306:	77 24       	eor	r7, r7
     308:	63 94       	inc	r6
							case 3:KdIni=getValue;break;
						}
					}
				}
				// when the input is "start", the robot will start
				if ((buffer[0]=='s')&&(buffer[1]=='t')&&(buffer[2]=='a')&&(buffer[3]=='r')&&(buffer[4]=='t'))
     30a:	0f 2e       	mov	r0, r31
     30c:	f1 e4       	ldi	r31, 0x41	; 65
     30e:	4f 2e       	mov	r4, r31
     310:	f1 e0       	ldi	r31, 0x01	; 1
     312:	5f 2e       	mov	r5, r31
     314:	f0 2d       	mov	r31, r0
				}else{
					// change the parameter, and if the input is not a value, it will send back "SayAgain" and wait untill the input is a value
					getValue = atoi(buffer);
					if ((getValue==0)&&(buffer[0]!='0'))
					{
						char Sorry1[8] = "SayAgain";
     316:	0f 2e       	mov	r0, r31
     318:	f6 e0       	ldi	r31, 0x06	; 6
     31a:	2f 2e       	mov	r2, r31
     31c:	f1 e0       	ldi	r31, 0x01	; 1
     31e:	3f 2e       	mov	r3, r31
     320:	f0 2d       	mov	r31, r0
	{
		while(1)
		{
			//m_green(ON);
			int success;
			success = m_rf_read(buffer, packLength);
     322:	c6 01       	movw	r24, r12
     324:	68 e0       	ldi	r22, 0x08	; 8
     326:	0e 94 ec 0a 	call	0x15d8	; 0x15d8 <m_rf_read>
			if ((success==1)&&(buffer[0]>=45))
     32a:	81 30       	cpi	r24, 0x01	; 1
     32c:	59 f4       	brne	.+22     	; 0x344 <main+0xbe>
     32e:	d6 01       	movw	r26, r12
     330:	8c 91       	ld	r24, X
     332:	8d 32       	cpi	r24, 0x2D	; 45
     334:	38 f0       	brcs	.+14     	; 0x344 <main+0xbe>
			{
				m_green(ON);
     336:	6a 9a       	sbi	0x0d, 2	; 13
     338:	72 98       	cbi	0x0e, 2	; 14
				ConvertFinishFlag=1;
     33a:	70 92 49 01 	sts	0x0149, r7
     33e:	60 92 48 01 	sts	0x0148, r6
     342:	02 c0       	rjmp	.+4      	; 0x348 <main+0xc2>
			}
			else{
				m_green(OFF);
     344:	6a 9a       	sbi	0x0d, 2	; 13
     346:	72 9a       	sbi	0x0e, 2	; 14
			}
			if (ConvertFinishFlag==1)
     348:	80 91 48 01 	lds	r24, 0x0148
     34c:	90 91 49 01 	lds	r25, 0x0149
     350:	81 30       	cpi	r24, 0x01	; 1
     352:	91 05       	cpc	r25, r1
     354:	31 f7       	brne	.-52     	; 0x322 <main+0x9c>
			{
				if (switchNum==0)
     356:	01 15       	cp	r16, r1
     358:	11 05       	cpc	r17, r1
     35a:	09 f0       	breq	.+2      	; 0x35e <main+0xd8>
     35c:	40 c0       	rjmp	.+128    	; 0x3de <main+0x158>
				{
					// send back current value of parameter and determine which one should be changed
					wireless_string(buffer,packLength);
     35e:	c6 01       	movw	r24, r12
     360:	68 e0       	ldi	r22, 0x08	; 8
     362:	70 e0       	ldi	r23, 0x00	; 0
     364:	0e 94 8f 11 	call	0x231e	; 0x231e <wireless_string>
					wireless_char(':');
     368:	8a e3       	ldi	r24, 0x3A	; 58
     36a:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
					if ((buffer[0]=='k')&&(buffer[1]=='p'))
     36e:	f6 01       	movw	r30, r12
     370:	80 81       	ld	r24, Z
     372:	8b 36       	cpi	r24, 0x6B	; 107
     374:	41 f4       	brne	.+16     	; 0x386 <main+0x100>
     376:	d2 01       	movw	r26, r4
     378:	8c 91       	ld	r24, X
     37a:	80 37       	cpi	r24, 0x70	; 112
     37c:	21 f4       	brne	.+8      	; 0x386 <main+0x100>
					{
						paraDeter = 1;
						wireless_int(KpIni);
     37e:	c7 01       	movw	r24, r14
     380:	0e 94 11 11 	call	0x2222	; 0x2222 <wireless_int>
					// send back current value of parameter and determine which one should be changed
					wireless_string(buffer,packLength);
					wireless_char(':');
					if ((buffer[0]=='k')&&(buffer[1]=='p'))
					{
						paraDeter = 1;
     384:	43 01       	movw	r8, r6
						wireless_int(KpIni);
					}
					if ((buffer[0]=='k')&&(buffer[1]=='i'))
     386:	f6 01       	movw	r30, r12
     388:	80 81       	ld	r24, Z
     38a:	8b 36       	cpi	r24, 0x6B	; 107
     38c:	59 f4       	brne	.+22     	; 0x3a4 <main+0x11e>
     38e:	d2 01       	movw	r26, r4
     390:	8c 91       	ld	r24, X
     392:	89 36       	cpi	r24, 0x69	; 105
     394:	39 f4       	brne	.+14     	; 0x3a4 <main+0x11e>
					{
						paraDeter = 2;
						wireless_int(KiIni);
     396:	c5 01       	movw	r24, r10
     398:	0e 94 11 11 	call	0x2222	; 0x2222 <wireless_int>
						paraDeter = 1;
						wireless_int(KpIni);
					}
					if ((buffer[0]=='k')&&(buffer[1]=='i'))
					{
						paraDeter = 2;
     39c:	88 24       	eor	r8, r8
     39e:	99 24       	eor	r9, r9
     3a0:	68 94       	set
     3a2:	81 f8       	bld	r8, 1
						wireless_int(KiIni);
					}
					if ((buffer[0]=='k')&&(buffer[1]=='d'))
     3a4:	f6 01       	movw	r30, r12
     3a6:	80 81       	ld	r24, Z
     3a8:	8b 36       	cpi	r24, 0x6B	; 107
     3aa:	69 f4       	brne	.+26     	; 0x3c6 <main+0x140>
     3ac:	d2 01       	movw	r26, r4
     3ae:	8c 91       	ld	r24, X
     3b0:	84 36       	cpi	r24, 0x64	; 100
     3b2:	49 f4       	brne	.+18     	; 0x3c6 <main+0x140>
					{
						paraDeter = 3;
						wireless_int(KdIni);
     3b4:	8a a5       	lds	r24, 0x6a
     3b6:	9b a5       	lds	r25, 0x6b
     3b8:	0e 94 11 11 	call	0x2222	; 0x2222 <wireless_int>
						paraDeter = 2;
						wireless_int(KiIni);
					}
					if ((buffer[0]=='k')&&(buffer[1]=='d'))
					{
						paraDeter = 3;
     3bc:	0f 2e       	mov	r0, r31
     3be:	f3 e0       	ldi	r31, 0x03	; 3
     3c0:	8f 2e       	mov	r8, r31
     3c2:	99 24       	eor	r9, r9
     3c4:	f0 2d       	mov	r31, r0
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3c6:	e3 ed       	ldi	r30, 0xD3	; 211
     3c8:	f0 e3       	ldi	r31, 0x30	; 48
     3ca:	31 97       	sbiw	r30, 0x01	; 1
     3cc:	f1 f7       	brne	.-4      	; 0x3ca <main+0x144>
     3ce:	00 c0       	rjmp	.+0      	; 0x3d0 <main+0x14a>
     3d0:	00 00       	nop
						wireless_int(KdIni);
					}
					m_wait(50);
					wireless_char('\n');
     3d2:	8a e0       	ldi	r24, 0x0A	; 10
     3d4:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
					switchNum++;
     3d8:	0f 5f       	subi	r16, 0xFF	; 255
     3da:	1f 4f       	sbci	r17, 0xFF	; 255
     3dc:	58 c0       	rjmp	.+176    	; 0x48e <main+0x208>
				}else{
					// change the parameter, and if the input is not a value, it will send back "SayAgain" and wait untill the input is a value
					getValue = atoi(buffer);
     3de:	c6 01       	movw	r24, r12
     3e0:	0e 94 d8 13 	call	0x27b0	; 0x27b0 <atoi>
     3e4:	8c 01       	movw	r16, r24
					if ((getValue==0)&&(buffer[0]!='0'))
     3e6:	00 97       	sbiw	r24, 0x00	; 0
     3e8:	19 f5       	brne	.+70     	; 0x430 <main+0x1aa>
     3ea:	d6 01       	movw	r26, r12
     3ec:	8c 91       	ld	r24, X
     3ee:	80 33       	cpi	r24, 0x30	; 48
     3f0:	f9 f0       	breq	.+62     	; 0x430 <main+0x1aa>
					{
						char Sorry1[8] = "SayAgain";
     3f2:	fe 01       	movw	r30, r28
     3f4:	78 96       	adiw	r30, 0x18	; 24
     3f6:	d1 01       	movw	r26, r2
     3f8:	88 e0       	ldi	r24, 0x08	; 8
     3fa:	0d 90       	ld	r0, X+
     3fc:	01 92       	st	Z+, r0
     3fe:	81 50       	subi	r24, 0x01	; 1
     400:	e1 f7       	brne	.-8      	; 0x3fa <main+0x174>
						wireless_string(Sorry1,8);
     402:	ce 01       	movw	r24, r28
     404:	48 96       	adiw	r24, 0x18	; 24
     406:	68 e0       	ldi	r22, 0x08	; 8
     408:	70 e0       	ldi	r23, 0x00	; 0
     40a:	0e 94 8f 11 	call	0x231e	; 0x231e <wireless_string>
     40e:	e3 ed       	ldi	r30, 0xD3	; 211
     410:	f0 e3       	ldi	r31, 0x30	; 48
     412:	31 97       	sbiw	r30, 0x01	; 1
     414:	f1 f7       	brne	.-4      	; 0x412 <main+0x18c>
     416:	00 c0       	rjmp	.+0      	; 0x418 <main+0x192>
     418:	00 00       	nop
						m_wait(50);
						wireless_char('\n');
     41a:	8a e0       	ldi	r24, 0x0A	; 10
     41c:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
     420:	83 ed       	ldi	r24, 0xD3	; 211
     422:	90 e3       	ldi	r25, 0x30	; 48
     424:	01 97       	sbiw	r24, 0x01	; 1
     426:	f1 f7       	brne	.-4      	; 0x424 <main+0x19e>
     428:	00 c0       	rjmp	.+0      	; 0x42a <main+0x1a4>
     42a:	00 00       	nop
						m_wait(50);
						switchNum=1;
     42c:	83 01       	movw	r16, r6
					switchNum++;
				}else{
					// change the parameter, and if the input is not a value, it will send back "SayAgain" and wait untill the input is a value
					getValue = atoi(buffer);
					if ((getValue==0)&&(buffer[0]!='0'))
					{
     42e:	2f c0       	rjmp	.+94     	; 0x48e <main+0x208>
						m_wait(50);
						wireless_char('\n');
						m_wait(50);
						switchNum=1;
					}else{
						wireless_string(buffer,packLength);
     430:	c6 01       	movw	r24, r12
     432:	68 e0       	ldi	r22, 0x08	; 8
     434:	70 e0       	ldi	r23, 0x00	; 0
     436:	0e 94 8f 11 	call	0x231e	; 0x231e <wireless_string>
     43a:	a3 ed       	ldi	r26, 0xD3	; 211
     43c:	b0 e3       	ldi	r27, 0x30	; 48
     43e:	11 97       	sbiw	r26, 0x01	; 1
     440:	f1 f7       	brne	.-4      	; 0x43e <main+0x1b8>
     442:	00 c0       	rjmp	.+0      	; 0x444 <main+0x1be>
     444:	00 00       	nop
						m_wait(50);
						wireless_char('\n');
     446:	8a e0       	ldi	r24, 0x0A	; 10
     448:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
     44c:	e3 ed       	ldi	r30, 0xD3	; 211
     44e:	f0 e3       	ldi	r31, 0x30	; 48
     450:	31 97       	sbiw	r30, 0x01	; 1
     452:	f1 f7       	brne	.-4      	; 0x450 <main+0x1ca>
     454:	00 c0       	rjmp	.+0      	; 0x456 <main+0x1d0>
     456:	00 00       	nop
						m_wait(50);
						switchNum=0;
						switch (paraDeter)
     458:	f2 e0       	ldi	r31, 0x02	; 2
     45a:	8f 16       	cp	r8, r31
     45c:	91 04       	cpc	r9, r1
     45e:	59 f0       	breq	.+22     	; 0x476 <main+0x1f0>
     460:	23 e0       	ldi	r18, 0x03	; 3
     462:	82 16       	cp	r8, r18
     464:	91 04       	cpc	r9, r1
     466:	59 f0       	breq	.+22     	; 0x47e <main+0x1f8>
     468:	31 e0       	ldi	r19, 0x01	; 1
     46a:	83 16       	cp	r8, r19
     46c:	91 04       	cpc	r9, r1
     46e:	61 f0       	breq	.+24     	; 0x488 <main+0x202>
					}else{
						wireless_string(buffer,packLength);
						m_wait(50);
						wireless_char('\n');
						m_wait(50);
						switchNum=0;
     470:	00 e0       	ldi	r16, 0x00	; 0
     472:	10 e0       	ldi	r17, 0x00	; 0
     474:	0c c0       	rjmp	.+24     	; 0x48e <main+0x208>
						switch (paraDeter)
						{
							case 1:KpIni=getValue;break;
							case 2:KiIni=getValue;break;
     476:	58 01       	movw	r10, r16
					}else{
						wireless_string(buffer,packLength);
						m_wait(50);
						wireless_char('\n');
						m_wait(50);
						switchNum=0;
     478:	00 e0       	ldi	r16, 0x00	; 0
     47a:	10 e0       	ldi	r17, 0x00	; 0
						switch (paraDeter)
						{
							case 1:KpIni=getValue;break;
							case 2:KiIni=getValue;break;
     47c:	08 c0       	rjmp	.+16     	; 0x48e <main+0x208>
							case 3:KdIni=getValue;break;
     47e:	1b a7       	lds	r17, 0x7b
     480:	0a a7       	lds	r16, 0x7a
					}else{
						wireless_string(buffer,packLength);
						m_wait(50);
						wireless_char('\n');
						m_wait(50);
						switchNum=0;
     482:	00 e0       	ldi	r16, 0x00	; 0
     484:	10 e0       	ldi	r17, 0x00	; 0
						switch (paraDeter)
						{
							case 1:KpIni=getValue;break;
							case 2:KiIni=getValue;break;
							case 3:KdIni=getValue;break;
     486:	03 c0       	rjmp	.+6      	; 0x48e <main+0x208>
						wireless_char('\n');
						m_wait(50);
						switchNum=0;
						switch (paraDeter)
						{
							case 1:KpIni=getValue;break;
     488:	78 01       	movw	r14, r16
					}else{
						wireless_string(buffer,packLength);
						m_wait(50);
						wireless_char('\n');
						m_wait(50);
						switchNum=0;
     48a:	00 e0       	ldi	r16, 0x00	; 0
     48c:	10 e0       	ldi	r17, 0x00	; 0
							case 3:KdIni=getValue;break;
						}
					}
				}
				// when the input is "start", the robot will start
				if ((buffer[0]=='s')&&(buffer[1]=='t')&&(buffer[2]=='a')&&(buffer[3]=='r')&&(buffer[4]=='t'))
     48e:	d6 01       	movw	r26, r12
     490:	8c 91       	ld	r24, X
     492:	83 37       	cpi	r24, 0x73	; 115
     494:	91 f4       	brne	.+36     	; 0x4ba <main+0x234>
     496:	f2 01       	movw	r30, r4
     498:	80 81       	ld	r24, Z
     49a:	84 37       	cpi	r24, 0x74	; 116
     49c:	71 f4       	brne	.+28     	; 0x4ba <main+0x234>
     49e:	a2 e4       	ldi	r26, 0x42	; 66
     4a0:	b1 e0       	ldi	r27, 0x01	; 1
     4a2:	8c 91       	ld	r24, X
     4a4:	81 36       	cpi	r24, 0x61	; 97
     4a6:	49 f4       	brne	.+18     	; 0x4ba <main+0x234>
     4a8:	e3 e4       	ldi	r30, 0x43	; 67
     4aa:	f1 e0       	ldi	r31, 0x01	; 1
     4ac:	80 81       	ld	r24, Z
     4ae:	82 37       	cpi	r24, 0x72	; 114
     4b0:	21 f4       	brne	.+8      	; 0x4ba <main+0x234>
     4b2:	12 96       	adiw	r26, 0x02	; 2
     4b4:	8c 91       	ld	r24, X
     4b6:	84 37       	cpi	r24, 0x74	; 116
     4b8:	f9 f0       	breq	.+62     	; 0x4f8 <main+0x272>
				{
					break;
				}
				ConvertFinishFlag=0;
     4ba:	10 92 49 01 	sts	0x0149, r1
     4be:	10 92 48 01 	sts	0x0148, r1
				memset(buffer,0,packLength);
     4c2:	8c 2d       	mov	r24, r12
     4c4:	9d 2d       	mov	r25, r13
     4c6:	60 e0       	ldi	r22, 0x00	; 0
     4c8:	70 e0       	ldi	r23, 0x00	; 0
     4ca:	48 e0       	ldi	r20, 0x08	; 8
     4cc:	50 e0       	ldi	r21, 0x00	; 0
     4ce:	0e 94 f6 13 	call	0x27ec	; 0x27ec <memset>
     4d2:	e7 ea       	ldi	r30, 0xA7	; 167
     4d4:	f1 e6       	ldi	r31, 0x61	; 97
     4d6:	31 97       	sbiw	r30, 0x01	; 1
     4d8:	f1 f7       	brne	.-4      	; 0x4d6 <main+0x250>
     4da:	00 c0       	rjmp	.+0      	; 0x4dc <main+0x256>
     4dc:	00 00       	nop
     4de:	21 cf       	rjmp	.-446    	; 0x322 <main+0x9c>
	int angleHis1=0,angleHis2=0;
	int inputK=0,inputI=0,inputD=0;
	int Output=0;
	int OutputHis1=2000;
	int OutputHis2=2000;
	int KpIni=KPINI,KiIni=KIINI,KdIni=KDINI;
     4e0:	28 e8       	ldi	r18, 0x88	; 136
     4e2:	33 e1       	ldi	r19, 0x13	; 19
     4e4:	3b a7       	lds	r19, 0x7b
     4e6:	2a a7       	lds	r18, 0x7a
     4e8:	aa 24       	eor	r10, r10
     4ea:	bb 24       	eor	r11, r11
     4ec:	0f 2e       	mov	r0, r31
     4ee:	f8 ee       	ldi	r31, 0xE8	; 232
     4f0:	ef 2e       	mov	r14, r31
     4f2:	f3 e0       	ldi	r31, 0x03	; 3
     4f4:	ff 2e       	mov	r15, r31
     4f6:	f0 2d       	mov	r31, r0
				memset(buffer,0,packLength);
				m_wait(100);
			}
		}
	}
	m_green(OFF);
     4f8:	6a 9a       	sbi	0x0d, 2	; 13
     4fa:	72 9a       	sbi	0x0e, 2	; 14
	// Initializing IMU
	while(!m_imu_init(1,0));
     4fc:	81 e0       	ldi	r24, 0x01	; 1
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	60 e0       	ldi	r22, 0x00	; 0
     502:	70 e0       	ldi	r23, 0x00	; 0
     504:	0e 94 23 09 	call	0x1246	; 0x1246 <m_imu_init>
     508:	00 97       	sbiw	r24, 0x00	; 0
     50a:	c1 f3       	breq	.-16     	; 0x4fc <main+0x276>
     50c:	03 ef       	ldi	r16, 0xF3	; 243
     50e:	11 e0       	ldi	r17, 0x01	; 1
     510:	cc 24       	eor	r12, r12
     512:	dd 24       	eor	r13, r13
     514:	1f a2       	lds	r17, 0x9f
     516:	1e a2       	lds	r17, 0x9e
     518:	1d a2       	lds	r17, 0x9d
     51a:	1c a2       	lds	r17, 0x9c
	int AngleHis=0;
	// calibrate the balance angle value, the code here is trying to find out offset of the angle
	for (int numpoint=0;numpoint<499;numpoint++)
	{
		if(m_imu_raw(Data))
     51c:	22 24       	eor	r2, r2
     51e:	33 24       	eor	r3, r3
     520:	44 24       	eor	r4, r4
     522:	55 24       	eor	r5, r5
     524:	37 01       	movw	r6, r14
     526:	75 01       	movw	r14, r10
     528:	ce 01       	movw	r24, r28
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	0e 94 90 09 	call	0x1320	; 0x1320 <m_imu_raw>
     530:	00 97       	sbiw	r24, 0x00	; 0
     532:	41 f1       	breq	.+80     	; 0x584 <main+0x2fe>
		{
			RealinputACC = ACCPART*(Data[1]-ACOFFSET);
     534:	8b 81       	ldd	r24, Y+3	; 0x03
     536:	9c 81       	ldd	r25, Y+4	; 0x04
     538:	0f 2e       	mov	r0, r31
     53a:	f6 ed       	ldi	r31, 0xD6	; 214
     53c:	2f 2e       	mov	r2, r31
     53e:	ff ef       	ldi	r31, 0xFF	; 255
     540:	3f 2e       	mov	r3, r31
     542:	f0 2d       	mov	r31, r0
     544:	28 0e       	add	r2, r24
     546:	39 1e       	adc	r3, r25
			RealinputGyr = GYRPART*(GYOFFSET-Data[3]);
     548:	8f 81       	ldd	r24, Y+7	; 0x07
     54a:	98 85       	ldd	r25, Y+8	; 0x08
     54c:	44 24       	eor	r4, r4
     54e:	55 24       	eor	r5, r5
     550:	68 94       	set
     552:	45 f8       	bld	r4, 5
     554:	48 0e       	add	r4, r24
     556:	59 1e       	adc	r5, r25
			Kalman_Filter(RealinputACC,RealinputGyr);
     558:	b1 01       	movw	r22, r2
     55a:	88 27       	eor	r24, r24
     55c:	77 fd       	sbrc	r23, 7
     55e:	80 95       	com	r24
     560:	98 2f       	mov	r25, r24
     562:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     566:	4b 01       	movw	r8, r22
     568:	5c 01       	movw	r10, r24
     56a:	b2 01       	movw	r22, r4
     56c:	88 27       	eor	r24, r24
     56e:	77 fd       	sbrc	r23, 7
     570:	80 95       	com	r24
     572:	98 2f       	mov	r25, r24
     574:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     578:	9b 01       	movw	r18, r22
     57a:	ac 01       	movw	r20, r24
     57c:	c5 01       	movw	r24, r10
     57e:	b4 01       	movw	r22, r8
     580:	0e 94 88 05 	call	0xb10	; 0xb10 <Kalman_Filter>
		}
		AngleHis+=angle;
     584:	b6 01       	movw	r22, r12
     586:	88 27       	eor	r24, r24
     588:	77 fd       	sbrc	r23, 7
     58a:	80 95       	com	r24
     58c:	98 2f       	mov	r25, r24
     58e:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     592:	20 91 78 01 	lds	r18, 0x0178
     596:	30 91 79 01 	lds	r19, 0x0179
     59a:	40 91 7a 01 	lds	r20, 0x017A
     59e:	50 91 7b 01 	lds	r21, 0x017B
     5a2:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     5a6:	46 2f       	mov	r20, r22
     5a8:	57 2f       	mov	r21, r23
     5aa:	68 2f       	mov	r22, r24
     5ac:	79 2f       	mov	r23, r25
     5ae:	cb 01       	movw	r24, r22
     5b0:	ba 01       	movw	r22, r20
     5b2:	0e 94 8f 12 	call	0x251e	; 0x251e <__fixsfsi>
     5b6:	6b 01       	movw	r12, r22
     5b8:	01 50       	subi	r16, 0x01	; 1
     5ba:	10 40       	sbci	r17, 0x00	; 0
	m_green(OFF);
	// Initializing IMU
	while(!m_imu_init(1,0));
	int AngleHis=0;
	// calibrate the balance angle value, the code here is trying to find out offset of the angle
	for (int numpoint=0;numpoint<499;numpoint++)
     5bc:	09 f0       	breq	.+2      	; 0x5c0 <main+0x33a>
     5be:	b4 cf       	rjmp	.-152    	; 0x528 <main+0x2a2>
     5c0:	3d a2       	lds	r19, 0x9d
     5c2:	2c a2       	lds	r18, 0x9c
     5c4:	5f a2       	lds	r21, 0x9f
     5c6:	4e a2       	lds	r20, 0x9e
     5c8:	57 01       	movw	r10, r14
     5ca:	73 01       	movw	r14, r6
			RealinputGyr = GYRPART*(GYOFFSET-Data[3]);
			Kalman_Filter(RealinputACC,RealinputGyr);
		}
		AngleHis+=angle;
	}
	AngleCali = AngleHis/500;
     5cc:	cb 01       	movw	r24, r22
     5ce:	64 ef       	ldi	r22, 0xF4	; 244
     5d0:	71 e0       	ldi	r23, 0x01	; 1
     5d2:	0e 94 b1 13 	call	0x2762	; 0x2762 <__divmodhi4>
	// Enable timer interrupt and global interrupt
	set(TIMSK3 , OCIE3A);
     5d6:	e1 e7       	ldi	r30, 0x71	; 113
     5d8:	f0 e0       	ldi	r31, 0x00	; 0
     5da:	80 81       	ld	r24, Z
     5dc:	82 60       	ori	r24, 0x02	; 2
     5de:	80 83       	st	Z, r24
	// Initializing the pin change interrupt which will capture the phase of the signal input of the encoder
	set(PCMSK0 , PCINT4);
     5e0:	eb e6       	ldi	r30, 0x6B	; 107
     5e2:	f0 e0       	ldi	r31, 0x00	; 0
     5e4:	80 81       	ld	r24, Z
     5e6:	80 61       	ori	r24, 0x10	; 16
     5e8:	80 83       	st	Z, r24
	set(PCICR , PCIE0);
     5ea:	e8 e6       	ldi	r30, 0x68	; 104
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	80 81       	ld	r24, Z
     5f0:	81 60       	ori	r24, 0x01	; 1
     5f2:	80 83       	st	Z, r24
	clear(DDRB,4);
     5f4:	24 98       	cbi	0x04, 4	; 4
	clear(DDRB,5);
     5f6:	25 98       	cbi	0x04, 5	; 4
	sei();
     5f8:	78 94       	sei
	int AngleActual=0;
	// Parameters for speed control
	int speed = 0;
	// PID variables for speed controller
	int speedHis1 = 0, speedHis2 = 0;
	int speedI = 0, speedD = 0;
     5fa:	22 24       	eor	r2, r2
     5fc:	33 24       	eor	r3, r3
	float Ki = 0;
	float Kd = 0.5;
	int AngleCali = 0;
	int AngleActual=0;
	// Parameters for speed control
	int speed = 0;
     5fe:	66 24       	eor	r6, r6
     600:	77 24       	eor	r7, r7
	int output;
	int angleHis1=0,angleHis2=0;
	int inputK=0,inputI=0,inputD=0;
	int Output=0;
	int OutputHis1=2000;
	int OutputHis2=2000;
     602:	0f 2e       	mov	r0, r31
     604:	f0 ed       	ldi	r31, 0xD0	; 208
     606:	4f 2e       	mov	r4, r31
     608:	f7 e0       	ldi	r31, 0x07	; 7
     60a:	5f 2e       	mov	r5, r31
     60c:	f0 2d       	mov	r31, r0
	//variables for PID control
	int output;
	int angleHis1=0,angleHis2=0;
	int inputK=0,inputI=0,inputD=0;
	int Output=0;
	int OutputHis1=2000;
     60e:	40 ed       	ldi	r20, 0xD0	; 208
     610:	57 e0       	ldi	r21, 0x07	; 7
     612:	59 a3       	lds	r21, 0x59
     614:	48 a3       	lds	r20, 0x58
	int tmp=0;
	int getValue=0;
	//variables for PID control
	int output;
	int angleHis1=0,angleHis2=0;
	int inputK=0,inputI=0,inputD=0;
     616:	19 a6       	lds	r17, 0xb9
     618:	18 a6       	lds	r17, 0xb8
	//temporary variables for test
	int tmp=0;
	int getValue=0;
	//variables for PID control
	int output;
	int angleHis1=0,angleHis2=0;
     61a:	1b a2       	lds	r17, 0x9b
     61c:	1a a2       	lds	r17, 0x9a
			// read the changed parameter, because the wireless cannot send float, so change it to float here
			Kp = (float)KpIni/1000;
			Ki = (float)KiIni/1000;
			Kd = (float)KdIni/1000;
			// calibrate the angle value by using the balance offset of the angle
			AngleActual = angle-AngleCali;
     61e:	cb 01       	movw	r24, r22
     620:	aa 27       	eor	r26, r26
     622:	97 fd       	sbrc	r25, 7
     624:	a0 95       	com	r26
     626:	ba 2f       	mov	r27, r26
     628:	8e a7       	lds	r24, 0x7e
     62a:	9f a7       	lds	r25, 0x7f
     62c:	a8 ab       	sts	0x58, r26
     62e:	b9 ab       	sts	0x59, r27
			RealinputACC = ACCPART*(Data[1]-ACOFFSET);	//The acceleration input without offset
			RealinputGyr = GYRPART*(Data[3]-GYOFFSET);	//The anglar velocity input without offset
			Kalman_Filter(RealinputACC,RealinputGyr);	//Using the Kalman Filter to get the reliable output of the angle

			// read the changed parameter, because the wireless cannot send float, so change it to float here
			Kp = (float)KpIni/1000;
     630:	97 01       	movw	r18, r14
     632:	44 27       	eor	r20, r20
     634:	37 fd       	sbrc	r19, 7
     636:	40 95       	com	r20
     638:	54 2f       	mov	r21, r20
     63a:	2a ab       	sts	0x5a, r18
     63c:	3b ab       	sts	0x5b, r19
     63e:	4c ab       	sts	0x5c, r20
     640:	5d ab       	sts	0x5d, r21
			Ki = (float)KiIni/1000;
     642:	c5 01       	movw	r24, r10
     644:	aa 27       	eor	r26, r26
     646:	97 fd       	sbrc	r25, 7
     648:	a0 95       	com	r26
     64a:	ba 2f       	mov	r27, r26
     64c:	8e ab       	sts	0x5e, r24
     64e:	9f ab       	sts	0x5f, r25
     650:	a8 af       	sts	0x78, r26
     652:	b9 af       	sts	0x79, r27
			Kd = (float)KdIni/1000;
     654:	2a a5       	lds	r18, 0x6a
     656:	3b a5       	lds	r19, 0x6b
     658:	44 27       	eor	r20, r20
     65a:	37 fd       	sbrc	r19, 7
     65c:	40 95       	com	r20
     65e:	54 2f       	mov	r21, r20
     660:	2a a7       	lds	r18, 0x7a
     662:	3b a7       	lds	r19, 0x7b
     664:	4c a7       	lds	r20, 0x7c
     666:	5d a7       	lds	r21, 0x7d
	Kps = 4;
	Kds = 5;
	Kis = 0.5;
    while(1)
    {
		if (Timer3Flag==1)		//Here is the control loop, all the data sample process and output should be here
     668:	80 91 4e 01 	lds	r24, 0x014E
     66c:	90 91 4f 01 	lds	r25, 0x014F
     670:	81 30       	cpi	r24, 0x01	; 1
     672:	91 05       	cpc	r25, r1
     674:	09 f0       	breq	.+2      	; 0x678 <main+0x3f2>
     676:	4f c1       	rjmp	.+670    	; 0x916 <main+0x690>
		{
			cli();	//Try to reduce the possibility of changing the data read from IIC, cause multiple device will use the same line and there also different interrupt in the program
     678:	f8 94       	cli
			// read data from IMU
			if(m_imu_raw(Data))
     67a:	ce 01       	movw	r24, r28
     67c:	01 96       	adiw	r24, 0x01	; 1
     67e:	0e 94 90 09 	call	0x1320	; 0x1320 <m_imu_raw>
     682:	00 97       	sbiw	r24, 0x00	; 0
     684:	29 f0       	breq	.+10     	; 0x690 <main+0x40a>
			{
				m_red(TOGGLE);
     686:	6e 9a       	sbi	0x0d, 6	; 13
     688:	9e b1       	in	r25, 0x0e	; 14
     68a:	80 e4       	ldi	r24, 0x40	; 64
     68c:	89 27       	eor	r24, r25
     68e:	8e b9       	out	0x0e, r24	; 14
			}
			// make the input value get rid of the offset
			RealinputACC = ACCPART*(Data[1]-ACOFFSET);	//The acceleration input without offset
     690:	8b 81       	ldd	r24, Y+3	; 0x03
     692:	9c 81       	ldd	r25, Y+4	; 0x04
     694:	ac 01       	movw	r20, r24
     696:	4a 52       	subi	r20, 0x2A	; 42
     698:	50 40       	sbci	r21, 0x00	; 0
     69a:	5d a3       	lds	r21, 0x5d
     69c:	4c a3       	lds	r20, 0x5c
			RealinputGyr = GYRPART*(Data[3]-GYOFFSET);	//The anglar velocity input without offset
     69e:	8f 81       	ldd	r24, Y+7	; 0x07
     6a0:	98 85       	ldd	r25, Y+8	; 0x08
     6a2:	a4 ee       	ldi	r26, 0xE4	; 228
     6a4:	bf ef       	ldi	r27, 0xFF	; 255
     6a6:	a8 1b       	sub	r26, r24
     6a8:	b9 0b       	sbc	r27, r25
     6aa:	bf a3       	lds	r27, 0x5f
     6ac:	ae a3       	lds	r26, 0x5e
			Kalman_Filter(RealinputACC,RealinputGyr);	//Using the Kalman Filter to get the reliable output of the angle
     6ae:	ba 01       	movw	r22, r20
     6b0:	88 27       	eor	r24, r24
     6b2:	77 fd       	sbrc	r23, 7
     6b4:	80 95       	com	r24
     6b6:	98 2f       	mov	r25, r24
     6b8:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     6bc:	6b 01       	movw	r12, r22
     6be:	7c 01       	movw	r14, r24
     6c0:	ee a1       	lds	r30, 0x4e
     6c2:	ff a1       	lds	r31, 0x4f
     6c4:	bf 01       	movw	r22, r30
     6c6:	88 27       	eor	r24, r24
     6c8:	77 fd       	sbrc	r23, 7
     6ca:	80 95       	com	r24
     6cc:	98 2f       	mov	r25, r24
     6ce:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     6d2:	9b 01       	movw	r18, r22
     6d4:	ac 01       	movw	r20, r24
     6d6:	c7 01       	movw	r24, r14
     6d8:	b6 01       	movw	r22, r12
     6da:	0e 94 88 05 	call	0xb10	; 0xb10 <Kalman_Filter>
			// read the changed parameter, because the wireless cannot send float, so change it to float here
			Kp = (float)KpIni/1000;
			Ki = (float)KiIni/1000;
			Kd = (float)KdIni/1000;
			// calibrate the angle value by using the balance offset of the angle
			AngleActual = angle-AngleCali;
     6de:	6e a5       	lds	r22, 0x6e
     6e0:	7f a5       	lds	r23, 0x6f
     6e2:	88 a9       	sts	0x48, r24
     6e4:	99 a9       	sts	0x49, r25
     6e6:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     6ea:	9b 01       	movw	r18, r22
     6ec:	ac 01       	movw	r20, r24
     6ee:	60 91 78 01 	lds	r22, 0x0178
     6f2:	70 91 79 01 	lds	r23, 0x0179
     6f6:	80 91 7a 01 	lds	r24, 0x017A
     6fa:	90 91 7b 01 	lds	r25, 0x017B
     6fe:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     702:	0e 94 8f 12 	call	0x251e	; 0x251e <__fixsfsi>
     706:	dc 01       	movw	r26, r24
     708:	cb 01       	movw	r24, r22
     70a:	8c 01       	movw	r16, r24
			inputK = AngleActual-angleHis1;
			inputI +=AngleActual;
     70c:	28 a5       	lds	r18, 0x68
     70e:	39 a5       	lds	r19, 0x69
     710:	28 0f       	add	r18, r24
     712:	39 1f       	adc	r19, r25
     714:	39 a7       	lds	r19, 0x79
     716:	28 a7       	lds	r18, 0x78

			// PID controller, which you will find that Ki always be zero
			Output = Kp*AngleActual + Ki*inputI + Kd*inputK;
     718:	b8 01       	movw	r22, r16
     71a:	88 27       	eor	r24, r24
     71c:	77 fd       	sbrc	r23, 7
     71e:	80 95       	com	r24
     720:	98 2f       	mov	r25, r24
     722:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     726:	6b 01       	movw	r12, r22
     728:	7c 01       	movw	r14, r24
			RealinputACC = ACCPART*(Data[1]-ACOFFSET);	//The acceleration input without offset
			RealinputGyr = GYRPART*(Data[3]-GYOFFSET);	//The anglar velocity input without offset
			Kalman_Filter(RealinputACC,RealinputGyr);	//Using the Kalman Filter to get the reliable output of the angle

			// read the changed parameter, because the wireless cannot send float, so change it to float here
			Kp = (float)KpIni/1000;
     72a:	6a a9       	sts	0x4a, r22
     72c:	7b a9       	sts	0x4b, r23
     72e:	8c a9       	sts	0x4c, r24
     730:	9d a9       	sts	0x4d, r25
     732:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     736:	20 e0       	ldi	r18, 0x00	; 0
     738:	30 e0       	ldi	r19, 0x00	; 0
     73a:	4a e7       	ldi	r20, 0x7A	; 122
     73c:	54 e4       	ldi	r21, 0x44	; 68
     73e:	0e 94 27 12 	call	0x244e	; 0x244e <__divsf3>
     742:	9b 01       	movw	r18, r22
     744:	ac 01       	movw	r20, r24
			AngleActual = angle-AngleCali;
			inputK = AngleActual-angleHis1;
			inputI +=AngleActual;

			// PID controller, which you will find that Ki always be zero
			Output = Kp*AngleActual + Ki*inputI + Kd*inputK;
     746:	c7 01       	movw	r24, r14
     748:	b6 01       	movw	r22, r12
     74a:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     74e:	4b 01       	movw	r8, r22
     750:	5c 01       	movw	r10, r24
     752:	48 a5       	lds	r20, 0x68
     754:	59 a5       	lds	r21, 0x69
     756:	ba 01       	movw	r22, r20
     758:	88 27       	eor	r24, r24
     75a:	77 fd       	sbrc	r23, 7
     75c:	80 95       	com	r24
     75e:	98 2f       	mov	r25, r24
     760:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     764:	6b 01       	movw	r12, r22
     766:	7c 01       	movw	r14, r24
			RealinputGyr = GYRPART*(Data[3]-GYOFFSET);	//The anglar velocity input without offset
			Kalman_Filter(RealinputACC,RealinputGyr);	//Using the Kalman Filter to get the reliable output of the angle

			// read the changed parameter, because the wireless cannot send float, so change it to float here
			Kp = (float)KpIni/1000;
			Ki = (float)KiIni/1000;
     768:	6e a9       	sts	0x4e, r22
     76a:	7f a9       	sts	0x4f, r23
     76c:	88 ad       	sts	0x68, r24
     76e:	99 ad       	sts	0x69, r25
     770:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     774:	20 e0       	ldi	r18, 0x00	; 0
     776:	30 e0       	ldi	r19, 0x00	; 0
     778:	4a e7       	ldi	r20, 0x7A	; 122
     77a:	54 e4       	ldi	r21, 0x44	; 68
     77c:	0e 94 27 12 	call	0x244e	; 0x244e <__divsf3>
     780:	9b 01       	movw	r18, r22
     782:	ac 01       	movw	r20, r24
			AngleActual = angle-AngleCali;
			inputK = AngleActual-angleHis1;
			inputI +=AngleActual;

			// PID controller, which you will find that Ki always be zero
			Output = Kp*AngleActual + Ki*inputI + Kd*inputK;
     784:	c7 01       	movw	r24, r14
     786:	b6 01       	movw	r22, r12
     788:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     78c:	9b 01       	movw	r18, r22
     78e:	ac 01       	movw	r20, r24
     790:	c5 01       	movw	r24, r10
     792:	b4 01       	movw	r22, r8
     794:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     798:	4b 01       	movw	r8, r22
     79a:	5c 01       	movw	r10, r24
			Kp = (float)KpIni/1000;
			Ki = (float)KiIni/1000;
			Kd = (float)KdIni/1000;
			// calibrate the angle value by using the balance offset of the angle
			AngleActual = angle-AngleCali;
			inputK = AngleActual-angleHis1;
     79c:	b8 01       	movw	r22, r16
     79e:	8a a1       	lds	r24, 0x4a
     7a0:	9b a1       	lds	r25, 0x4b
     7a2:	68 1b       	sub	r22, r24
     7a4:	79 0b       	sbc	r23, r25
			inputI +=AngleActual;

			// PID controller, which you will find that Ki always be zero
			Output = Kp*AngleActual + Ki*inputI + Kd*inputK;
     7a6:	88 27       	eor	r24, r24
     7a8:	77 fd       	sbrc	r23, 7
     7aa:	80 95       	com	r24
     7ac:	98 2f       	mov	r25, r24
     7ae:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     7b2:	6b 01       	movw	r12, r22
     7b4:	7c 01       	movw	r14, r24
			Kalman_Filter(RealinputACC,RealinputGyr);	//Using the Kalman Filter to get the reliable output of the angle

			// read the changed parameter, because the wireless cannot send float, so change it to float here
			Kp = (float)KpIni/1000;
			Ki = (float)KiIni/1000;
			Kd = (float)KdIni/1000;
     7b6:	6a a5       	lds	r22, 0x6a
     7b8:	7b a5       	lds	r23, 0x6b
     7ba:	8c a5       	lds	r24, 0x6c
     7bc:	9d a5       	lds	r25, 0x6d
     7be:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	4a e7       	ldi	r20, 0x7A	; 122
     7c8:	54 e4       	ldi	r21, 0x44	; 68
     7ca:	0e 94 27 12 	call	0x244e	; 0x244e <__divsf3>
     7ce:	9b 01       	movw	r18, r22
     7d0:	ac 01       	movw	r20, r24
			AngleActual = angle-AngleCali;
			inputK = AngleActual-angleHis1;
			inputI +=AngleActual;

			// PID controller, which you will find that Ki always be zero
			Output = Kp*AngleActual + Ki*inputI + Kd*inputK;
     7d2:	c7 01       	movw	r24, r14
     7d4:	b6 01       	movw	r22, r12
     7d6:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     7da:	9b 01       	movw	r18, r22
     7dc:	ac 01       	movw	r20, r24
     7de:	c5 01       	movw	r24, r10
     7e0:	b4 01       	movw	r22, r8
     7e2:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     7e6:	0e 94 8f 12 	call	0x251e	; 0x251e <__fixsfsi>
     7ea:	dc 01       	movw	r26, r24
     7ec:	cb 01       	movw	r24, r22
     7ee:	9c 01       	movw	r18, r24
			
			// dead region, which means the value in this region won't give the wheels a speed, so remove it from output to make the output speed linear with the input angle
			if (AngleActual>0)
     7f0:	10 16       	cp	r1, r16
     7f2:	11 06       	cpc	r1, r17
     7f4:	3c f4       	brge	.+14     	; 0x804 <main+0x57e>
			{
				OutputHis1 =1823-Output;
     7f6:	8f e1       	ldi	r24, 0x1F	; 31
     7f8:	97 e0       	ldi	r25, 0x07	; 7
     7fa:	dc 01       	movw	r26, r24
     7fc:	a2 1b       	sub	r26, r18
     7fe:	b3 0b       	sbc	r27, r19
     800:	b9 a3       	lds	r27, 0x59
     802:	a8 a3       	lds	r26, 0x58
			}
			if (AngleActual<0)
     804:	11 23       	and	r17, r17
     806:	34 f4       	brge	.+12     	; 0x814 <main+0x58e>
			{
				OutputHis1 =2193-Output;
     808:	e1 e9       	ldi	r30, 0x91	; 145
     80a:	f8 e0       	ldi	r31, 0x08	; 8
     80c:	e2 1b       	sub	r30, r18
     80e:	f3 0b       	sbc	r31, r19
     810:	f9 a3       	lds	r31, 0x59
     812:	e8 a3       	lds	r30, 0x58
			}
			if (AngleActual==0)
     814:	01 15       	cp	r16, r1
     816:	11 05       	cpc	r17, r1
     818:	b1 f4       	brne	.+44     	; 0x846 <main+0x5c0>
			{
				if (angleHis1>0)
     81a:	4a a1       	lds	r20, 0x4a
     81c:	5b a1       	lds	r21, 0x4b
     81e:	14 16       	cp	r1, r20
     820:	15 06       	cpc	r1, r21
     822:	24 f4       	brge	.+8      	; 0x82c <main+0x5a6>
				{
					OutputHis1 =1823;
     824:	8f e1       	ldi	r24, 0x1F	; 31
     826:	97 e0       	ldi	r25, 0x07	; 7
     828:	99 a3       	lds	r25, 0x59
     82a:	88 a3       	lds	r24, 0x58
				}
				if (angleHis1<0)
     82c:	aa a1       	lds	r26, 0x4a
     82e:	bb a1       	lds	r27, 0x4b
     830:	bb 23       	and	r27, r27
     832:	1c f0       	brlt	.+6      	; 0x83a <main+0x5b4>
				{
					OutputHis1 =2193;
				}
				if (angleHis1=0)
     834:	1b a2       	lds	r17, 0x9b
     836:	1a a2       	lds	r17, 0x9a
     838:	06 c0       	rjmp	.+12     	; 0x846 <main+0x5c0>
				{
					OutputHis1 =1823;
				}
				if (angleHis1<0)
				{
					OutputHis1 =2193;
     83a:	e1 e9       	ldi	r30, 0x91	; 145
     83c:	f8 e0       	ldi	r31, 0x08	; 8
     83e:	f9 a3       	lds	r31, 0x59
     840:	e8 a3       	lds	r30, 0x58
				}
				if (angleHis1=0)
     842:	1b a2       	lds	r17, 0x9b
     844:	1a a2       	lds	r17, 0x9a
				{
					OutputHis1 =OutputHis1;
				}
			}
			if (AngleActual>0)
     846:	10 16       	cp	r1, r16
     848:	11 06       	cpc	r1, r17
     84a:	44 f4       	brge	.+16     	; 0x85c <main+0x5d6>
			{
				OutputHis2 =1857-Output;
     84c:	0f 2e       	mov	r0, r31
     84e:	f1 e4       	ldi	r31, 0x41	; 65
     850:	4f 2e       	mov	r4, r31
     852:	f7 e0       	ldi	r31, 0x07	; 7
     854:	5f 2e       	mov	r5, r31
     856:	f0 2d       	mov	r31, r0
     858:	42 1a       	sub	r4, r18
     85a:	53 0a       	sbc	r5, r19
			}
			if (AngleActual<0)
     85c:	11 23       	and	r17, r17
     85e:	44 f4       	brge	.+16     	; 0x870 <main+0x5ea>
			{
				OutputHis2 =2148-Output;
     860:	0f 2e       	mov	r0, r31
     862:	f4 e6       	ldi	r31, 0x64	; 100
     864:	4f 2e       	mov	r4, r31
     866:	f8 e0       	ldi	r31, 0x08	; 8
     868:	5f 2e       	mov	r5, r31
     86a:	f0 2d       	mov	r31, r0
     86c:	42 1a       	sub	r4, r18
     86e:	53 0a       	sbc	r5, r19
			}
			if (AngleActual==0)
     870:	01 15       	cp	r16, r1
     872:	11 05       	cpc	r17, r1
     874:	a9 f4       	brne	.+42     	; 0x8a0 <main+0x61a>
			{
				if (angleHis1>0)
     876:	2a a1       	lds	r18, 0x4a
     878:	3b a1       	lds	r19, 0x4b
     87a:	12 16       	cp	r1, r18
     87c:	13 06       	cpc	r1, r19
     87e:	34 f4       	brge	.+12     	; 0x88c <main+0x606>
				{
					OutputHis2 =1857;
     880:	0f 2e       	mov	r0, r31
     882:	f1 e4       	ldi	r31, 0x41	; 65
     884:	4f 2e       	mov	r4, r31
     886:	f7 e0       	ldi	r31, 0x07	; 7
     888:	5f 2e       	mov	r5, r31
     88a:	f0 2d       	mov	r31, r0
				}
				if (angleHis1<0)
     88c:	4a a1       	lds	r20, 0x4a
     88e:	5b a1       	lds	r21, 0x4b
     890:	55 23       	and	r21, r21
     892:	34 f4       	brge	.+12     	; 0x8a0 <main+0x61a>
				{
					OutputHis2 =2148;
     894:	0f 2e       	mov	r0, r31
     896:	f4 e6       	ldi	r31, 0x64	; 100
     898:	4f 2e       	mov	r4, r31
     89a:	f8 e0       	ldi	r31, 0x08	; 8
     89c:	5f 2e       	mov	r5, r31
     89e:	f0 2d       	mov	r31, r0
				{
					OutputHis2 =OutputHis2;
				}
			}
			// Try to check whether the output value in the limitation
			if (OutputHis1>4000)		//Detect the limitation of the output value
     8a0:	88 a1       	lds	r24, 0x48
     8a2:	99 a1       	lds	r25, 0x49
     8a4:	af e0       	ldi	r26, 0x0F	; 15
     8a6:	81 3a       	cpi	r24, 0xA1	; 161
     8a8:	9a 07       	cpc	r25, r26
     8aa:	24 f4       	brge	.+8      	; 0x8b4 <main+0x62e>
			{
				OutputHis1=4000;
			}else{
				if (OutputHis1<3)
     8ac:	83 30       	cpi	r24, 0x03	; 3
     8ae:	91 05       	cpc	r25, r1
     8b0:	34 f0       	brlt	.+12     	; 0x8be <main+0x638>
     8b2:	09 c0       	rjmp	.+18     	; 0x8c6 <main+0x640>
				}
			}
			// Try to check whether the output value in the limitation
			if (OutputHis1>4000)		//Detect the limitation of the output value
			{
				OutputHis1=4000;
     8b4:	e0 ea       	ldi	r30, 0xA0	; 160
     8b6:	ff e0       	ldi	r31, 0x0F	; 15
     8b8:	f9 a3       	lds	r31, 0x59
     8ba:	e8 a3       	lds	r30, 0x58
     8bc:	04 c0       	rjmp	.+8      	; 0x8c6 <main+0x640>
			}else{
				if (OutputHis1<3)
				{
					OutputHis1=3;
     8be:	23 e0       	ldi	r18, 0x03	; 3
     8c0:	30 e0       	ldi	r19, 0x00	; 0
     8c2:	39 a3       	lds	r19, 0x59
     8c4:	28 a3       	lds	r18, 0x58
				}
			}
			if (OutputHis2>4000)		//Detect the limitation of the output value
     8c6:	31 ea       	ldi	r19, 0xA1	; 161
     8c8:	43 16       	cp	r4, r19
     8ca:	3f e0       	ldi	r19, 0x0F	; 15
     8cc:	53 06       	cpc	r5, r19
     8ce:	2c f4       	brge	.+10     	; 0x8da <main+0x654>
			{
				OutputHis2=4000;
			}else{
				if (OutputHis2<3)
     8d0:	43 e0       	ldi	r20, 0x03	; 3
     8d2:	44 16       	cp	r4, r20
     8d4:	51 04       	cpc	r5, r1
     8d6:	44 f0       	brlt	.+16     	; 0x8e8 <main+0x662>
     8d8:	0c c0       	rjmp	.+24     	; 0x8f2 <main+0x66c>
					OutputHis1=3;
				}
			}
			if (OutputHis2>4000)		//Detect the limitation of the output value
			{
				OutputHis2=4000;
     8da:	0f 2e       	mov	r0, r31
     8dc:	f0 ea       	ldi	r31, 0xA0	; 160
     8de:	4f 2e       	mov	r4, r31
     8e0:	ff e0       	ldi	r31, 0x0F	; 15
     8e2:	5f 2e       	mov	r5, r31
     8e4:	f0 2d       	mov	r31, r0
     8e6:	05 c0       	rjmp	.+10     	; 0x8f2 <main+0x66c>
			}else{
				if (OutputHis2<3)
				{
					OutputHis2=3;
     8e8:	0f 2e       	mov	r0, r31
     8ea:	f3 e0       	ldi	r31, 0x03	; 3
     8ec:	4f 2e       	mov	r4, r31
     8ee:	55 24       	eor	r5, r5
     8f0:	f0 2d       	mov	r31, r0
				}
			}
			// set the output duty cycle
			OCR1B = OutputHis1;	// for B6
     8f2:	e8 a1       	lds	r30, 0x48
     8f4:	f9 a1       	lds	r31, 0x49
     8f6:	aa e8       	ldi	r26, 0x8A	; 138
     8f8:	b0 e0       	ldi	r27, 0x00	; 0
     8fa:	11 96       	adiw	r26, 0x01	; 1
     8fc:	fc 93       	st	X, r31
     8fe:	ee 93       	st	-X, r30
			OCR1C = OutputHis2;	// for B7
     900:	ac e8       	ldi	r26, 0x8C	; 140
     902:	b0 e0       	ldi	r27, 0x00	; 0
     904:	11 96       	adiw	r26, 0x01	; 1
     906:	5c 92       	st	X, r5
     908:	4e 92       	st	-X, r4
			
			angleHis2 = angleHis1;	//record value of the angle which will be used in PID controller(differential)
			angleHis1 = AngleActual;//record value of the angle which will be used in PID controller(differential)
			
			Timer3Flag=0;
     90a:	10 92 4f 01 	sts	0x014F, r1
     90e:	10 92 4e 01 	sts	0x014E, r1
			// set the output duty cycle
			OCR1B = OutputHis1;	// for B6
			OCR1C = OutputHis2;	// for B7
			
			angleHis2 = angleHis1;	//record value of the angle which will be used in PID controller(differential)
			angleHis1 = AngleActual;//record value of the angle which will be used in PID controller(differential)
     912:	1b a3       	lds	r17, 0x5b
     914:	0a a3       	lds	r16, 0x5a
			
			Timer3Flag=0;
		}

		if (Timer3Flag2==INTERRUPT1S)	//this condition used to send the wireless data or usb data, cause the frequency here is below 10Hz
     916:	80 91 4c 01 	lds	r24, 0x014C
     91a:	90 91 4d 01 	lds	r25, 0x014D
     91e:	83 31       	cpi	r24, 0x13	; 19
     920:	91 05       	cpc	r25, r1
     922:	09 f0       	breq	.+2      	; 0x926 <main+0x6a0>
     924:	a1 ce       	rjmp	.-702    	; 0x668 <main+0x3e2>
		{
			cli();	// same concern with above
     926:	f8 94       	cli
			
			speed += numPulse;	//red the the value of holes (net value, which means one direction is positive and the other is negative, here is just a summation)
     928:	00 91 3e 01 	lds	r16, 0x013E
     92c:	10 91 3f 01 	lds	r17, 0x013F
     930:	60 0e       	add	r6, r16
     932:	71 1e       	adc	r7, r17
			
			speedI += speed;
     934:	26 0c       	add	r2, r6
     936:	37 1c       	adc	r3, r7
			speedD = speed - speedHis1;
			// PID controller of the speed(displacement actually) 
			outputSpeed = Kps*speed + Kis*speedI + Kds*speedD;
     938:	b3 01       	movw	r22, r6
     93a:	88 27       	eor	r24, r24
     93c:	77 fd       	sbrc	r23, 7
     93e:	80 95       	com	r24
     940:	98 2f       	mov	r25, r24
     942:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     946:	20 e0       	ldi	r18, 0x00	; 0
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	40 e8       	ldi	r20, 0x80	; 128
     94c:	50 e4       	ldi	r21, 0x40	; 64
     94e:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     952:	6b 01       	movw	r12, r22
     954:	7c 01       	movw	r14, r24
     956:	b1 01       	movw	r22, r2
     958:	88 27       	eor	r24, r24
     95a:	77 fd       	sbrc	r23, 7
     95c:	80 95       	com	r24
     95e:	98 2f       	mov	r25, r24
     960:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     964:	20 e0       	ldi	r18, 0x00	; 0
     966:	30 e0       	ldi	r19, 0x00	; 0
     968:	40 e0       	ldi	r20, 0x00	; 0
     96a:	5f e3       	ldi	r21, 0x3F	; 63
     96c:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     970:	9b 01       	movw	r18, r22
     972:	ac 01       	movw	r20, r24
     974:	c7 01       	movw	r24, r14
     976:	b6 01       	movw	r22, r12
     978:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     97c:	6b 01       	movw	r12, r22
     97e:	7c 01       	movw	r14, r24
     980:	b8 01       	movw	r22, r16
     982:	88 27       	eor	r24, r24
     984:	77 fd       	sbrc	r23, 7
     986:	80 95       	com	r24
     988:	98 2f       	mov	r25, r24
     98a:	0e 94 c2 12 	call	0x2584	; 0x2584 <__floatsisf>
     98e:	20 e0       	ldi	r18, 0x00	; 0
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	40 ea       	ldi	r20, 0xA0	; 160
     994:	50 e4       	ldi	r21, 0x40	; 64
     996:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     99a:	9b 01       	movw	r18, r22
     99c:	ac 01       	movw	r20, r24
     99e:	c7 01       	movw	r24, r14
     9a0:	b6 01       	movw	r22, r12
     9a2:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     9a6:	0e 94 8f 12 	call	0x251e	; 0x251e <__fixsfsi>
     9aa:	86 2f       	mov	r24, r22
     9ac:	97 2f       	mov	r25, r23
     9ae:	b1 e0       	ldi	r27, 0x01	; 1
     9b0:	85 3f       	cpi	r24, 0xF5	; 245
     9b2:	9b 07       	cpc	r25, r27
     9b4:	14 f0       	brlt	.+4      	; 0x9ba <main+0x734>
     9b6:	84 ef       	ldi	r24, 0xF4	; 244
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	ee ef       	ldi	r30, 0xFE	; 254
     9bc:	8c 30       	cpi	r24, 0x0C	; 12
     9be:	9e 07       	cpc	r25, r30
     9c0:	14 f4       	brge	.+4      	; 0x9c6 <main+0x740>
     9c2:	8c e0       	ldi	r24, 0x0C	; 12
     9c4:	9e ef       	ldi	r25, 0xFE	; 254
			}
			if (outputSpeed<-500)
			{
				outputSpeed=-500;
			}
			OCR1B = OutputHis1+outputSpeed;
     9c6:	28 a1       	lds	r18, 0x48
     9c8:	39 a1       	lds	r19, 0x49
     9ca:	28 0f       	add	r18, r24
     9cc:	39 1f       	adc	r19, r25
     9ce:	aa e8       	ldi	r26, 0x8A	; 138
     9d0:	b0 e0       	ldi	r27, 0x00	; 0
     9d2:	11 96       	adiw	r26, 0x01	; 1
     9d4:	3c 93       	st	X, r19
     9d6:	2e 93       	st	-X, r18
			OCR1C = OutputHis2+outputSpeed;
     9d8:	84 0d       	add	r24, r4
     9da:	95 1d       	adc	r25, r5
     9dc:	ec e8       	ldi	r30, 0x8C	; 140
     9de:	f0 e0       	ldi	r31, 0x00	; 0
     9e0:	91 83       	std	Z+1, r25	; 0x01
     9e2:	80 83       	st	Z, r24
			
			speedHis2 = speedHis1;
			speedHis1 = speed;
			// all the wireless receiving and sending codes should be wrote here 
			wireless_int(RealinputACC);	// send back value from IMU of acceleration of Y
     9e4:	8c a1       	lds	r24, 0x4c
     9e6:	9d a1       	lds	r25, 0x4d
     9e8:	0e 94 11 11 	call	0x2222	; 0x2222 <wireless_int>
			wireless_char('\t');
     9ec:	89 e0       	ldi	r24, 0x09	; 9
     9ee:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
			wireless_int(RealinputGyr);	// send back value from IMU of angular speed around X
     9f2:	8e a1       	lds	r24, 0x4e
     9f4:	9f a1       	lds	r25, 0x4f
     9f6:	0e 94 11 11 	call	0x2222	; 0x2222 <wireless_int>
			wireless_char('\t');
     9fa:	89 e0       	ldi	r24, 0x09	; 9
     9fc:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
			wireless_int(AngleActual);	// send back the current angle value
     a00:	8a a1       	lds	r24, 0x4a
     a02:	9b a1       	lds	r25, 0x4b
     a04:	0e 94 11 11 	call	0x2222	; 0x2222 <wireless_int>
			wireless_char('\n');
     a08:	8a e0       	ldi	r24, 0x0A	; 10
     a0a:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <wireless_char>
			m_green(TOGGLE);
     a0e:	6a 9a       	sbi	0x0d, 2	; 13
     a10:	9e b1       	in	r25, 0x0e	; 14
     a12:	84 e0       	ldi	r24, 0x04	; 4
     a14:	89 27       	eor	r24, r25
     a16:	8e b9       	out	0x0e, r24	; 14
			Timer3Flag2=0;
     a18:	10 92 4d 01 	sts	0x014D, r1
     a1c:	10 92 4c 01 	sts	0x014C, r1
			// clear the counter
			numPulse = 0;
     a20:	10 92 3f 01 	sts	0x013F, r1
     a24:	10 92 3e 01 	sts	0x013E, r1
			sei();
     a28:	78 94       	sei
     a2a:	1e ce       	rjmp	.-964    	; 0x668 <main+0x3e2>

00000a2c <__vector_9>:
    }
}
// The interrupt for the encoder, when the PORTB4 call the interrupt, if the PORTB5 is high, the wheels turn one direction
// and if the PORTB5 is low, the wheels turn the other direction, which can be observed by a oscillation scope
ISR(PCINT0_vect )
{
     a2c:	1f 92       	push	r1
     a2e:	0f 92       	push	r0
     a30:	0f b6       	in	r0, 0x3f	; 63
     a32:	0f 92       	push	r0
     a34:	11 24       	eor	r1, r1
     a36:	8f 93       	push	r24
     a38:	9f 93       	push	r25
	LeftIn = check(PINB,4);
     a3a:	81 e0       	ldi	r24, 0x01	; 1
     a3c:	90 e0       	ldi	r25, 0x00	; 0
     a3e:	1c 99       	sbic	0x03, 4	; 3
     a40:	02 c0       	rjmp	.+4      	; 0xa46 <__vector_9+0x1a>
     a42:	80 e0       	ldi	r24, 0x00	; 0
     a44:	90 e0       	ldi	r25, 0x00	; 0
     a46:	90 93 3d 01 	sts	0x013D, r25
     a4a:	80 93 3c 01 	sts	0x013C, r24
	RightIn = check(PINB,5);
     a4e:	81 e0       	ldi	r24, 0x01	; 1
     a50:	90 e0       	ldi	r25, 0x00	; 0
     a52:	1d 99       	sbic	0x03, 5	; 3
     a54:	02 c0       	rjmp	.+4      	; 0xa5a <__vector_9+0x2e>
     a56:	80 e0       	ldi	r24, 0x00	; 0
     a58:	90 e0       	ldi	r25, 0x00	; 0
     a5a:	90 93 3b 01 	sts	0x013B, r25
     a5e:	80 93 3a 01 	sts	0x013A, r24
	if (LeftIn==1)
     a62:	80 91 3c 01 	lds	r24, 0x013C
     a66:	90 91 3d 01 	lds	r25, 0x013D
     a6a:	81 30       	cpi	r24, 0x01	; 1
     a6c:	91 05       	cpc	r25, r1
     a6e:	29 f5       	brne	.+74     	; 0xaba <__vector_9+0x8e>
	{
		//numPulse++;
		if (RightIn==0)
     a70:	80 91 3a 01 	lds	r24, 0x013A
     a74:	90 91 3b 01 	lds	r25, 0x013B
     a78:	00 97       	sbiw	r24, 0x00	; 0
     a7a:	81 f4       	brne	.+32     	; 0xa9c <__vector_9+0x70>
		{
			numPulse++;
     a7c:	80 91 3e 01 	lds	r24, 0x013E
     a80:	90 91 3f 01 	lds	r25, 0x013F
     a84:	01 96       	adiw	r24, 0x01	; 1
     a86:	90 93 3f 01 	sts	0x013F, r25
     a8a:	80 93 3e 01 	sts	0x013E, r24
			direction = 1;
     a8e:	81 e0       	ldi	r24, 0x01	; 1
     a90:	90 e0       	ldi	r25, 0x00	; 0
     a92:	90 93 10 01 	sts	0x0110, r25
     a96:	80 93 0f 01 	sts	0x010F, r24
     a9a:	0f c0       	rjmp	.+30     	; 0xaba <__vector_9+0x8e>
		}else{
			numPulse--;
     a9c:	80 91 3e 01 	lds	r24, 0x013E
     aa0:	90 91 3f 01 	lds	r25, 0x013F
     aa4:	01 97       	sbiw	r24, 0x01	; 1
     aa6:	90 93 3f 01 	sts	0x013F, r25
     aaa:	80 93 3e 01 	sts	0x013E, r24
			direction = -1;
     aae:	8f ef       	ldi	r24, 0xFF	; 255
     ab0:	9f ef       	ldi	r25, 0xFF	; 255
     ab2:	90 93 10 01 	sts	0x0110, r25
     ab6:	80 93 0f 01 	sts	0x010F, r24
		}
	}
}
     aba:	9f 91       	pop	r25
     abc:	8f 91       	pop	r24
     abe:	0f 90       	pop	r0
     ac0:	0f be       	out	0x3f, r0	; 63
     ac2:	0f 90       	pop	r0
     ac4:	1f 90       	pop	r1
     ac6:	18 95       	reti

00000ac8 <__vector_32>:
ISR(TIMER3_COMPA_vect) //ms interrupt
{
     ac8:	1f 92       	push	r1
     aca:	0f 92       	push	r0
     acc:	0f b6       	in	r0, 0x3f	; 63
     ace:	0f 92       	push	r0
     ad0:	11 24       	eor	r1, r1
     ad2:	8f 93       	push	r24
     ad4:	9f 93       	push	r25
	Timer3Flag = 1;
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	90 e0       	ldi	r25, 0x00	; 0
     ada:	90 93 4f 01 	sts	0x014F, r25
     ade:	80 93 4e 01 	sts	0x014E, r24
	if (Timer3Flag2<INTERRUPT1S)
     ae2:	80 91 4c 01 	lds	r24, 0x014C
     ae6:	90 91 4d 01 	lds	r25, 0x014D
     aea:	83 31       	cpi	r24, 0x13	; 19
     aec:	91 05       	cpc	r25, r1
     aee:	4c f4       	brge	.+18     	; 0xb02 <__stack+0x3>
	{
		Timer3Flag2++;
     af0:	80 91 4c 01 	lds	r24, 0x014C
     af4:	90 91 4d 01 	lds	r25, 0x014D
     af8:	01 96       	adiw	r24, 0x01	; 1
     afa:	90 93 4d 01 	sts	0x014D, r25
     afe:	80 93 4c 01 	sts	0x014C, r24
	}
	//if (Timer3Flag3<INTERRUPT10MS)
	//{
		//Timer3Flag3++;
	//}
     b02:	9f 91       	pop	r25
     b04:	8f 91       	pop	r24
     b06:	0f 90       	pop	r0
     b08:	0f be       	out	0x3f, r0	; 63
     b0a:	0f 90       	pop	r0
     b0c:	1f 90       	pop	r1
     b0e:	18 95       	reti

00000b10 <Kalman_Filter>:
     b10:	2f 92       	push	r2
     b12:	3f 92       	push	r3
     b14:	4f 92       	push	r4
     b16:	5f 92       	push	r5
     b18:	6f 92       	push	r6
     b1a:	7f 92       	push	r7
     b1c:	8f 92       	push	r8
     b1e:	9f 92       	push	r9
     b20:	af 92       	push	r10
     b22:	bf 92       	push	r11
     b24:	cf 92       	push	r12
     b26:	df 92       	push	r13
     b28:	ef 92       	push	r14
     b2a:	ff 92       	push	r15
     b2c:	0f 93       	push	r16
     b2e:	1f 93       	push	r17
     b30:	cf 93       	push	r28
     b32:	df 93       	push	r29
     b34:	cd b7       	in	r28, 0x3d	; 61
     b36:	de b7       	in	r29, 0x3e	; 62
     b38:	aa 97       	sbiw	r28, 0x2a	; 42
     b3a:	0f b6       	in	r0, 0x3f	; 63
     b3c:	f8 94       	cli
     b3e:	de bf       	out	0x3e, r29	; 62
     b40:	0f be       	out	0x3f, r0	; 63
     b42:	cd bf       	out	0x3d, r28	; 61
     b44:	6d 83       	std	Y+5, r22	; 0x05
     b46:	7e 83       	std	Y+6, r23	; 0x06
     b48:	8f 83       	std	Y+7, r24	; 0x07
     b4a:	98 87       	std	Y+8, r25	; 0x08
     b4c:	29 a3       	lds	r18, 0x59
     b4e:	3a a3       	lds	r19, 0x5a
     b50:	4b a3       	lds	r20, 0x5b
     b52:	5c a3       	lds	r21, 0x5c
     b54:	40 91 74 01 	lds	r20, 0x0174
     b58:	50 91 75 01 	lds	r21, 0x0175
     b5c:	60 91 76 01 	lds	r22, 0x0176
     b60:	70 91 77 01 	lds	r23, 0x0177
     b64:	4d 8b       	std	Y+21, r20	; 0x15
     b66:	5e 8b       	std	Y+22, r21	; 0x16
     b68:	6f 8b       	std	Y+23, r22	; 0x17
     b6a:	78 8f       	std	Y+24, r23	; 0x18
     b6c:	60 91 22 01 	lds	r22, 0x0122
     b70:	70 91 23 01 	lds	r23, 0x0123
     b74:	80 91 24 01 	lds	r24, 0x0124
     b78:	90 91 25 01 	lds	r25, 0x0125
     b7c:	69 87       	std	Y+9, r22	; 0x09
     b7e:	7a 87       	std	Y+10, r23	; 0x0a
     b80:	8b 87       	std	Y+11, r24	; 0x0b
     b82:	9c 87       	std	Y+12, r25	; 0x0c
     b84:	69 a1       	lds	r22, 0x49
     b86:	7a a1       	lds	r23, 0x4a
     b88:	8b a1       	lds	r24, 0x4b
     b8a:	9c a1       	lds	r25, 0x4c
     b8c:	2d 89       	ldd	r18, Y+21	; 0x15
     b8e:	3e 89       	ldd	r19, Y+22	; 0x16
     b90:	4f 89       	ldd	r20, Y+23	; 0x17
     b92:	58 8d       	ldd	r21, Y+24	; 0x18
     b94:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     b98:	29 85       	ldd	r18, Y+9	; 0x09
     b9a:	3a 85       	ldd	r19, Y+10	; 0x0a
     b9c:	4b 85       	ldd	r20, Y+11	; 0x0b
     b9e:	5c 85       	ldd	r21, Y+12	; 0x0c
     ba0:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     ba4:	20 91 78 01 	lds	r18, 0x0178
     ba8:	30 91 79 01 	lds	r19, 0x0179
     bac:	40 91 7a 01 	lds	r20, 0x017A
     bb0:	50 91 7b 01 	lds	r21, 0x017B
     bb4:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     bb8:	6d a3       	lds	r22, 0x5d
     bba:	7e a3       	lds	r23, 0x5e
     bbc:	8f a3       	lds	r24, 0x5f
     bbe:	98 a7       	lds	r25, 0x78
     bc0:	40 90 16 01 	lds	r4, 0x0116
     bc4:	50 90 17 01 	lds	r5, 0x0117
     bc8:	60 90 18 01 	lds	r6, 0x0118
     bcc:	70 90 19 01 	lds	r7, 0x0119
     bd0:	80 91 1a 01 	lds	r24, 0x011A
     bd4:	90 91 1b 01 	lds	r25, 0x011B
     bd8:	a0 91 1c 01 	lds	r26, 0x011C
     bdc:	b0 91 1d 01 	lds	r27, 0x011D
     be0:	89 83       	std	Y+1, r24	; 0x01
     be2:	9a 83       	std	Y+2, r25	; 0x02
     be4:	ab 83       	std	Y+3, r26	; 0x03
     be6:	bc 83       	std	Y+4, r27	; 0x04
     be8:	60 91 2e 01 	lds	r22, 0x012E
     bec:	70 91 2f 01 	lds	r23, 0x012F
     bf0:	80 91 30 01 	lds	r24, 0x0130
     bf4:	90 91 31 01 	lds	r25, 0x0131
     bf8:	a3 01       	movw	r20, r6
     bfa:	92 01       	movw	r18, r4
     bfc:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     c00:	29 81       	ldd	r18, Y+1	; 0x01
     c02:	3a 81       	ldd	r19, Y+2	; 0x02
     c04:	4b 81       	ldd	r20, Y+3	; 0x03
     c06:	5c 81       	ldd	r21, Y+4	; 0x04
     c08:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     c0c:	b6 2f       	mov	r27, r22
     c0e:	a7 2f       	mov	r26, r23
     c10:	38 2f       	mov	r19, r24
     c12:	29 2f       	mov	r18, r25
     c14:	98 2f       	mov	r25, r24
     c16:	4b 2f       	mov	r20, r27
     c18:	5a 2f       	mov	r21, r26
     c1a:	69 2f       	mov	r22, r25
     c1c:	72 2f       	mov	r23, r18
     c1e:	40 93 50 01 	sts	0x0150, r20
     c22:	50 93 51 01 	sts	0x0151, r21
     c26:	60 93 52 01 	sts	0x0152, r22
     c2a:	70 93 53 01 	sts	0x0153, r23
     c2e:	40 91 1e 01 	lds	r20, 0x011E
     c32:	50 91 1f 01 	lds	r21, 0x011F
     c36:	60 91 20 01 	lds	r22, 0x0120
     c3a:	70 91 21 01 	lds	r23, 0x0121
     c3e:	49 8f       	std	Y+25, r20	; 0x19
     c40:	5a 8f       	std	Y+26, r21	; 0x1a
     c42:	6b 8f       	std	Y+27, r22	; 0x1b
     c44:	7c 8f       	std	Y+28, r23	; 0x1c
     c46:	6a 01       	movw	r12, r20
     c48:	7b 01       	movw	r14, r22
     c4a:	f7 fa       	bst	r15, 7
     c4c:	f0 94       	com	r15
     c4e:	f7 f8       	bld	r15, 7
     c50:	f0 94       	com	r15
     c52:	c0 92 54 01 	sts	0x0154, r12
     c56:	d0 92 55 01 	sts	0x0155, r13
     c5a:	e0 92 56 01 	sts	0x0156, r14
     c5e:	f0 92 57 01 	sts	0x0157, r15
     c62:	c0 92 58 01 	sts	0x0158, r12
     c66:	d0 92 59 01 	sts	0x0159, r13
     c6a:	e0 92 5a 01 	sts	0x015A, r14
     c6e:	f0 92 5b 01 	sts	0x015B, r15
     c72:	60 91 2a 01 	lds	r22, 0x012A
     c76:	70 91 2b 01 	lds	r23, 0x012B
     c7a:	80 91 2c 01 	lds	r24, 0x012C
     c7e:	90 91 2d 01 	lds	r25, 0x012D
     c82:	6d 8f       	std	Y+29, r22	; 0x1d
     c84:	7e 8f       	std	Y+30, r23	; 0x1e
     c86:	8f 8f       	std	Y+31, r24	; 0x1f
     c88:	98 a3       	lds	r25, 0x58
     c8a:	60 93 5c 01 	sts	0x015C, r22
     c8e:	70 93 5d 01 	sts	0x015D, r23
     c92:	80 93 5e 01 	sts	0x015E, r24
     c96:	90 93 5f 01 	sts	0x015F, r25
     c9a:	86 e1       	ldi	r24, 0x16	; 22
     c9c:	91 e0       	ldi	r25, 0x01	; 1
     c9e:	9a 8b       	std	Y+18, r25	; 0x12
     ca0:	89 8b       	std	Y+17, r24	; 0x11
     ca2:	69 85       	ldd	r22, Y+9	; 0x09
     ca4:	7a 85       	ldd	r23, Y+10	; 0x0a
     ca6:	8b 85       	ldd	r24, Y+11	; 0x0b
     ca8:	9c 85       	ldd	r25, Y+12	; 0x0c
     caa:	42 2f       	mov	r20, r18
     cac:	0b 2f       	mov	r16, r27
     cae:	1a 2f       	mov	r17, r26
     cb0:	23 2f       	mov	r18, r19
     cb2:	34 2f       	mov	r19, r20
     cb4:	a9 01       	movw	r20, r18
     cb6:	98 01       	movw	r18, r16
     cb8:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     cbc:	a9 89       	ldd	r26, Y+17	; 0x11
     cbe:	ba 89       	ldd	r27, Y+18	; 0x12
     cc0:	5e 91       	ld	r21, -X
     cc2:	4e 91       	ld	r20, -X
     cc4:	3e 91       	ld	r19, -X
     cc6:	2e 91       	ld	r18, -X
     cc8:	ba 8b       	std	Y+18, r27	; 0x12
     cca:	a9 8b       	std	Y+17, r26	; 0x11
     ccc:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     cd0:	b6 2e       	mov	r11, r22
     cd2:	a7 2e       	mov	r10, r23
     cd4:	98 2e       	mov	r9, r24
     cd6:	89 2e       	mov	r8, r25
     cd8:	69 85       	ldd	r22, Y+9	; 0x09
     cda:	7a 85       	ldd	r23, Y+10	; 0x0a
     cdc:	8b 85       	ldd	r24, Y+11	; 0x0b
     cde:	9c 85       	ldd	r25, Y+12	; 0x0c
     ce0:	a7 01       	movw	r20, r14
     ce2:	96 01       	movw	r18, r12
     ce4:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     ce8:	e6 2e       	mov	r14, r22
     cea:	d7 2e       	mov	r13, r23
     cec:	f8 2e       	mov	r15, r24
     cee:	c9 2e       	mov	r12, r25
     cf0:	c3 01       	movw	r24, r6
     cf2:	b2 01       	movw	r22, r4
     cf4:	0e 2d       	mov	r16, r14
     cf6:	1d 2d       	mov	r17, r13
     cf8:	2f 2d       	mov	r18, r15
     cfa:	3c 2d       	mov	r19, r12
     cfc:	a9 01       	movw	r20, r18
     cfe:	98 01       	movw	r18, r16
     d00:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     d04:	6d 87       	std	Y+13, r22	; 0x0d
     d06:	7e 87       	std	Y+14, r23	; 0x0e
     d08:	8f 87       	std	Y+15, r24	; 0x0f
     d0a:	98 8b       	std	Y+16, r25	; 0x10
     d0c:	69 81       	ldd	r22, Y+1	; 0x01
     d0e:	7a 81       	ldd	r23, Y+2	; 0x02
     d10:	8b 81       	ldd	r24, Y+3	; 0x03
     d12:	9c 81       	ldd	r25, Y+4	; 0x04
     d14:	2f 2d       	mov	r18, r15
     d16:	3c 2d       	mov	r19, r12
     d18:	a9 01       	movw	r20, r18
     d1a:	98 01       	movw	r18, r16
     d1c:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     d20:	46 2e       	mov	r4, r22
     d22:	77 2e       	mov	r7, r23
     d24:	68 2e       	mov	r6, r24
     d26:	59 2e       	mov	r5, r25
     d28:	6d 81       	ldd	r22, Y+5	; 0x05
     d2a:	7e 81       	ldd	r23, Y+6	; 0x06
     d2c:	8f 81       	ldd	r24, Y+7	; 0x07
     d2e:	98 85       	ldd	r25, Y+8	; 0x08
     d30:	fd a1       	lds	r31, 0x4d
     d32:	ee a1       	lds	r30, 0x4e
     d34:	5f a1       	lds	r21, 0x4f
     d36:	48 a5       	lds	r20, 0x68
     d38:	0f 2f       	mov	r16, r31
     d3a:	1e 2f       	mov	r17, r30
     d3c:	25 2f       	mov	r18, r21
     d3e:	34 2f       	mov	r19, r20
     d40:	a9 01       	movw	r20, r18
     d42:	98 01       	movw	r18, r16
     d44:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     d48:	69 83       	std	Y+1, r22	; 0x01
     d4a:	7d 83       	std	Y+5, r23	; 0x05
     d4c:	8b 8b       	std	Y+19, r24	; 0x13
     d4e:	9c 8b       	std	Y+20, r25	; 0x14
     d50:	47 2f       	mov	r20, r23
     d52:	38 2f       	mov	r19, r24
     d54:	29 2f       	mov	r18, r25
     d56:	86 2f       	mov	r24, r22
     d58:	94 2f       	mov	r25, r20
     d5a:	a3 2f       	mov	r26, r19
     d5c:	b2 2f       	mov	r27, r18
     d5e:	80 93 8c 01 	sts	0x018C, r24
     d62:	90 93 8d 01 	sts	0x018D, r25
     d66:	a0 93 8e 01 	sts	0x018E, r26
     d6a:	b0 93 8f 01 	sts	0x018F, r27
     d6e:	8b 2d       	mov	r24, r11
     d70:	9a 2d       	mov	r25, r10
     d72:	a9 2d       	mov	r26, r9
     d74:	b8 2d       	mov	r27, r8
     d76:	80 93 70 01 	sts	0x0170, r24
     d7a:	90 93 71 01 	sts	0x0171, r25
     d7e:	a0 93 72 01 	sts	0x0172, r26
     d82:	b0 93 73 01 	sts	0x0173, r27
     d86:	84 2d       	mov	r24, r4
     d88:	97 2d       	mov	r25, r7
     d8a:	a6 2d       	mov	r26, r6
     d8c:	b5 2d       	mov	r27, r5
     d8e:	80 93 7c 01 	sts	0x017C, r24
     d92:	90 93 7d 01 	sts	0x017D, r25
     d96:	a0 93 7e 01 	sts	0x017E, r26
     d9a:	b0 93 7f 01 	sts	0x017F, r27
     d9e:	8b 2d       	mov	r24, r11
     da0:	9a 2d       	mov	r25, r10
     da2:	a9 2d       	mov	r26, r9
     da4:	b8 2d       	mov	r27, r8
     da6:	bc 01       	movw	r22, r24
     da8:	cd 01       	movw	r24, r26
     daa:	20 91 26 01 	lds	r18, 0x0126
     dae:	30 91 27 01 	lds	r19, 0x0127
     db2:	40 91 28 01 	lds	r20, 0x0128
     db6:	50 91 29 01 	lds	r21, 0x0129
     dba:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     dbe:	c6 2e       	mov	r12, r22
     dc0:	79 a7       	lds	r23, 0x79
     dc2:	8a a7       	lds	r24, 0x7a
     dc4:	f9 2e       	mov	r15, r25
     dc6:	47 2f       	mov	r20, r23
     dc8:	38 2f       	mov	r19, r24
     dca:	86 2f       	mov	r24, r22
     dcc:	94 2f       	mov	r25, r20
     dce:	a3 2f       	mov	r26, r19
     dd0:	bf 2d       	mov	r27, r15
     dd2:	80 93 84 01 	sts	0x0184, r24
     dd6:	90 93 85 01 	sts	0x0185, r25
     dda:	a0 93 86 01 	sts	0x0186, r26
     dde:	b0 93 87 01 	sts	0x0187, r27
     de2:	8b 2d       	mov	r24, r11
     de4:	9a 2d       	mov	r25, r10
     de6:	a9 2d       	mov	r26, r9
     de8:	b8 2d       	mov	r27, r8
     dea:	bc 01       	movw	r22, r24
     dec:	cd 01       	movw	r24, r26
     dee:	e9 a5       	lds	r30, 0x69
     df0:	5a a5       	lds	r21, 0x6a
     df2:	0c 2d       	mov	r16, r12
     df4:	1e 2f       	mov	r17, r30
     df6:	25 2f       	mov	r18, r21
     df8:	3f 2d       	mov	r19, r15
     dfa:	a9 01       	movw	r20, r18
     dfc:	98 01       	movw	r18, r16
     dfe:	0e 94 27 12 	call	0x244e	; 0x244e <__divsf3>
     e02:	e6 2e       	mov	r14, r22
     e04:	d7 2e       	mov	r13, r23
     e06:	38 2e       	mov	r3, r24
     e08:	29 2e       	mov	r2, r25
     e0a:	86 2f       	mov	r24, r22
     e0c:	9d 2d       	mov	r25, r13
     e0e:	a3 2d       	mov	r26, r3
     e10:	b2 2d       	mov	r27, r2
     e12:	80 93 88 01 	sts	0x0188, r24
     e16:	90 93 89 01 	sts	0x0189, r25
     e1a:	a0 93 8a 01 	sts	0x018A, r26
     e1e:	b0 93 8b 01 	sts	0x018B, r27
     e22:	84 2d       	mov	r24, r4
     e24:	97 2d       	mov	r25, r7
     e26:	a6 2d       	mov	r26, r6
     e28:	b5 2d       	mov	r27, r5
     e2a:	bc 01       	movw	r22, r24
     e2c:	cd 01       	movw	r24, r26
     e2e:	5a a5       	lds	r21, 0x6a
     e30:	25 2f       	mov	r18, r21
     e32:	3f 2d       	mov	r19, r15
     e34:	a9 01       	movw	r20, r18
     e36:	98 01       	movw	r18, r16
     e38:	0e 94 27 12 	call	0x244e	; 0x244e <__divsf3>
     e3c:	c6 2e       	mov	r12, r22
     e3e:	79 a7       	lds	r23, 0x79
     e40:	8a a7       	lds	r24, 0x7a
     e42:	f9 2e       	mov	r15, r25
     e44:	47 2f       	mov	r20, r23
     e46:	38 2f       	mov	r19, r24
     e48:	86 2f       	mov	r24, r22
     e4a:	94 2f       	mov	r25, r20
     e4c:	a3 2f       	mov	r26, r19
     e4e:	bf 2d       	mov	r27, r15
     e50:	80 93 80 01 	sts	0x0180, r24
     e54:	90 93 81 01 	sts	0x0181, r25
     e58:	a0 93 82 01 	sts	0x0182, r26
     e5c:	b0 93 83 01 	sts	0x0183, r27
     e60:	8b 2d       	mov	r24, r11
     e62:	9a 2d       	mov	r25, r10
     e64:	a9 2d       	mov	r26, r9
     e66:	b8 2d       	mov	r27, r8
     e68:	80 93 6c 01 	sts	0x016C, r24
     e6c:	90 93 6d 01 	sts	0x016D, r25
     e70:	a0 93 6e 01 	sts	0x016E, r26
     e74:	b0 93 6f 01 	sts	0x016F, r27
     e78:	5d 85       	ldd	r21, Y+13	; 0x0d
     e7a:	4e 85       	ldd	r20, Y+14	; 0x0e
     e7c:	3f 85       	ldd	r19, Y+15	; 0x0f
     e7e:	28 89       	ldd	r18, Y+16	; 0x10
     e80:	85 2f       	mov	r24, r21
     e82:	94 2f       	mov	r25, r20
     e84:	a3 2f       	mov	r26, r19
     e86:	b2 2f       	mov	r27, r18
     e88:	80 93 64 01 	sts	0x0164, r24
     e8c:	90 93 65 01 	sts	0x0165, r25
     e90:	a0 93 66 01 	sts	0x0166, r26
     e94:	b0 93 67 01 	sts	0x0167, r27
     e98:	8b 2d       	mov	r24, r11
     e9a:	9a 2d       	mov	r25, r10
     e9c:	a9 2d       	mov	r26, r9
     e9e:	b8 2d       	mov	r27, r8
     ea0:	bc 01       	movw	r22, r24
     ea2:	cd 01       	movw	r24, r26
     ea4:	0e 2d       	mov	r16, r14
     ea6:	1d 2d       	mov	r17, r13
     ea8:	23 2d       	mov	r18, r3
     eaa:	32 2d       	mov	r19, r2
     eac:	a9 01       	movw	r20, r18
     eae:	98 01       	movw	r18, r16
     eb0:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     eb4:	9b 01       	movw	r18, r22
     eb6:	ac 01       	movw	r20, r24
     eb8:	8b 2d       	mov	r24, r11
     eba:	9a 2d       	mov	r25, r10
     ebc:	a9 2d       	mov	r26, r9
     ebe:	b8 2d       	mov	r27, r8
     ec0:	bc 01       	movw	r22, r24
     ec2:	cd 01       	movw	r24, r26
     ec4:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     ec8:	dc 01       	movw	r26, r24
     eca:	cb 01       	movw	r24, r22
     ecc:	e9 89       	ldd	r30, Y+17	; 0x11
     ece:	fa 89       	ldd	r31, Y+18	; 0x12
     ed0:	80 83       	st	Z, r24
     ed2:	91 83       	std	Z+1, r25	; 0x01
     ed4:	a2 83       	std	Z+2, r26	; 0x02
     ed6:	b3 83       	std	Z+3, r27	; 0x03
     ed8:	5d 85       	ldd	r21, Y+13	; 0x0d
     eda:	4e 85       	ldd	r20, Y+14	; 0x0e
     edc:	3f 85       	ldd	r19, Y+15	; 0x0f
     ede:	28 89       	ldd	r18, Y+16	; 0x10
     ee0:	85 2f       	mov	r24, r21
     ee2:	94 2f       	mov	r25, r20
     ee4:	a3 2f       	mov	r26, r19
     ee6:	b2 2f       	mov	r27, r18
     ee8:	bc 01       	movw	r22, r24
     eea:	cd 01       	movw	r24, r26
     eec:	23 2d       	mov	r18, r3
     eee:	32 2d       	mov	r19, r2
     ef0:	a9 01       	movw	r20, r18
     ef2:	98 01       	movw	r18, r16
     ef4:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     ef8:	9b 01       	movw	r18, r22
     efa:	ac 01       	movw	r20, r24
     efc:	fd 85       	ldd	r31, Y+13	; 0x0d
     efe:	ee 85       	ldd	r30, Y+14	; 0x0e
     f00:	7f 85       	ldd	r23, Y+15	; 0x0f
     f02:	68 89       	ldd	r22, Y+16	; 0x10
     f04:	8f 2f       	mov	r24, r31
     f06:	9e 2f       	mov	r25, r30
     f08:	a7 2f       	mov	r26, r23
     f0a:	b6 2f       	mov	r27, r22
     f0c:	bc 01       	movw	r22, r24
     f0e:	cd 01       	movw	r24, r26
     f10:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     f14:	dc 01       	movw	r26, r24
     f16:	cb 01       	movw	r24, r22
     f18:	80 93 16 01 	sts	0x0116, r24
     f1c:	90 93 17 01 	sts	0x0117, r25
     f20:	a0 93 18 01 	sts	0x0118, r26
     f24:	b0 93 19 01 	sts	0x0119, r27
     f28:	8b 2d       	mov	r24, r11
     f2a:	9a 2d       	mov	r25, r10
     f2c:	a9 2d       	mov	r26, r9
     f2e:	b8 2d       	mov	r27, r8
     f30:	bc 01       	movw	r22, r24
     f32:	cd 01       	movw	r24, r26
     f34:	e9 a5       	lds	r30, 0x69
     f36:	5a a5       	lds	r21, 0x6a
     f38:	0c 2d       	mov	r16, r12
     f3a:	1e 2f       	mov	r17, r30
     f3c:	25 2f       	mov	r18, r21
     f3e:	3f 2d       	mov	r19, r15
     f40:	a9 01       	movw	r20, r18
     f42:	98 01       	movw	r18, r16
     f44:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     f48:	9b 01       	movw	r18, r22
     f4a:	ac 01       	movw	r20, r24
     f4c:	84 2d       	mov	r24, r4
     f4e:	97 2d       	mov	r25, r7
     f50:	a6 2d       	mov	r26, r6
     f52:	b5 2d       	mov	r27, r5
     f54:	bc 01       	movw	r22, r24
     f56:	cd 01       	movw	r24, r26
     f58:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     f5c:	dc 01       	movw	r26, r24
     f5e:	cb 01       	movw	r24, r22
     f60:	80 93 1a 01 	sts	0x011A, r24
     f64:	90 93 1b 01 	sts	0x011B, r25
     f68:	a0 93 1c 01 	sts	0x011C, r26
     f6c:	b0 93 1d 01 	sts	0x011D, r27
     f70:	69 85       	ldd	r22, Y+9	; 0x09
     f72:	7a 85       	ldd	r23, Y+10	; 0x0a
     f74:	8b 85       	ldd	r24, Y+11	; 0x0b
     f76:	9c 85       	ldd	r25, Y+12	; 0x0c
     f78:	2d 8d       	ldd	r18, Y+29	; 0x1d
     f7a:	3e 8d       	ldd	r19, Y+30	; 0x1e
     f7c:	4f 8d       	ldd	r20, Y+31	; 0x1f
     f7e:	58 a1       	lds	r21, 0x48
     f80:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     f84:	9b 01       	movw	r18, r22
     f86:	ac 01       	movw	r20, r24
     f88:	69 8d       	ldd	r22, Y+25	; 0x19
     f8a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     f8c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     f8e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     f90:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
     f94:	2b 01       	movw	r4, r22
     f96:	3c 01       	movw	r6, r24
     f98:	5d 85       	ldd	r21, Y+13	; 0x0d
     f9a:	4e 85       	ldd	r20, Y+14	; 0x0e
     f9c:	3f 85       	ldd	r19, Y+15	; 0x0f
     f9e:	28 89       	ldd	r18, Y+16	; 0x10
     fa0:	85 2f       	mov	r24, r21
     fa2:	94 2f       	mov	r25, r20
     fa4:	a3 2f       	mov	r26, r19
     fa6:	b2 2f       	mov	r27, r18
     fa8:	bc 01       	movw	r22, r24
     faa:	cd 01       	movw	r24, r26
     fac:	5a a5       	lds	r21, 0x6a
     fae:	25 2f       	mov	r18, r21
     fb0:	3f 2d       	mov	r19, r15
     fb2:	a9 01       	movw	r20, r18
     fb4:	98 01       	movw	r18, r16
     fb6:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     fba:	9b 01       	movw	r18, r22
     fbc:	ac 01       	movw	r20, r24
     fbe:	c3 01       	movw	r24, r6
     fc0:	b2 01       	movw	r22, r4
     fc2:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
     fc6:	dc 01       	movw	r26, r24
     fc8:	cb 01       	movw	r24, r22
     fca:	80 93 1e 01 	sts	0x011E, r24
     fce:	90 93 1f 01 	sts	0x011F, r25
     fd2:	a0 93 20 01 	sts	0x0120, r26
     fd6:	b0 93 21 01 	sts	0x0121, r27
     fda:	59 81       	ldd	r21, Y+1	; 0x01
     fdc:	4d 81       	ldd	r20, Y+5	; 0x05
     fde:	3b 89       	ldd	r19, Y+19	; 0x13
     fe0:	2c 89       	ldd	r18, Y+20	; 0x14
     fe2:	85 2f       	mov	r24, r21
     fe4:	94 2f       	mov	r25, r20
     fe6:	a3 2f       	mov	r26, r19
     fe8:	b2 2f       	mov	r27, r18
     fea:	bc 01       	movw	r22, r24
     fec:	cd 01       	movw	r24, r26
     fee:	0e 2d       	mov	r16, r14
     ff0:	1d 2d       	mov	r17, r13
     ff2:	23 2d       	mov	r18, r3
     ff4:	32 2d       	mov	r19, r2
     ff6:	a9 01       	movw	r20, r18
     ff8:	98 01       	movw	r18, r16
     ffa:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
     ffe:	9b 01       	movw	r18, r22
    1000:	ac 01       	movw	r20, r24
    1002:	fd a1       	lds	r31, 0x4d
    1004:	ee a1       	lds	r30, 0x4e
    1006:	7f a1       	lds	r23, 0x4f
    1008:	68 a5       	lds	r22, 0x68
    100a:	8f 2f       	mov	r24, r31
    100c:	9e 2f       	mov	r25, r30
    100e:	a7 2f       	mov	r26, r23
    1010:	b6 2f       	mov	r27, r22
    1012:	bc 01       	movw	r22, r24
    1014:	cd 01       	movw	r24, r26
    1016:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
    101a:	dc 01       	movw	r26, r24
    101c:	cb 01       	movw	r24, r22
    101e:	80 93 78 01 	sts	0x0178, r24
    1022:	90 93 79 01 	sts	0x0179, r25
    1026:	a0 93 7a 01 	sts	0x017A, r26
    102a:	b0 93 7b 01 	sts	0x017B, r27
    102e:	59 81       	ldd	r21, Y+1	; 0x01
    1030:	4d 81       	ldd	r20, Y+5	; 0x05
    1032:	3b 89       	ldd	r19, Y+19	; 0x13
    1034:	2c 89       	ldd	r18, Y+20	; 0x14
    1036:	85 2f       	mov	r24, r21
    1038:	94 2f       	mov	r25, r20
    103a:	a3 2f       	mov	r26, r19
    103c:	b2 2f       	mov	r27, r18
    103e:	bc 01       	movw	r22, r24
    1040:	cd 01       	movw	r24, r26
    1042:	e9 a5       	lds	r30, 0x69
    1044:	5a a5       	lds	r21, 0x6a
    1046:	0c 2d       	mov	r16, r12
    1048:	1e 2f       	mov	r17, r30
    104a:	25 2f       	mov	r18, r21
    104c:	3f 2d       	mov	r19, r15
    104e:	a9 01       	movw	r20, r18
    1050:	98 01       	movw	r18, r16
    1052:	0e 94 4e 13 	call	0x269c	; 0x269c <__mulsf3>
    1056:	9b 01       	movw	r18, r22
    1058:	ac 01       	movw	r20, r24
    105a:	6d 89       	ldd	r22, Y+21	; 0x15
    105c:	7e 89       	ldd	r23, Y+22	; 0x16
    105e:	8f 89       	ldd	r24, Y+23	; 0x17
    1060:	98 8d       	ldd	r25, Y+24	; 0x18
    1062:	0e 94 c3 11 	call	0x2386	; 0x2386 <__addsf3>
    1066:	b6 2f       	mov	r27, r22
    1068:	a7 2f       	mov	r26, r23
    106a:	38 2f       	mov	r19, r24
    106c:	29 2f       	mov	r18, r25
    106e:	98 2f       	mov	r25, r24
    1070:	4b 2f       	mov	r20, r27
    1072:	5a 2f       	mov	r21, r26
    1074:	69 2f       	mov	r22, r25
    1076:	72 2f       	mov	r23, r18
    1078:	40 93 74 01 	sts	0x0174, r20
    107c:	50 93 75 01 	sts	0x0175, r21
    1080:	60 93 76 01 	sts	0x0176, r22
    1084:	70 93 77 01 	sts	0x0177, r23
    1088:	69 a1       	lds	r22, 0x49
    108a:	7a a1       	lds	r23, 0x4a
    108c:	8b a1       	lds	r24, 0x4b
    108e:	9c a1       	lds	r25, 0x4c
    1090:	42 2f       	mov	r20, r18
    1092:	0b 2f       	mov	r16, r27
    1094:	1a 2f       	mov	r17, r26
    1096:	23 2f       	mov	r18, r19
    1098:	34 2f       	mov	r19, r20
    109a:	a9 01       	movw	r20, r18
    109c:	98 01       	movw	r18, r16
    109e:	0e 94 c2 11 	call	0x2384	; 0x2384 <__subsf3>
    10a2:	dc 01       	movw	r26, r24
    10a4:	cb 01       	movw	r24, r22
    10a6:	80 93 68 01 	sts	0x0168, r24
    10aa:	90 93 69 01 	sts	0x0169, r25
    10ae:	a0 93 6a 01 	sts	0x016A, r26
    10b2:	b0 93 6b 01 	sts	0x016B, r27
    10b6:	aa 96       	adiw	r28, 0x2a	; 42
    10b8:	0f b6       	in	r0, 0x3f	; 63
    10ba:	f8 94       	cli
    10bc:	de bf       	out	0x3e, r29	; 62
    10be:	0f be       	out	0x3f, r0	; 63
    10c0:	cd bf       	out	0x3d, r28	; 61
    10c2:	df 91       	pop	r29
    10c4:	cf 91       	pop	r28
    10c6:	1f 91       	pop	r17
    10c8:	0f 91       	pop	r16
    10ca:	ff 90       	pop	r15
    10cc:	ef 90       	pop	r14
    10ce:	df 90       	pop	r13
    10d0:	cf 90       	pop	r12
    10d2:	bf 90       	pop	r11
    10d4:	af 90       	pop	r10
    10d6:	9f 90       	pop	r9
    10d8:	8f 90       	pop	r8
    10da:	7f 90       	pop	r7
    10dc:	6f 90       	pop	r6
    10de:	5f 90       	pop	r5
    10e0:	4f 90       	pop	r4
    10e2:	3f 90       	pop	r3
    10e4:	2f 90       	pop	r2
    10e6:	08 95       	ret

000010e8 <m_bus_init>:
    10e8:	58 9a       	sbi	0x0b, 0	; 11
    10ea:	59 9a       	sbi	0x0b, 1	; 11
    10ec:	5a 9a       	sbi	0x0b, 2	; 11
    10ee:	8c e0       	ldi	r24, 0x0C	; 12
    10f0:	80 93 b8 00 	sts	0x00B8, r24
    10f4:	e9 e6       	ldi	r30, 0x69	; 105
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	80 81       	ld	r24, Z
    10fa:	80 62       	ori	r24, 0x20	; 32
    10fc:	80 83       	st	Z, r24
    10fe:	80 81       	ld	r24, Z
    1100:	8f 7e       	andi	r24, 0xEF	; 239
    1102:	80 83       	st	Z, r24
    1104:	ea 9a       	sbi	0x1d, 2	; 29
    1106:	78 94       	sei
    1108:	08 95       	ret

0000110a <twi_read_byte>:
    110a:	84 e8       	ldi	r24, 0x84	; 132
    110c:	80 93 bc 00 	sts	0x00BC, r24
    1110:	ec eb       	ldi	r30, 0xBC	; 188
    1112:	f0 e0       	ldi	r31, 0x00	; 0
    1114:	80 81       	ld	r24, Z
    1116:	88 23       	and	r24, r24
    1118:	ec f7       	brge	.-6      	; 0x1114 <twi_read_byte+0xa>
    111a:	80 91 bb 00 	lds	r24, 0x00BB
    111e:	08 95       	ret

00001120 <twi_stop>:
    1120:	84 e9       	ldi	r24, 0x94	; 148
    1122:	80 93 bc 00 	sts	0x00BC, r24
    1126:	08 95       	ret

00001128 <twi_wait_for_ack>:
    1128:	20 e0       	ldi	r18, 0x00	; 0
    112a:	30 e0       	ldi	r19, 0x00	; 0
    112c:	ec eb       	ldi	r30, 0xBC	; 188
    112e:	f0 e0       	ldi	r31, 0x00	; 0
    1130:	80 81       	ld	r24, Z
    1132:	88 23       	and	r24, r24
    1134:	34 f0       	brlt	.+12     	; 0x1142 <twi_wait_for_ack+0x1a>
    1136:	2f 5f       	subi	r18, 0xFF	; 255
    1138:	3f 4f       	sbci	r19, 0xFF	; 255
    113a:	83 e0       	ldi	r24, 0x03	; 3
    113c:	29 3e       	cpi	r18, 0xE9	; 233
    113e:	38 07       	cpc	r19, r24
    1140:	b9 f7       	brne	.-18     	; 0x1130 <twi_wait_for_ack+0x8>
    1142:	81 e0       	ldi	r24, 0x01	; 1
    1144:	93 e0       	ldi	r25, 0x03	; 3
    1146:	28 3e       	cpi	r18, 0xE8	; 232
    1148:	39 07       	cpc	r19, r25
    114a:	09 f4       	brne	.+2      	; 0x114e <twi_wait_for_ack+0x26>
    114c:	80 e0       	ldi	r24, 0x00	; 0
    114e:	08 95       	ret

00001150 <twi_send_byte>:
    1150:	80 93 bb 00 	sts	0x00BB, r24
    1154:	84 e8       	ldi	r24, 0x84	; 132
    1156:	80 93 bc 00 	sts	0x00BC, r24
    115a:	0e 94 94 08 	call	0x1128	; 0x1128 <twi_wait_for_ack>
    115e:	88 23       	and	r24, r24
    1160:	21 f0       	breq	.+8      	; 0x116a <twi_send_byte+0x1a>
    1162:	80 91 b9 00 	lds	r24, 0x00B9
    1166:	88 7f       	andi	r24, 0xF8	; 248
    1168:	08 95       	ret
    116a:	80 e0       	ldi	r24, 0x00	; 0
    116c:	08 95       	ret

0000116e <twi_start>:
    116e:	cf 93       	push	r28
    1170:	df 93       	push	r29
    1172:	c8 2f       	mov	r28, r24
    1174:	d6 2f       	mov	r29, r22
    1176:	84 ea       	ldi	r24, 0xA4	; 164
    1178:	80 93 bc 00 	sts	0x00BC, r24
    117c:	0e 94 94 08 	call	0x1128	; 0x1128 <twi_wait_for_ack>
    1180:	88 23       	and	r24, r24
    1182:	21 f4       	brne	.+8      	; 0x118c <twi_start+0x1e>
    1184:	0e 94 90 08 	call	0x1120	; 0x1120 <twi_stop>
    1188:	80 e0       	ldi	r24, 0x00	; 0
    118a:	1a c0       	rjmp	.+52     	; 0x11c0 <twi_start+0x52>
    118c:	dd 23       	and	r29, r29
    118e:	59 f0       	breq	.+22     	; 0x11a6 <twi_start+0x38>
    1190:	8c 2f       	mov	r24, r28
    1192:	88 0f       	add	r24, r24
    1194:	8f 5f       	subi	r24, 0xFF	; 255
    1196:	0e 94 a8 08 	call	0x1150	; 0x1150 <twi_send_byte>
    119a:	88 34       	cpi	r24, 0x48	; 72
    119c:	71 f4       	brne	.+28     	; 0x11ba <twi_start+0x4c>
    119e:	0e 94 90 08 	call	0x1120	; 0x1120 <twi_stop>
    11a2:	80 e0       	ldi	r24, 0x00	; 0
    11a4:	0d c0       	rjmp	.+26     	; 0x11c0 <twi_start+0x52>
    11a6:	8c 2f       	mov	r24, r28
    11a8:	88 0f       	add	r24, r24
    11aa:	0e 94 a8 08 	call	0x1150	; 0x1150 <twi_send_byte>
    11ae:	80 32       	cpi	r24, 0x20	; 32
    11b0:	31 f4       	brne	.+12     	; 0x11be <twi_start+0x50>
    11b2:	0e 94 90 08 	call	0x1120	; 0x1120 <twi_stop>
    11b6:	80 e0       	ldi	r24, 0x00	; 0
    11b8:	03 c0       	rjmp	.+6      	; 0x11c0 <twi_start+0x52>
    11ba:	81 e0       	ldi	r24, 0x01	; 1
    11bc:	01 c0       	rjmp	.+2      	; 0x11c0 <twi_start+0x52>
    11be:	81 e0       	ldi	r24, 0x01	; 1
    11c0:	df 91       	pop	r29
    11c2:	cf 91       	pop	r28
    11c4:	08 95       	ret

000011c6 <m_write_register>:
    11c6:	cf 93       	push	r28
    11c8:	df 93       	push	r29
    11ca:	c6 2f       	mov	r28, r22
    11cc:	d4 2f       	mov	r29, r20
    11ce:	60 e0       	ldi	r22, 0x00	; 0
    11d0:	0e 94 b7 08 	call	0x116e	; 0x116e <twi_start>
    11d4:	88 23       	and	r24, r24
    11d6:	71 f0       	breq	.+28     	; 0x11f4 <m_write_register+0x2e>
    11d8:	8c 2f       	mov	r24, r28
    11da:	0e 94 a8 08 	call	0x1150	; 0x1150 <twi_send_byte>
    11de:	88 23       	and	r24, r24
    11e0:	59 f0       	breq	.+22     	; 0x11f8 <m_write_register+0x32>
    11e2:	8d 2f       	mov	r24, r29
    11e4:	0e 94 a8 08 	call	0x1150	; 0x1150 <twi_send_byte>
    11e8:	88 23       	and	r24, r24
    11ea:	41 f0       	breq	.+16     	; 0x11fc <m_write_register+0x36>
    11ec:	0e 94 90 08 	call	0x1120	; 0x1120 <twi_stop>
    11f0:	81 e0       	ldi	r24, 0x01	; 1
    11f2:	05 c0       	rjmp	.+10     	; 0x11fe <m_write_register+0x38>
    11f4:	80 e0       	ldi	r24, 0x00	; 0
    11f6:	03 c0       	rjmp	.+6      	; 0x11fe <m_write_register+0x38>
    11f8:	80 e0       	ldi	r24, 0x00	; 0
    11fa:	01 c0       	rjmp	.+2      	; 0x11fe <m_write_register+0x38>
    11fc:	80 e0       	ldi	r24, 0x00	; 0
    11fe:	df 91       	pop	r29
    1200:	cf 91       	pop	r28
    1202:	08 95       	ret

00001204 <m_read_register>:
    1204:	cf 93       	push	r28
    1206:	df 93       	push	r29
    1208:	c8 2f       	mov	r28, r24
    120a:	d6 2f       	mov	r29, r22
    120c:	60 e0       	ldi	r22, 0x00	; 0
    120e:	0e 94 b7 08 	call	0x116e	; 0x116e <twi_start>
    1212:	88 23       	and	r24, r24
    1214:	81 f0       	breq	.+32     	; 0x1236 <m_read_register+0x32>
    1216:	8d 2f       	mov	r24, r29
    1218:	0e 94 a8 08 	call	0x1150	; 0x1150 <twi_send_byte>
    121c:	88 23       	and	r24, r24
    121e:	69 f0       	breq	.+26     	; 0x123a <m_read_register+0x36>
    1220:	0e 94 90 08 	call	0x1120	; 0x1120 <twi_stop>
    1224:	8c 2f       	mov	r24, r28
    1226:	61 e0       	ldi	r22, 0x01	; 1
    1228:	0e 94 b7 08 	call	0x116e	; 0x116e <twi_start>
    122c:	88 23       	and	r24, r24
    122e:	39 f0       	breq	.+14     	; 0x123e <m_read_register+0x3a>
    1230:	0e 94 85 08 	call	0x110a	; 0x110a <twi_read_byte>
    1234:	05 c0       	rjmp	.+10     	; 0x1240 <m_read_register+0x3c>
    1236:	80 e0       	ldi	r24, 0x00	; 0
    1238:	03 c0       	rjmp	.+6      	; 0x1240 <m_read_register+0x3c>
    123a:	80 e0       	ldi	r24, 0x00	; 0
    123c:	01 c0       	rjmp	.+2      	; 0x1240 <m_read_register+0x3c>
    123e:	80 e0       	ldi	r24, 0x00	; 0
    1240:	df 91       	pop	r29
    1242:	cf 91       	pop	r28
    1244:	08 95       	ret

00001246 <m_imu_init>:
    1246:	cf 93       	push	r28
    1248:	df 93       	push	r29
    124a:	c8 2f       	mov	r28, r24
    124c:	d6 2f       	mov	r29, r22
    124e:	84 30       	cpi	r24, 0x04	; 4
    1250:	08 f0       	brcs	.+2      	; 0x1254 <m_imu_init+0xe>
    1252:	5e c0       	rjmp	.+188    	; 0x1310 <m_imu_init+0xca>
    1254:	64 30       	cpi	r22, 0x04	; 4
    1256:	08 f0       	brcs	.+2      	; 0x125a <m_imu_init+0x14>
    1258:	5d c0       	rjmp	.+186    	; 0x1314 <m_imu_init+0xce>
    125a:	0e 94 74 08 	call	0x10e8	; 0x10e8 <m_bus_init>
    125e:	8f e5       	ldi	r24, 0x5F	; 95
    1260:	9a ee       	ldi	r25, 0xEA	; 234
    1262:	a0 e0       	ldi	r26, 0x00	; 0
    1264:	81 50       	subi	r24, 0x01	; 1
    1266:	90 40       	sbci	r25, 0x00	; 0
    1268:	a0 40       	sbci	r26, 0x00	; 0
    126a:	e1 f7       	brne	.-8      	; 0x1264 <m_imu_init+0x1e>
    126c:	00 c0       	rjmp	.+0      	; 0x126e <m_imu_init+0x28>
    126e:	00 00       	nop
    1270:	89 e6       	ldi	r24, 0x69	; 105
    1272:	65 e7       	ldi	r22, 0x75	; 117
    1274:	0e 94 02 09 	call	0x1204	; 0x1204 <m_read_register>
    1278:	88 36       	cpi	r24, 0x68	; 104
    127a:	09 f0       	breq	.+2      	; 0x127e <m_imu_init+0x38>
    127c:	4d c0       	rjmp	.+154    	; 0x1318 <m_imu_init+0xd2>
    127e:	89 e6       	ldi	r24, 0x69	; 105
    1280:	6b e6       	ldi	r22, 0x6B	; 107
    1282:	41 e0       	ldi	r20, 0x01	; 1
    1284:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    1288:	4c 2f       	mov	r20, r28
    128a:	44 0f       	add	r20, r20
    128c:	44 0f       	add	r20, r20
    128e:	44 0f       	add	r20, r20
    1290:	89 e6       	ldi	r24, 0x69	; 105
    1292:	6c e1       	ldi	r22, 0x1C	; 28
    1294:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    1298:	4d 2f       	mov	r20, r29
    129a:	44 0f       	add	r20, r20
    129c:	44 0f       	add	r20, r20
    129e:	44 0f       	add	r20, r20
    12a0:	89 e6       	ldi	r24, 0x69	; 105
    12a2:	6b e1       	ldi	r22, 0x1B	; 27
    12a4:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12a8:	89 e6       	ldi	r24, 0x69	; 105
    12aa:	67 e3       	ldi	r22, 0x37	; 55
    12ac:	42 e0       	ldi	r20, 0x02	; 2
    12ae:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12b2:	8e e1       	ldi	r24, 0x1E	; 30
    12b4:	62 e0       	ldi	r22, 0x02	; 2
    12b6:	40 e0       	ldi	r20, 0x00	; 0
    12b8:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12bc:	89 e6       	ldi	r24, 0x69	; 105
    12be:	67 e3       	ldi	r22, 0x37	; 55
    12c0:	40 e0       	ldi	r20, 0x00	; 0
    12c2:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12c6:	89 e6       	ldi	r24, 0x69	; 105
    12c8:	64 e3       	ldi	r22, 0x34	; 52
    12ca:	4e e1       	ldi	r20, 0x1E	; 30
    12cc:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12d0:	89 e6       	ldi	r24, 0x69	; 105
    12d2:	67 e6       	ldi	r22, 0x67	; 103
    12d4:	41 e0       	ldi	r20, 0x01	; 1
    12d6:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12da:	89 e6       	ldi	r24, 0x69	; 105
    12dc:	64 e2       	ldi	r22, 0x24	; 36
    12de:	4d e1       	ldi	r20, 0x1D	; 29
    12e0:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12e4:	89 e6       	ldi	r24, 0x69	; 105
    12e6:	65 e2       	ldi	r22, 0x25	; 37
    12e8:	4e e9       	ldi	r20, 0x9E	; 158
    12ea:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12ee:	89 e6       	ldi	r24, 0x69	; 105
    12f0:	66 e2       	ldi	r22, 0x26	; 38
    12f2:	43 e0       	ldi	r20, 0x03	; 3
    12f4:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    12f8:	89 e6       	ldi	r24, 0x69	; 105
    12fa:	67 e2       	ldi	r22, 0x27	; 39
    12fc:	46 e9       	ldi	r20, 0x96	; 150
    12fe:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    1302:	89 e6       	ldi	r24, 0x69	; 105
    1304:	6a e6       	ldi	r22, 0x6A	; 106
    1306:	40 e2       	ldi	r20, 0x20	; 32
    1308:	0e 94 e3 08 	call	0x11c6	; 0x11c6 <m_write_register>
    130c:	81 e0       	ldi	r24, 0x01	; 1
    130e:	05 c0       	rjmp	.+10     	; 0x131a <m_imu_init+0xd4>
    1310:	80 e0       	ldi	r24, 0x00	; 0
    1312:	03 c0       	rjmp	.+6      	; 0x131a <m_imu_init+0xd4>
    1314:	80 e0       	ldi	r24, 0x00	; 0
    1316:	01 c0       	rjmp	.+2      	; 0x131a <m_imu_init+0xd4>
    1318:	80 e0       	ldi	r24, 0x00	; 0
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	08 95       	ret

00001320 <m_imu_raw>:
    1320:	cf 92       	push	r12
    1322:	df 92       	push	r13
    1324:	ff 92       	push	r15
    1326:	0f 93       	push	r16
    1328:	1f 93       	push	r17
    132a:	cf 93       	push	r28
    132c:	df 93       	push	r29
    132e:	cd b7       	in	r28, 0x3d	; 61
    1330:	de b7       	in	r29, 0x3e	; 62
    1332:	64 97       	sbiw	r28, 0x14	; 20
    1334:	0f b6       	in	r0, 0x3f	; 63
    1336:	f8 94       	cli
    1338:	de bf       	out	0x3e, r29	; 62
    133a:	0f be       	out	0x3f, r0	; 63
    133c:	cd bf       	out	0x3d, r28	; 61
    133e:	6c 01       	movw	r12, r24
    1340:	8e 01       	movw	r16, r28
    1342:	0f 5f       	subi	r16, 0xFF	; 255
    1344:	1f 4f       	sbci	r17, 0xFF	; 255
    1346:	0f 2e       	mov	r0, r31
    1348:	fe e4       	ldi	r31, 0x4E	; 78
    134a:	ff 2e       	mov	r15, r31
    134c:	f0 2d       	mov	r31, r0
    134e:	89 e6       	ldi	r24, 0x69	; 105
    1350:	6f 2d       	mov	r22, r15
    1352:	0e 94 02 09 	call	0x1204	; 0x1204 <m_read_register>
    1356:	f8 01       	movw	r30, r16
    1358:	81 93       	st	Z+, r24
    135a:	8f 01       	movw	r16, r30
    135c:	fa 94       	dec	r15
    135e:	fa e3       	ldi	r31, 0x3A	; 58
    1360:	ff 16       	cp	r15, r31
    1362:	a9 f7       	brne	.-22     	; 0x134e <m_imu_raw+0x2e>
    1364:	8f 85       	ldd	r24, Y+15	; 0x0f
    1366:	98 89       	ldd	r25, Y+16	; 0x10
    1368:	f6 01       	movw	r30, r12
    136a:	95 83       	std	Z+5, r25	; 0x05
    136c:	84 83       	std	Z+4, r24	; 0x04
    136e:	8f 81       	ldd	r24, Y+7	; 0x07
    1370:	98 85       	ldd	r25, Y+8	; 0x08
    1372:	93 87       	std	Z+11, r25	; 0x0b
    1374:	82 87       	std	Z+10, r24	; 0x0a
    1376:	89 81       	ldd	r24, Y+1	; 0x01
    1378:	9a 81       	ldd	r25, Y+2	; 0x02
    137a:	91 8b       	std	Z+17, r25	; 0x11
    137c:	80 8b       	std	Z+16, r24	; 0x10
    137e:	89 89       	ldd	r24, Y+17	; 0x11
    1380:	9a 89       	ldd	r25, Y+18	; 0x12
    1382:	93 83       	std	Z+3, r25	; 0x03
    1384:	82 83       	std	Z+2, r24	; 0x02
    1386:	89 85       	ldd	r24, Y+9	; 0x09
    1388:	9a 85       	ldd	r25, Y+10	; 0x0a
    138a:	91 87       	std	Z+9, r25	; 0x09
    138c:	80 87       	std	Z+8, r24	; 0x08
    138e:	8b 81       	ldd	r24, Y+3	; 0x03
    1390:	9c 81       	ldd	r25, Y+4	; 0x04
    1392:	97 87       	std	Z+15, r25	; 0x0f
    1394:	86 87       	std	Z+14, r24	; 0x0e
    1396:	8b 89       	ldd	r24, Y+19	; 0x13
    1398:	9c 89       	ldd	r25, Y+20	; 0x14
    139a:	91 83       	std	Z+1, r25	; 0x01
    139c:	80 83       	st	Z, r24
    139e:	8b 85       	ldd	r24, Y+11	; 0x0b
    13a0:	9c 85       	ldd	r25, Y+12	; 0x0c
    13a2:	97 83       	std	Z+7, r25	; 0x07
    13a4:	86 83       	std	Z+6, r24	; 0x06
    13a6:	8d 81       	ldd	r24, Y+5	; 0x05
    13a8:	9e 81       	ldd	r25, Y+6	; 0x06
    13aa:	95 87       	std	Z+13, r25	; 0x0d
    13ac:	84 87       	std	Z+12, r24	; 0x0c
    13ae:	81 e0       	ldi	r24, 0x01	; 1
    13b0:	64 96       	adiw	r28, 0x14	; 20
    13b2:	0f b6       	in	r0, 0x3f	; 63
    13b4:	f8 94       	cli
    13b6:	de bf       	out	0x3e, r29	; 62
    13b8:	0f be       	out	0x3f, r0	; 63
    13ba:	cd bf       	out	0x3d, r28	; 61
    13bc:	df 91       	pop	r29
    13be:	cf 91       	pop	r28
    13c0:	1f 91       	pop	r17
    13c2:	0f 91       	pop	r16
    13c4:	ff 90       	pop	r15
    13c6:	df 90       	pop	r13
    13c8:	cf 90       	pop	r12
    13ca:	08 95       	ret

000013cc <m_imu_accel>:
    13cc:	cf 92       	push	r12
    13ce:	df 92       	push	r13
    13d0:	ff 92       	push	r15
    13d2:	0f 93       	push	r16
    13d4:	1f 93       	push	r17
    13d6:	cf 93       	push	r28
    13d8:	df 93       	push	r29
    13da:	00 d0       	rcall	.+0      	; 0x13dc <m_imu_accel+0x10>
    13dc:	00 d0       	rcall	.+0      	; 0x13de <m_imu_accel+0x12>
    13de:	00 d0       	rcall	.+0      	; 0x13e0 <m_imu_accel+0x14>
    13e0:	cd b7       	in	r28, 0x3d	; 61
    13e2:	de b7       	in	r29, 0x3e	; 62
    13e4:	6c 01       	movw	r12, r24
    13e6:	8e 01       	movw	r16, r28
    13e8:	0f 5f       	subi	r16, 0xFF	; 255
    13ea:	1f 4f       	sbci	r17, 0xFF	; 255
    13ec:	ff 24       	eor	r15, r15
    13ee:	68 94       	set
    13f0:	f6 f8       	bld	r15, 6
    13f2:	89 e6       	ldi	r24, 0x69	; 105
    13f4:	6f 2d       	mov	r22, r15
    13f6:	0e 94 02 09 	call	0x1204	; 0x1204 <m_read_register>
    13fa:	f8 01       	movw	r30, r16
    13fc:	81 93       	st	Z+, r24
    13fe:	8f 01       	movw	r16, r30
    1400:	fa 94       	dec	r15
    1402:	fa e3       	ldi	r31, 0x3A	; 58
    1404:	ff 16       	cp	r15, r31
    1406:	a9 f7       	brne	.-22     	; 0x13f2 <m_imu_accel+0x26>
    1408:	89 81       	ldd	r24, Y+1	; 0x01
    140a:	9a 81       	ldd	r25, Y+2	; 0x02
    140c:	f6 01       	movw	r30, r12
    140e:	95 83       	std	Z+5, r25	; 0x05
    1410:	84 83       	std	Z+4, r24	; 0x04
    1412:	8b 81       	ldd	r24, Y+3	; 0x03
    1414:	9c 81       	ldd	r25, Y+4	; 0x04
    1416:	93 83       	std	Z+3, r25	; 0x03
    1418:	82 83       	std	Z+2, r24	; 0x02
    141a:	8d 81       	ldd	r24, Y+5	; 0x05
    141c:	9e 81       	ldd	r25, Y+6	; 0x06
    141e:	91 83       	std	Z+1, r25	; 0x01
    1420:	80 83       	st	Z, r24
    1422:	81 e0       	ldi	r24, 0x01	; 1
    1424:	26 96       	adiw	r28, 0x06	; 6
    1426:	0f b6       	in	r0, 0x3f	; 63
    1428:	f8 94       	cli
    142a:	de bf       	out	0x3e, r29	; 62
    142c:	0f be       	out	0x3f, r0	; 63
    142e:	cd bf       	out	0x3d, r28	; 61
    1430:	df 91       	pop	r29
    1432:	cf 91       	pop	r28
    1434:	1f 91       	pop	r17
    1436:	0f 91       	pop	r16
    1438:	ff 90       	pop	r15
    143a:	df 90       	pop	r13
    143c:	cf 90       	pop	r12
    143e:	08 95       	ret

00001440 <m_imu_gyro>:
    1440:	cf 92       	push	r12
    1442:	df 92       	push	r13
    1444:	ff 92       	push	r15
    1446:	0f 93       	push	r16
    1448:	1f 93       	push	r17
    144a:	cf 93       	push	r28
    144c:	df 93       	push	r29
    144e:	00 d0       	rcall	.+0      	; 0x1450 <m_imu_gyro+0x10>
    1450:	00 d0       	rcall	.+0      	; 0x1452 <m_imu_gyro+0x12>
    1452:	00 d0       	rcall	.+0      	; 0x1454 <m_imu_gyro+0x14>
    1454:	cd b7       	in	r28, 0x3d	; 61
    1456:	de b7       	in	r29, 0x3e	; 62
    1458:	6c 01       	movw	r12, r24
    145a:	8e 01       	movw	r16, r28
    145c:	0f 5f       	subi	r16, 0xFF	; 255
    145e:	1f 4f       	sbci	r17, 0xFF	; 255
    1460:	0f 2e       	mov	r0, r31
    1462:	f8 e4       	ldi	r31, 0x48	; 72
    1464:	ff 2e       	mov	r15, r31
    1466:	f0 2d       	mov	r31, r0
    1468:	89 e6       	ldi	r24, 0x69	; 105
    146a:	6f 2d       	mov	r22, r15
    146c:	0e 94 02 09 	call	0x1204	; 0x1204 <m_read_register>
    1470:	f8 01       	movw	r30, r16
    1472:	81 93       	st	Z+, r24
    1474:	8f 01       	movw	r16, r30
    1476:	fa 94       	dec	r15
    1478:	f2 e4       	ldi	r31, 0x42	; 66
    147a:	ff 16       	cp	r15, r31
    147c:	a9 f7       	brne	.-22     	; 0x1468 <m_imu_gyro+0x28>
    147e:	89 81       	ldd	r24, Y+1	; 0x01
    1480:	9a 81       	ldd	r25, Y+2	; 0x02
    1482:	f6 01       	movw	r30, r12
    1484:	95 83       	std	Z+5, r25	; 0x05
    1486:	84 83       	std	Z+4, r24	; 0x04
    1488:	8b 81       	ldd	r24, Y+3	; 0x03
    148a:	9c 81       	ldd	r25, Y+4	; 0x04
    148c:	93 83       	std	Z+3, r25	; 0x03
    148e:	82 83       	std	Z+2, r24	; 0x02
    1490:	8d 81       	ldd	r24, Y+5	; 0x05
    1492:	9e 81       	ldd	r25, Y+6	; 0x06
    1494:	91 83       	std	Z+1, r25	; 0x01
    1496:	80 83       	st	Z, r24
    1498:	81 e0       	ldi	r24, 0x01	; 1
    149a:	26 96       	adiw	r28, 0x06	; 6
    149c:	0f b6       	in	r0, 0x3f	; 63
    149e:	f8 94       	cli
    14a0:	de bf       	out	0x3e, r29	; 62
    14a2:	0f be       	out	0x3f, r0	; 63
    14a4:	cd bf       	out	0x3d, r28	; 61
    14a6:	df 91       	pop	r29
    14a8:	cf 91       	pop	r28
    14aa:	1f 91       	pop	r17
    14ac:	0f 91       	pop	r16
    14ae:	ff 90       	pop	r15
    14b0:	df 90       	pop	r13
    14b2:	cf 90       	pop	r12
    14b4:	08 95       	ret

000014b6 <m_imu_mag>:
    14b6:	cf 92       	push	r12
    14b8:	df 92       	push	r13
    14ba:	ff 92       	push	r15
    14bc:	0f 93       	push	r16
    14be:	1f 93       	push	r17
    14c0:	cf 93       	push	r28
    14c2:	df 93       	push	r29
    14c4:	00 d0       	rcall	.+0      	; 0x14c6 <m_imu_mag+0x10>
    14c6:	00 d0       	rcall	.+0      	; 0x14c8 <m_imu_mag+0x12>
    14c8:	00 d0       	rcall	.+0      	; 0x14ca <m_imu_mag+0x14>
    14ca:	cd b7       	in	r28, 0x3d	; 61
    14cc:	de b7       	in	r29, 0x3e	; 62
    14ce:	6c 01       	movw	r12, r24
    14d0:	8e 01       	movw	r16, r28
    14d2:	0f 5f       	subi	r16, 0xFF	; 255
    14d4:	1f 4f       	sbci	r17, 0xFF	; 255
    14d6:	0f 2e       	mov	r0, r31
    14d8:	fe e4       	ldi	r31, 0x4E	; 78
    14da:	ff 2e       	mov	r15, r31
    14dc:	f0 2d       	mov	r31, r0
    14de:	89 e6       	ldi	r24, 0x69	; 105
    14e0:	6f 2d       	mov	r22, r15
    14e2:	0e 94 02 09 	call	0x1204	; 0x1204 <m_read_register>
    14e6:	f8 01       	movw	r30, r16
    14e8:	81 93       	st	Z+, r24
    14ea:	8f 01       	movw	r16, r30
    14ec:	fa 94       	dec	r15
    14ee:	f8 e4       	ldi	r31, 0x48	; 72
    14f0:	ff 16       	cp	r15, r31
    14f2:	a9 f7       	brne	.-22     	; 0x14de <m_imu_mag+0x28>
    14f4:	89 81       	ldd	r24, Y+1	; 0x01
    14f6:	9a 81       	ldd	r25, Y+2	; 0x02
    14f8:	f6 01       	movw	r30, r12
    14fa:	95 83       	std	Z+5, r25	; 0x05
    14fc:	84 83       	std	Z+4, r24	; 0x04
    14fe:	8b 81       	ldd	r24, Y+3	; 0x03
    1500:	9c 81       	ldd	r25, Y+4	; 0x04
    1502:	93 83       	std	Z+3, r25	; 0x03
    1504:	82 83       	std	Z+2, r24	; 0x02
    1506:	8d 81       	ldd	r24, Y+5	; 0x05
    1508:	9e 81       	ldd	r25, Y+6	; 0x06
    150a:	91 83       	std	Z+1, r25	; 0x01
    150c:	80 83       	st	Z, r24
    150e:	81 e0       	ldi	r24, 0x01	; 1
    1510:	26 96       	adiw	r28, 0x06	; 6
    1512:	0f b6       	in	r0, 0x3f	; 63
    1514:	f8 94       	cli
    1516:	de bf       	out	0x3e, r29	; 62
    1518:	0f be       	out	0x3f, r0	; 63
    151a:	cd bf       	out	0x3d, r28	; 61
    151c:	df 91       	pop	r29
    151e:	cf 91       	pop	r28
    1520:	1f 91       	pop	r17
    1522:	0f 91       	pop	r16
    1524:	ff 90       	pop	r15
    1526:	df 90       	pop	r13
    1528:	cf 90       	pop	r12
    152a:	08 95       	ret

0000152c <m_rf_open>:
    152c:	1f 93       	push	r17
    152e:	cf 93       	push	r28
    1530:	df 93       	push	r29
    1532:	c8 2f       	mov	r28, r24
    1534:	d6 2f       	mov	r29, r22
    1536:	14 2f       	mov	r17, r20
    1538:	0e 94 74 08 	call	0x10e8	; 0x10e8 <m_bus_init>
    153c:	84 ea       	ldi	r24, 0xA4	; 164
    153e:	80 93 bc 00 	sts	0x00BC, r24
    1542:	ec eb       	ldi	r30, 0xBC	; 188
    1544:	f0 e0       	ldi	r31, 0x00	; 0
    1546:	80 81       	ld	r24, Z
    1548:	88 23       	and	r24, r24
    154a:	ec f7       	brge	.-6      	; 0x1546 <m_rf_open+0x1a>
    154c:	80 e5       	ldi	r24, 0x50	; 80
    154e:	80 93 bb 00 	sts	0x00BB, r24
    1552:	84 e8       	ldi	r24, 0x84	; 132
    1554:	80 93 bc 00 	sts	0x00BC, r24
    1558:	ec eb       	ldi	r30, 0xBC	; 188
    155a:	f0 e0       	ldi	r31, 0x00	; 0
    155c:	80 81       	ld	r24, Z
    155e:	88 23       	and	r24, r24
    1560:	ec f7       	brge	.-6      	; 0x155c <m_rf_open+0x30>
    1562:	80 91 b9 00 	lds	r24, 0x00B9
    1566:	88 7f       	andi	r24, 0xF8	; 248
    1568:	80 32       	cpi	r24, 0x20	; 32
    156a:	29 f4       	brne	.+10     	; 0x1576 <m_rf_open+0x4a>
    156c:	84 e9       	ldi	r24, 0x94	; 148
    156e:	80 93 bc 00 	sts	0x00BC, r24
    1572:	80 e0       	ldi	r24, 0x00	; 0
    1574:	2d c0       	rjmp	.+90     	; 0x15d0 <m_rf_open+0xa4>
    1576:	81 e0       	ldi	r24, 0x01	; 1
    1578:	80 93 bb 00 	sts	0x00BB, r24
    157c:	84 e8       	ldi	r24, 0x84	; 132
    157e:	80 93 bc 00 	sts	0x00BC, r24
    1582:	ec eb       	ldi	r30, 0xBC	; 188
    1584:	f0 e0       	ldi	r31, 0x00	; 0
    1586:	80 81       	ld	r24, Z
    1588:	88 23       	and	r24, r24
    158a:	ec f7       	brge	.-6      	; 0x1586 <m_rf_open+0x5a>
    158c:	c0 93 bb 00 	sts	0x00BB, r28
    1590:	84 e8       	ldi	r24, 0x84	; 132
    1592:	80 93 bc 00 	sts	0x00BC, r24
    1596:	ec eb       	ldi	r30, 0xBC	; 188
    1598:	f0 e0       	ldi	r31, 0x00	; 0
    159a:	80 81       	ld	r24, Z
    159c:	88 23       	and	r24, r24
    159e:	ec f7       	brge	.-6      	; 0x159a <m_rf_open+0x6e>
    15a0:	d0 93 bb 00 	sts	0x00BB, r29
    15a4:	84 e8       	ldi	r24, 0x84	; 132
    15a6:	80 93 bc 00 	sts	0x00BC, r24
    15aa:	ec eb       	ldi	r30, 0xBC	; 188
    15ac:	f0 e0       	ldi	r31, 0x00	; 0
    15ae:	80 81       	ld	r24, Z
    15b0:	88 23       	and	r24, r24
    15b2:	ec f7       	brge	.-6      	; 0x15ae <m_rf_open+0x82>
    15b4:	10 93 bb 00 	sts	0x00BB, r17
    15b8:	84 e8       	ldi	r24, 0x84	; 132
    15ba:	80 93 bc 00 	sts	0x00BC, r24
    15be:	ec eb       	ldi	r30, 0xBC	; 188
    15c0:	f0 e0       	ldi	r31, 0x00	; 0
    15c2:	80 81       	ld	r24, Z
    15c4:	88 23       	and	r24, r24
    15c6:	ec f7       	brge	.-6      	; 0x15c2 <m_rf_open+0x96>
    15c8:	84 e9       	ldi	r24, 0x94	; 148
    15ca:	80 93 bc 00 	sts	0x00BC, r24
    15ce:	81 e0       	ldi	r24, 0x01	; 1
    15d0:	df 91       	pop	r29
    15d2:	cf 91       	pop	r28
    15d4:	1f 91       	pop	r17
    15d6:	08 95       	ret

000015d8 <m_rf_read>:
    15d8:	cf 93       	push	r28
    15da:	df 93       	push	r29
    15dc:	ac 01       	movw	r20, r24
    15de:	84 ea       	ldi	r24, 0xA4	; 164
    15e0:	80 93 bc 00 	sts	0x00BC, r24
    15e4:	ec eb       	ldi	r30, 0xBC	; 188
    15e6:	f0 e0       	ldi	r31, 0x00	; 0
    15e8:	80 81       	ld	r24, Z
    15ea:	88 23       	and	r24, r24
    15ec:	ec f7       	brge	.-6      	; 0x15e8 <m_rf_read+0x10>
    15ee:	81 e5       	ldi	r24, 0x51	; 81
    15f0:	80 93 bb 00 	sts	0x00BB, r24
    15f4:	84 e8       	ldi	r24, 0x84	; 132
    15f6:	80 93 bc 00 	sts	0x00BC, r24
    15fa:	ec eb       	ldi	r30, 0xBC	; 188
    15fc:	f0 e0       	ldi	r31, 0x00	; 0
    15fe:	80 81       	ld	r24, Z
    1600:	88 23       	and	r24, r24
    1602:	ec f7       	brge	.-6      	; 0x15fe <m_rf_read+0x26>
    1604:	80 91 b9 00 	lds	r24, 0x00B9
    1608:	88 7f       	andi	r24, 0xF8	; 248
    160a:	88 34       	cpi	r24, 0x48	; 72
    160c:	29 f4       	brne	.+10     	; 0x1618 <m_rf_read+0x40>
    160e:	84 e9       	ldi	r24, 0x94	; 148
    1610:	80 93 bc 00 	sts	0x00BC, r24
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	3e c0       	rjmp	.+124    	; 0x1694 <m_rf_read+0xbc>
    1618:	84 ec       	ldi	r24, 0xC4	; 196
    161a:	80 93 bc 00 	sts	0x00BC, r24
    161e:	ec eb       	ldi	r30, 0xBC	; 188
    1620:	f0 e0       	ldi	r31, 0x00	; 0
    1622:	80 81       	ld	r24, Z
    1624:	88 23       	and	r24, r24
    1626:	ec f7       	brge	.-6      	; 0x1622 <m_rf_read+0x4a>
    1628:	20 91 bb 00 	lds	r18, 0x00BB
    162c:	26 17       	cp	r18, r22
    162e:	49 f4       	brne	.+18     	; 0x1642 <m_rf_read+0x6a>
    1630:	30 e0       	ldi	r19, 0x00	; 0
    1632:	21 50       	subi	r18, 0x01	; 1
    1634:	30 40       	sbci	r19, 0x00	; 0
    1636:	12 16       	cp	r1, r18
    1638:	13 06       	cpc	r1, r19
    163a:	44 f0       	brlt	.+16     	; 0x164c <m_rf_read+0x74>
    163c:	20 e0       	ldi	r18, 0x00	; 0
    163e:	30 e0       	ldi	r19, 0x00	; 0
    1640:	17 c0       	rjmp	.+46     	; 0x1670 <m_rf_read+0x98>
    1642:	84 e9       	ldi	r24, 0x94	; 148
    1644:	80 93 bc 00 	sts	0x00BC, r24
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	24 c0       	rjmp	.+72     	; 0x1694 <m_rf_read+0xbc>
    164c:	da 01       	movw	r26, r20
    164e:	80 e0       	ldi	r24, 0x00	; 0
    1650:	90 e0       	ldi	r25, 0x00	; 0
    1652:	ec eb       	ldi	r30, 0xBC	; 188
    1654:	f0 e0       	ldi	r31, 0x00	; 0
    1656:	74 ec       	ldi	r23, 0xC4	; 196
    1658:	cb eb       	ldi	r28, 0xBB	; 187
    165a:	d0 e0       	ldi	r29, 0x00	; 0
    165c:	70 83       	st	Z, r23
    165e:	60 81       	ld	r22, Z
    1660:	66 23       	and	r22, r22
    1662:	ec f7       	brge	.-6      	; 0x165e <m_rf_read+0x86>
    1664:	68 81       	ld	r22, Y
    1666:	6d 93       	st	X+, r22
    1668:	01 96       	adiw	r24, 0x01	; 1
    166a:	82 17       	cp	r24, r18
    166c:	93 07       	cpc	r25, r19
    166e:	b4 f3       	brlt	.-20     	; 0x165c <m_rf_read+0x84>
    1670:	84 e8       	ldi	r24, 0x84	; 132
    1672:	80 93 bc 00 	sts	0x00BC, r24
    1676:	ec eb       	ldi	r30, 0xBC	; 188
    1678:	f0 e0       	ldi	r31, 0x00	; 0
    167a:	80 81       	ld	r24, Z
    167c:	88 23       	and	r24, r24
    167e:	ec f7       	brge	.-6      	; 0x167a <m_rf_read+0xa2>
    1680:	80 91 bb 00 	lds	r24, 0x00BB
    1684:	24 0f       	add	r18, r20
    1686:	35 1f       	adc	r19, r21
    1688:	f9 01       	movw	r30, r18
    168a:	80 83       	st	Z, r24
    168c:	84 e9       	ldi	r24, 0x94	; 148
    168e:	80 93 bc 00 	sts	0x00BC, r24
    1692:	81 e0       	ldi	r24, 0x01	; 1
    1694:	df 91       	pop	r29
    1696:	cf 91       	pop	r28
    1698:	08 95       	ret

0000169a <m_rf_send>:
    169a:	cf 93       	push	r28
    169c:	df 93       	push	r29
    169e:	f8 94       	cli
    16a0:	94 ea       	ldi	r25, 0xA4	; 164
    16a2:	90 93 bc 00 	sts	0x00BC, r25
    16a6:	ec eb       	ldi	r30, 0xBC	; 188
    16a8:	f0 e0       	ldi	r31, 0x00	; 0
    16aa:	90 81       	ld	r25, Z
    16ac:	99 23       	and	r25, r25
    16ae:	ec f7       	brge	.-6      	; 0x16aa <m_rf_send+0x10>
    16b0:	90 e5       	ldi	r25, 0x50	; 80
    16b2:	90 93 bb 00 	sts	0x00BB, r25
    16b6:	94 e8       	ldi	r25, 0x84	; 132
    16b8:	90 93 bc 00 	sts	0x00BC, r25
    16bc:	ec eb       	ldi	r30, 0xBC	; 188
    16be:	f0 e0       	ldi	r31, 0x00	; 0
    16c0:	90 81       	ld	r25, Z
    16c2:	99 23       	and	r25, r25
    16c4:	ec f7       	brge	.-6      	; 0x16c0 <m_rf_send+0x26>
    16c6:	90 91 b9 00 	lds	r25, 0x00B9
    16ca:	98 7f       	andi	r25, 0xF8	; 248
    16cc:	90 32       	cpi	r25, 0x20	; 32
    16ce:	31 f4       	brne	.+12     	; 0x16dc <m_rf_send+0x42>
    16d0:	84 e9       	ldi	r24, 0x94	; 148
    16d2:	80 93 bc 00 	sts	0x00BC, r24
    16d6:	78 94       	sei
    16d8:	80 e0       	ldi	r24, 0x00	; 0
    16da:	32 c0       	rjmp	.+100    	; 0x1740 <m_rf_send+0xa6>
    16dc:	93 e0       	ldi	r25, 0x03	; 3
    16de:	90 93 bb 00 	sts	0x00BB, r25
    16e2:	94 e8       	ldi	r25, 0x84	; 132
    16e4:	90 93 bc 00 	sts	0x00BC, r25
    16e8:	ec eb       	ldi	r30, 0xBC	; 188
    16ea:	f0 e0       	ldi	r31, 0x00	; 0
    16ec:	90 81       	ld	r25, Z
    16ee:	99 23       	and	r25, r25
    16f0:	ec f7       	brge	.-6      	; 0x16ec <m_rf_send+0x52>
    16f2:	80 93 bb 00 	sts	0x00BB, r24
    16f6:	84 e8       	ldi	r24, 0x84	; 132
    16f8:	80 93 bc 00 	sts	0x00BC, r24
    16fc:	ec eb       	ldi	r30, 0xBC	; 188
    16fe:	f0 e0       	ldi	r31, 0x00	; 0
    1700:	80 81       	ld	r24, Z
    1702:	88 23       	and	r24, r24
    1704:	ec f7       	brge	.-6      	; 0x1700 <m_rf_send+0x66>
    1706:	24 2f       	mov	r18, r20
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	12 16       	cp	r1, r18
    170c:	13 06       	cpc	r1, r19
    170e:	9c f4       	brge	.+38     	; 0x1736 <m_rf_send+0x9c>
    1710:	a6 2f       	mov	r26, r22
    1712:	b7 2f       	mov	r27, r23
    1714:	80 e0       	ldi	r24, 0x00	; 0
    1716:	90 e0       	ldi	r25, 0x00	; 0
    1718:	cb eb       	ldi	r28, 0xBB	; 187
    171a:	d0 e0       	ldi	r29, 0x00	; 0
    171c:	ec eb       	ldi	r30, 0xBC	; 188
    171e:	f0 e0       	ldi	r31, 0x00	; 0
    1720:	54 e8       	ldi	r21, 0x84	; 132
    1722:	4d 91       	ld	r20, X+
    1724:	48 83       	st	Y, r20
    1726:	50 83       	st	Z, r21
    1728:	40 81       	ld	r20, Z
    172a:	44 23       	and	r20, r20
    172c:	ec f7       	brge	.-6      	; 0x1728 <m_rf_send+0x8e>
    172e:	01 96       	adiw	r24, 0x01	; 1
    1730:	82 17       	cp	r24, r18
    1732:	93 07       	cpc	r25, r19
    1734:	b4 f3       	brlt	.-20     	; 0x1722 <m_rf_send+0x88>
    1736:	84 e9       	ldi	r24, 0x94	; 148
    1738:	80 93 bc 00 	sts	0x00BC, r24
    173c:	78 94       	sei
    173e:	81 e0       	ldi	r24, 0x01	; 1
    1740:	df 91       	pop	r29
    1742:	cf 91       	pop	r28
    1744:	08 95       	ret

00001746 <m_usb_init>:
    1746:	81 e0       	ldi	r24, 0x01	; 1
    1748:	80 93 d7 00 	sts	0x00D7, r24
    174c:	80 ea       	ldi	r24, 0xA0	; 160
    174e:	80 93 d8 00 	sts	0x00D8, r24
    1752:	82 e1       	ldi	r24, 0x12	; 18
    1754:	89 bd       	out	0x29, r24	; 41
    1756:	09 b4       	in	r0, 0x29	; 41
    1758:	00 fe       	sbrs	r0, 0
    175a:	fd cf       	rjmp	.-6      	; 0x1756 <m_usb_init+0x10>
    175c:	80 e9       	ldi	r24, 0x90	; 144
    175e:	80 93 d8 00 	sts	0x00D8, r24
    1762:	10 92 e0 00 	sts	0x00E0, r1
    1766:	10 92 61 01 	sts	0x0161, r1
    176a:	10 92 62 01 	sts	0x0162, r1
    176e:	8c e0       	ldi	r24, 0x0C	; 12
    1770:	80 93 e2 00 	sts	0x00E2, r24
    1774:	78 94       	sei
    1776:	08 95       	ret

00001778 <m_usb_isconnected>:
    1778:	80 91 61 01 	lds	r24, 0x0161
    177c:	08 95       	ret

0000177e <m_usb_rx_char>:
    177e:	9f b7       	in	r25, 0x3f	; 63
    1780:	f8 94       	cli
    1782:	80 91 61 01 	lds	r24, 0x0161
    1786:	88 23       	and	r24, r24
    1788:	19 f4       	brne	.+6      	; 0x1790 <m_usb_rx_char+0x12>
    178a:	9f bf       	out	0x3f, r25	; 63
    178c:	8f ef       	ldi	r24, 0xFF	; 255
    178e:	08 95       	ret
    1790:	83 e0       	ldi	r24, 0x03	; 3
    1792:	80 93 e9 00 	sts	0x00E9, r24
    1796:	80 91 e8 00 	lds	r24, 0x00E8
    179a:	85 fd       	sbrc	r24, 5
    179c:	03 c0       	rjmp	.+6      	; 0x17a4 <m_usb_rx_char+0x26>
    179e:	9f bf       	out	0x3f, r25	; 63
    17a0:	8f ef       	ldi	r24, 0xFF	; 255
    17a2:	08 95       	ret
    17a4:	80 91 f1 00 	lds	r24, 0x00F1
    17a8:	20 91 e8 00 	lds	r18, 0x00E8
    17ac:	25 fd       	sbrc	r18, 5
    17ae:	03 c0       	rjmp	.+6      	; 0x17b6 <m_usb_rx_char+0x38>
    17b0:	2b e6       	ldi	r18, 0x6B	; 107
    17b2:	20 93 e8 00 	sts	0x00E8, r18
    17b6:	9f bf       	out	0x3f, r25	; 63
    17b8:	08 95       	ret

000017ba <m_usb_rx_available>:
    17ba:	9f b7       	in	r25, 0x3f	; 63
    17bc:	f8 94       	cli
    17be:	80 91 61 01 	lds	r24, 0x0161
    17c2:	88 23       	and	r24, r24
    17c4:	31 f0       	breq	.+12     	; 0x17d2 <m_usb_rx_available+0x18>
    17c6:	83 e0       	ldi	r24, 0x03	; 3
    17c8:	80 93 e9 00 	sts	0x00E9, r24
    17cc:	80 91 f2 00 	lds	r24, 0x00F2
    17d0:	01 c0       	rjmp	.+2      	; 0x17d4 <m_usb_rx_available+0x1a>
    17d2:	80 e0       	ldi	r24, 0x00	; 0
    17d4:	9f bf       	out	0x3f, r25	; 63
    17d6:	08 95       	ret

000017d8 <m_usb_rx_flush>:
    17d8:	80 91 61 01 	lds	r24, 0x0161
    17dc:	88 23       	and	r24, r24
    17de:	89 f0       	breq	.+34     	; 0x1802 <m_usb_rx_flush+0x2a>
    17e0:	2f b7       	in	r18, 0x3f	; 63
    17e2:	f8 94       	cli
    17e4:	83 e0       	ldi	r24, 0x03	; 3
    17e6:	80 93 e9 00 	sts	0x00E9, r24
    17ea:	80 91 e8 00 	lds	r24, 0x00E8
    17ee:	85 ff       	sbrs	r24, 5
    17f0:	07 c0       	rjmp	.+14     	; 0x1800 <m_usb_rx_flush+0x28>
    17f2:	e8 ee       	ldi	r30, 0xE8	; 232
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	9b e6       	ldi	r25, 0x6B	; 107
    17f8:	90 83       	st	Z, r25
    17fa:	80 81       	ld	r24, Z
    17fc:	85 fd       	sbrc	r24, 5
    17fe:	fc cf       	rjmp	.-8      	; 0x17f8 <m_usb_rx_flush+0x20>
    1800:	2f bf       	out	0x3f, r18	; 63
    1802:	08 95       	ret

00001804 <m_usb_tx_char>:
    1804:	cf 93       	push	r28
    1806:	df 93       	push	r29
    1808:	90 91 61 01 	lds	r25, 0x0161
    180c:	99 23       	and	r25, r25
    180e:	09 f4       	brne	.+2      	; 0x1812 <m_usb_tx_char+0xe>
    1810:	4d c0       	rjmp	.+154    	; 0x18ac <m_usb_tx_char+0xa8>
    1812:	9f b7       	in	r25, 0x3f	; 63
    1814:	f8 94       	cli
    1816:	24 e0       	ldi	r18, 0x04	; 4
    1818:	20 93 e9 00 	sts	0x00E9, r18
    181c:	20 91 63 01 	lds	r18, 0x0163
    1820:	22 23       	and	r18, r18
    1822:	49 f0       	breq	.+18     	; 0x1836 <m_usb_tx_char+0x32>
    1824:	20 91 e8 00 	lds	r18, 0x00E8
    1828:	25 fd       	sbrc	r18, 5
    182a:	03 c0       	rjmp	.+6      	; 0x1832 <m_usb_tx_char+0x2e>
    182c:	9f bf       	out	0x3f, r25	; 63
    182e:	8f ef       	ldi	r24, 0xFF	; 255
    1830:	42 c0       	rjmp	.+132    	; 0x18b6 <m_usb_tx_char+0xb2>
    1832:	10 92 63 01 	sts	0x0163, r1
    1836:	30 91 e4 00 	lds	r19, 0x00E4
    183a:	20 91 e8 00 	lds	r18, 0x00E8
    183e:	25 fd       	sbrc	r18, 5
    1840:	26 c0       	rjmp	.+76     	; 0x188e <m_usb_tx_char+0x8a>
    1842:	37 5e       	subi	r19, 0xE7	; 231
    1844:	9f bf       	out	0x3f, r25	; 63
    1846:	90 91 e4 00 	lds	r25, 0x00E4
    184a:	93 17       	cp	r25, r19
    184c:	49 f0       	breq	.+18     	; 0x1860 <m_usb_tx_char+0x5c>
    184e:	90 91 61 01 	lds	r25, 0x0161
    1852:	99 23       	and	r25, r25
    1854:	79 f4       	brne	.+30     	; 0x1874 <m_usb_tx_char+0x70>
    1856:	2c c0       	rjmp	.+88     	; 0x18b0 <m_usb_tx_char+0xac>
    1858:	9f bf       	out	0x3f, r25	; 63
    185a:	98 81       	ld	r25, Y
    185c:	93 17       	cp	r25, r19
    185e:	29 f4       	brne	.+10     	; 0x186a <m_usb_tx_char+0x66>
    1860:	81 e0       	ldi	r24, 0x01	; 1
    1862:	80 93 63 01 	sts	0x0163, r24
    1866:	8f ef       	ldi	r24, 0xFF	; 255
    1868:	26 c0       	rjmp	.+76     	; 0x18b6 <m_usb_tx_char+0xb2>
    186a:	90 91 61 01 	lds	r25, 0x0161
    186e:	99 23       	and	r25, r25
    1870:	41 f4       	brne	.+16     	; 0x1882 <m_usb_tx_char+0x7e>
    1872:	20 c0       	rjmp	.+64     	; 0x18b4 <m_usb_tx_char+0xb0>
    1874:	a9 ee       	ldi	r26, 0xE9	; 233
    1876:	b0 e0       	ldi	r27, 0x00	; 0
    1878:	44 e0       	ldi	r20, 0x04	; 4
    187a:	e8 ee       	ldi	r30, 0xE8	; 232
    187c:	f0 e0       	ldi	r31, 0x00	; 0
    187e:	c4 ee       	ldi	r28, 0xE4	; 228
    1880:	d0 e0       	ldi	r29, 0x00	; 0
    1882:	9f b7       	in	r25, 0x3f	; 63
    1884:	f8 94       	cli
    1886:	4c 93       	st	X, r20
    1888:	20 81       	ld	r18, Z
    188a:	25 ff       	sbrs	r18, 5
    188c:	e5 cf       	rjmp	.-54     	; 0x1858 <m_usb_tx_char+0x54>
    188e:	80 93 f1 00 	sts	0x00F1, r24
    1892:	80 91 e8 00 	lds	r24, 0x00E8
    1896:	85 fd       	sbrc	r24, 5
    1898:	03 c0       	rjmp	.+6      	; 0x18a0 <m_usb_tx_char+0x9c>
    189a:	8a e3       	ldi	r24, 0x3A	; 58
    189c:	80 93 e8 00 	sts	0x00E8, r24
    18a0:	85 e0       	ldi	r24, 0x05	; 5
    18a2:	80 93 60 01 	sts	0x0160, r24
    18a6:	9f bf       	out	0x3f, r25	; 63
    18a8:	80 e0       	ldi	r24, 0x00	; 0
    18aa:	05 c0       	rjmp	.+10     	; 0x18b6 <m_usb_tx_char+0xb2>
    18ac:	8f ef       	ldi	r24, 0xFF	; 255
    18ae:	03 c0       	rjmp	.+6      	; 0x18b6 <m_usb_tx_char+0xb2>
    18b0:	8f ef       	ldi	r24, 0xFF	; 255
    18b2:	01 c0       	rjmp	.+2      	; 0x18b6 <m_usb_tx_char+0xb2>
    18b4:	8f ef       	ldi	r24, 0xFF	; 255
    18b6:	df 91       	pop	r29
    18b8:	cf 91       	pop	r28
    18ba:	08 95       	ret

000018bc <usb_serial_putchar_nowait>:
    18bc:	90 91 61 01 	lds	r25, 0x0161
    18c0:	99 23       	and	r25, r25
    18c2:	d9 f0       	breq	.+54     	; 0x18fa <usb_serial_putchar_nowait+0x3e>
    18c4:	2f b7       	in	r18, 0x3f	; 63
    18c6:	f8 94       	cli
    18c8:	94 e0       	ldi	r25, 0x04	; 4
    18ca:	90 93 e9 00 	sts	0x00E9, r25
    18ce:	90 91 e8 00 	lds	r25, 0x00E8
    18d2:	95 fd       	sbrc	r25, 5
    18d4:	03 c0       	rjmp	.+6      	; 0x18dc <usb_serial_putchar_nowait+0x20>
    18d6:	2f bf       	out	0x3f, r18	; 63
    18d8:	8f ef       	ldi	r24, 0xFF	; 255
    18da:	08 95       	ret
    18dc:	80 93 f1 00 	sts	0x00F1, r24
    18e0:	80 91 e8 00 	lds	r24, 0x00E8
    18e4:	85 fd       	sbrc	r24, 5
    18e6:	03 c0       	rjmp	.+6      	; 0x18ee <usb_serial_putchar_nowait+0x32>
    18e8:	8a e3       	ldi	r24, 0x3A	; 58
    18ea:	80 93 e8 00 	sts	0x00E8, r24
    18ee:	85 e0       	ldi	r24, 0x05	; 5
    18f0:	80 93 60 01 	sts	0x0160, r24
    18f4:	2f bf       	out	0x3f, r18	; 63
    18f6:	80 e0       	ldi	r24, 0x00	; 0
    18f8:	08 95       	ret
    18fa:	8f ef       	ldi	r24, 0xFF	; 255
    18fc:	08 95       	ret

000018fe <usb_serial_write>:
    18fe:	9f 92       	push	r9
    1900:	af 92       	push	r10
    1902:	bf 92       	push	r11
    1904:	cf 92       	push	r12
    1906:	df 92       	push	r13
    1908:	ef 92       	push	r14
    190a:	ff 92       	push	r15
    190c:	0f 93       	push	r16
    190e:	1f 93       	push	r17
    1910:	cf 93       	push	r28
    1912:	df 93       	push	r29
    1914:	dc 01       	movw	r26, r24
    1916:	7b 01       	movw	r14, r22
    1918:	80 91 61 01 	lds	r24, 0x0161
    191c:	88 23       	and	r24, r24
    191e:	09 f4       	brne	.+2      	; 0x1922 <usb_serial_write+0x24>
    1920:	3a c1       	rjmp	.+628    	; 0x1b96 <usb_serial_write+0x298>
    1922:	2f b7       	in	r18, 0x3f	; 63
    1924:	f8 94       	cli
    1926:	84 e0       	ldi	r24, 0x04	; 4
    1928:	80 93 e9 00 	sts	0x00E9, r24
    192c:	80 91 63 01 	lds	r24, 0x0163
    1930:	88 23       	and	r24, r24
    1932:	49 f0       	breq	.+18     	; 0x1946 <usb_serial_write+0x48>
    1934:	80 91 e8 00 	lds	r24, 0x00E8
    1938:	85 fd       	sbrc	r24, 5
    193a:	03 c0       	rjmp	.+6      	; 0x1942 <usb_serial_write+0x44>
    193c:	2f bf       	out	0x3f, r18	; 63
    193e:	8f ef       	ldi	r24, 0xFF	; 255
    1940:	2f c1       	rjmp	.+606    	; 0x1ba0 <usb_serial_write+0x2a2>
    1942:	10 92 63 01 	sts	0x0163, r1
    1946:	e1 14       	cp	r14, r1
    1948:	f1 04       	cpc	r15, r1
    194a:	09 f4       	brne	.+2      	; 0x194e <usb_serial_write+0x50>
    194c:	21 c1       	rjmp	.+578    	; 0x1b90 <usb_serial_write+0x292>
    194e:	c4 ee       	ldi	r28, 0xE4	; 228
    1950:	d0 e0       	ldi	r29, 0x00	; 0
    1952:	48 ee       	ldi	r20, 0xE8	; 232
    1954:	50 e0       	ldi	r21, 0x00	; 0
    1956:	09 ee       	ldi	r16, 0xE9	; 233
    1958:	10 e0       	ldi	r17, 0x00	; 0
    195a:	34 e0       	ldi	r19, 0x04	; 4
    195c:	0f 2e       	mov	r0, r31
    195e:	f2 ef       	ldi	r31, 0xF2	; 242
    1960:	af 2e       	mov	r10, r31
    1962:	bb 24       	eor	r11, r11
    1964:	f0 2d       	mov	r31, r0
    1966:	dd 24       	eor	r13, r13
    1968:	68 94       	set
    196a:	d6 f8       	bld	r13, 6
    196c:	61 ef       	ldi	r22, 0xF1	; 241
    196e:	70 e0       	ldi	r23, 0x00	; 0
    1970:	0f 2e       	mov	r0, r31
    1972:	fa e3       	ldi	r31, 0x3A	; 58
    1974:	9f 2e       	mov	r9, r31
    1976:	f0 2d       	mov	r31, r0
    1978:	0f 2e       	mov	r0, r31
    197a:	f5 e0       	ldi	r31, 0x05	; 5
    197c:	cf 2e       	mov	r12, r31
    197e:	f0 2d       	mov	r31, r0
    1980:	98 81       	ld	r25, Y
    1982:	fa 01       	movw	r30, r20
    1984:	80 81       	ld	r24, Z
    1986:	85 fd       	sbrc	r24, 5
    1988:	20 c0       	rjmp	.+64     	; 0x19ca <usb_serial_write+0xcc>
    198a:	97 5e       	subi	r25, 0xE7	; 231
    198c:	2f bf       	out	0x3f, r18	; 63
    198e:	88 81       	ld	r24, Y
    1990:	89 17       	cp	r24, r25
    1992:	49 f0       	breq	.+18     	; 0x19a6 <usb_serial_write+0xa8>
    1994:	80 91 61 01 	lds	r24, 0x0161
    1998:	88 23       	and	r24, r24
    199a:	79 f4       	brne	.+30     	; 0x19ba <usb_serial_write+0xbc>
    199c:	fe c0       	rjmp	.+508    	; 0x1b9a <usb_serial_write+0x29c>
    199e:	2f bf       	out	0x3f, r18	; 63
    19a0:	88 81       	ld	r24, Y
    19a2:	89 17       	cp	r24, r25
    19a4:	29 f4       	brne	.+10     	; 0x19b0 <usb_serial_write+0xb2>
    19a6:	81 e0       	ldi	r24, 0x01	; 1
    19a8:	80 93 63 01 	sts	0x0163, r24
    19ac:	8f ef       	ldi	r24, 0xFF	; 255
    19ae:	f8 c0       	rjmp	.+496    	; 0x1ba0 <usb_serial_write+0x2a2>
    19b0:	80 91 61 01 	lds	r24, 0x0161
    19b4:	88 23       	and	r24, r24
    19b6:	09 f4       	brne	.+2      	; 0x19ba <usb_serial_write+0xbc>
    19b8:	f2 c0       	rjmp	.+484    	; 0x1b9e <usb_serial_write+0x2a0>
    19ba:	2f b7       	in	r18, 0x3f	; 63
    19bc:	f8 94       	cli
    19be:	f8 01       	movw	r30, r16
    19c0:	30 83       	st	Z, r19
    19c2:	fa 01       	movw	r30, r20
    19c4:	80 81       	ld	r24, Z
    19c6:	85 ff       	sbrs	r24, 5
    19c8:	ea cf       	rjmp	.-44     	; 0x199e <usb_serial_write+0xa0>
    19ca:	f5 01       	movw	r30, r10
    19cc:	80 81       	ld	r24, Z
    19ce:	ed 2d       	mov	r30, r13
    19d0:	e8 1b       	sub	r30, r24
    19d2:	8e 2f       	mov	r24, r30
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	e8 16       	cp	r14, r24
    19d8:	f9 06       	cpc	r15, r25
    19da:	08 f4       	brcc	.+2      	; 0x19de <usb_serial_write+0xe0>
    19dc:	ee 2d       	mov	r30, r14
    19de:	ee 1a       	sub	r14, r30
    19e0:	f1 08       	sbc	r15, r1
    19e2:	f0 e0       	ldi	r31, 0x00	; 0
    19e4:	e1 34       	cpi	r30, 0x41	; 65
    19e6:	f1 05       	cpc	r31, r1
    19e8:	08 f0       	brcs	.+2      	; 0x19ec <usb_serial_write+0xee>
    19ea:	c5 c0       	rjmp	.+394    	; 0x1b76 <usb_serial_write+0x278>
    19ec:	ea 5a       	subi	r30, 0xAA	; 170
    19ee:	ff 4f       	sbci	r31, 0xFF	; 255
    19f0:	ee 0f       	add	r30, r30
    19f2:	ff 1f       	adc	r31, r31
    19f4:	05 90       	lpm	r0, Z+
    19f6:	f4 91       	lpm	r31, Z
    19f8:	e0 2d       	mov	r30, r0
    19fa:	09 94       	ijmp
    19fc:	8d 91       	ld	r24, X+
    19fe:	fb 01       	movw	r30, r22
    1a00:	80 83       	st	Z, r24
    1a02:	8d 91       	ld	r24, X+
    1a04:	fb 01       	movw	r30, r22
    1a06:	80 83       	st	Z, r24
    1a08:	8d 91       	ld	r24, X+
    1a0a:	fb 01       	movw	r30, r22
    1a0c:	80 83       	st	Z, r24
    1a0e:	8d 91       	ld	r24, X+
    1a10:	fb 01       	movw	r30, r22
    1a12:	80 83       	st	Z, r24
    1a14:	8d 91       	ld	r24, X+
    1a16:	fb 01       	movw	r30, r22
    1a18:	80 83       	st	Z, r24
    1a1a:	8d 91       	ld	r24, X+
    1a1c:	fb 01       	movw	r30, r22
    1a1e:	80 83       	st	Z, r24
    1a20:	8d 91       	ld	r24, X+
    1a22:	fb 01       	movw	r30, r22
    1a24:	80 83       	st	Z, r24
    1a26:	8d 91       	ld	r24, X+
    1a28:	fb 01       	movw	r30, r22
    1a2a:	80 83       	st	Z, r24
    1a2c:	8d 91       	ld	r24, X+
    1a2e:	fb 01       	movw	r30, r22
    1a30:	80 83       	st	Z, r24
    1a32:	8d 91       	ld	r24, X+
    1a34:	fb 01       	movw	r30, r22
    1a36:	80 83       	st	Z, r24
    1a38:	8d 91       	ld	r24, X+
    1a3a:	fb 01       	movw	r30, r22
    1a3c:	80 83       	st	Z, r24
    1a3e:	8d 91       	ld	r24, X+
    1a40:	fb 01       	movw	r30, r22
    1a42:	80 83       	st	Z, r24
    1a44:	8d 91       	ld	r24, X+
    1a46:	fb 01       	movw	r30, r22
    1a48:	80 83       	st	Z, r24
    1a4a:	8d 91       	ld	r24, X+
    1a4c:	fb 01       	movw	r30, r22
    1a4e:	80 83       	st	Z, r24
    1a50:	8d 91       	ld	r24, X+
    1a52:	fb 01       	movw	r30, r22
    1a54:	80 83       	st	Z, r24
    1a56:	8d 91       	ld	r24, X+
    1a58:	fb 01       	movw	r30, r22
    1a5a:	80 83       	st	Z, r24
    1a5c:	8d 91       	ld	r24, X+
    1a5e:	fb 01       	movw	r30, r22
    1a60:	80 83       	st	Z, r24
    1a62:	8d 91       	ld	r24, X+
    1a64:	fb 01       	movw	r30, r22
    1a66:	80 83       	st	Z, r24
    1a68:	8d 91       	ld	r24, X+
    1a6a:	fb 01       	movw	r30, r22
    1a6c:	80 83       	st	Z, r24
    1a6e:	8d 91       	ld	r24, X+
    1a70:	fb 01       	movw	r30, r22
    1a72:	80 83       	st	Z, r24
    1a74:	8d 91       	ld	r24, X+
    1a76:	fb 01       	movw	r30, r22
    1a78:	80 83       	st	Z, r24
    1a7a:	8d 91       	ld	r24, X+
    1a7c:	fb 01       	movw	r30, r22
    1a7e:	80 83       	st	Z, r24
    1a80:	8d 91       	ld	r24, X+
    1a82:	fb 01       	movw	r30, r22
    1a84:	80 83       	st	Z, r24
    1a86:	8d 91       	ld	r24, X+
    1a88:	fb 01       	movw	r30, r22
    1a8a:	80 83       	st	Z, r24
    1a8c:	8d 91       	ld	r24, X+
    1a8e:	fb 01       	movw	r30, r22
    1a90:	80 83       	st	Z, r24
    1a92:	8d 91       	ld	r24, X+
    1a94:	fb 01       	movw	r30, r22
    1a96:	80 83       	st	Z, r24
    1a98:	8d 91       	ld	r24, X+
    1a9a:	fb 01       	movw	r30, r22
    1a9c:	80 83       	st	Z, r24
    1a9e:	8d 91       	ld	r24, X+
    1aa0:	fb 01       	movw	r30, r22
    1aa2:	80 83       	st	Z, r24
    1aa4:	8d 91       	ld	r24, X+
    1aa6:	fb 01       	movw	r30, r22
    1aa8:	80 83       	st	Z, r24
    1aaa:	8d 91       	ld	r24, X+
    1aac:	fb 01       	movw	r30, r22
    1aae:	80 83       	st	Z, r24
    1ab0:	8d 91       	ld	r24, X+
    1ab2:	fb 01       	movw	r30, r22
    1ab4:	80 83       	st	Z, r24
    1ab6:	8d 91       	ld	r24, X+
    1ab8:	fb 01       	movw	r30, r22
    1aba:	80 83       	st	Z, r24
    1abc:	8d 91       	ld	r24, X+
    1abe:	fb 01       	movw	r30, r22
    1ac0:	80 83       	st	Z, r24
    1ac2:	8d 91       	ld	r24, X+
    1ac4:	fb 01       	movw	r30, r22
    1ac6:	80 83       	st	Z, r24
    1ac8:	8d 91       	ld	r24, X+
    1aca:	fb 01       	movw	r30, r22
    1acc:	80 83       	st	Z, r24
    1ace:	8d 91       	ld	r24, X+
    1ad0:	fb 01       	movw	r30, r22
    1ad2:	80 83       	st	Z, r24
    1ad4:	8d 91       	ld	r24, X+
    1ad6:	fb 01       	movw	r30, r22
    1ad8:	80 83       	st	Z, r24
    1ada:	8d 91       	ld	r24, X+
    1adc:	fb 01       	movw	r30, r22
    1ade:	80 83       	st	Z, r24
    1ae0:	8d 91       	ld	r24, X+
    1ae2:	fb 01       	movw	r30, r22
    1ae4:	80 83       	st	Z, r24
    1ae6:	8d 91       	ld	r24, X+
    1ae8:	fb 01       	movw	r30, r22
    1aea:	80 83       	st	Z, r24
    1aec:	8d 91       	ld	r24, X+
    1aee:	fb 01       	movw	r30, r22
    1af0:	80 83       	st	Z, r24
    1af2:	8d 91       	ld	r24, X+
    1af4:	fb 01       	movw	r30, r22
    1af6:	80 83       	st	Z, r24
    1af8:	8d 91       	ld	r24, X+
    1afa:	fb 01       	movw	r30, r22
    1afc:	80 83       	st	Z, r24
    1afe:	8d 91       	ld	r24, X+
    1b00:	fb 01       	movw	r30, r22
    1b02:	80 83       	st	Z, r24
    1b04:	8d 91       	ld	r24, X+
    1b06:	fb 01       	movw	r30, r22
    1b08:	80 83       	st	Z, r24
    1b0a:	8d 91       	ld	r24, X+
    1b0c:	fb 01       	movw	r30, r22
    1b0e:	80 83       	st	Z, r24
    1b10:	8d 91       	ld	r24, X+
    1b12:	fb 01       	movw	r30, r22
    1b14:	80 83       	st	Z, r24
    1b16:	8d 91       	ld	r24, X+
    1b18:	fb 01       	movw	r30, r22
    1b1a:	80 83       	st	Z, r24
    1b1c:	8d 91       	ld	r24, X+
    1b1e:	fb 01       	movw	r30, r22
    1b20:	80 83       	st	Z, r24
    1b22:	8d 91       	ld	r24, X+
    1b24:	fb 01       	movw	r30, r22
    1b26:	80 83       	st	Z, r24
    1b28:	8d 91       	ld	r24, X+
    1b2a:	fb 01       	movw	r30, r22
    1b2c:	80 83       	st	Z, r24
    1b2e:	8d 91       	ld	r24, X+
    1b30:	fb 01       	movw	r30, r22
    1b32:	80 83       	st	Z, r24
    1b34:	8d 91       	ld	r24, X+
    1b36:	fb 01       	movw	r30, r22
    1b38:	80 83       	st	Z, r24
    1b3a:	8d 91       	ld	r24, X+
    1b3c:	fb 01       	movw	r30, r22
    1b3e:	80 83       	st	Z, r24
    1b40:	8d 91       	ld	r24, X+
    1b42:	fb 01       	movw	r30, r22
    1b44:	80 83       	st	Z, r24
    1b46:	8d 91       	ld	r24, X+
    1b48:	fb 01       	movw	r30, r22
    1b4a:	80 83       	st	Z, r24
    1b4c:	8d 91       	ld	r24, X+
    1b4e:	fb 01       	movw	r30, r22
    1b50:	80 83       	st	Z, r24
    1b52:	8d 91       	ld	r24, X+
    1b54:	fb 01       	movw	r30, r22
    1b56:	80 83       	st	Z, r24
    1b58:	8d 91       	ld	r24, X+
    1b5a:	fb 01       	movw	r30, r22
    1b5c:	80 83       	st	Z, r24
    1b5e:	8d 91       	ld	r24, X+
    1b60:	fb 01       	movw	r30, r22
    1b62:	80 83       	st	Z, r24
    1b64:	8d 91       	ld	r24, X+
    1b66:	fb 01       	movw	r30, r22
    1b68:	80 83       	st	Z, r24
    1b6a:	8d 91       	ld	r24, X+
    1b6c:	fb 01       	movw	r30, r22
    1b6e:	80 83       	st	Z, r24
    1b70:	8d 91       	ld	r24, X+
    1b72:	fb 01       	movw	r30, r22
    1b74:	80 83       	st	Z, r24
    1b76:	8d 91       	ld	r24, X+
    1b78:	fb 01       	movw	r30, r22
    1b7a:	80 83       	st	Z, r24
    1b7c:	fa 01       	movw	r30, r20
    1b7e:	80 81       	ld	r24, Z
    1b80:	85 ff       	sbrs	r24, 5
    1b82:	90 82       	st	Z, r9
    1b84:	c0 92 60 01 	sts	0x0160, r12
    1b88:	e1 14       	cp	r14, r1
    1b8a:	f1 04       	cpc	r15, r1
    1b8c:	09 f0       	breq	.+2      	; 0x1b90 <usb_serial_write+0x292>
    1b8e:	f8 ce       	rjmp	.-528    	; 0x1980 <usb_serial_write+0x82>
    1b90:	2f bf       	out	0x3f, r18	; 63
    1b92:	80 e0       	ldi	r24, 0x00	; 0
    1b94:	05 c0       	rjmp	.+10     	; 0x1ba0 <usb_serial_write+0x2a2>
    1b96:	8f ef       	ldi	r24, 0xFF	; 255
    1b98:	03 c0       	rjmp	.+6      	; 0x1ba0 <usb_serial_write+0x2a2>
    1b9a:	8f ef       	ldi	r24, 0xFF	; 255
    1b9c:	01 c0       	rjmp	.+2      	; 0x1ba0 <usb_serial_write+0x2a2>
    1b9e:	8f ef       	ldi	r24, 0xFF	; 255
    1ba0:	df 91       	pop	r29
    1ba2:	cf 91       	pop	r28
    1ba4:	1f 91       	pop	r17
    1ba6:	0f 91       	pop	r16
    1ba8:	ff 90       	pop	r15
    1baa:	ef 90       	pop	r14
    1bac:	df 90       	pop	r13
    1bae:	cf 90       	pop	r12
    1bb0:	bf 90       	pop	r11
    1bb2:	af 90       	pop	r10
    1bb4:	9f 90       	pop	r9
    1bb6:	08 95       	ret

00001bb8 <m_usb_tx_push>:
    1bb8:	8f b7       	in	r24, 0x3f	; 63
    1bba:	f8 94       	cli
    1bbc:	90 91 60 01 	lds	r25, 0x0160
    1bc0:	99 23       	and	r25, r25
    1bc2:	41 f0       	breq	.+16     	; 0x1bd4 <m_usb_tx_push+0x1c>
    1bc4:	94 e0       	ldi	r25, 0x04	; 4
    1bc6:	90 93 e9 00 	sts	0x00E9, r25
    1bca:	9a e3       	ldi	r25, 0x3A	; 58
    1bcc:	90 93 e8 00 	sts	0x00E8, r25
    1bd0:	10 92 60 01 	sts	0x0160, r1
    1bd4:	8f bf       	out	0x3f, r24	; 63
    1bd6:	08 95       	ret

00001bd8 <usb_serial_get_stopbits>:
    1bd8:	80 91 36 01 	lds	r24, 0x0136
    1bdc:	08 95       	ret

00001bde <usb_serial_get_paritytype>:
    1bde:	80 91 37 01 	lds	r24, 0x0137
    1be2:	08 95       	ret

00001be4 <usb_serial_get_numbits>:
    1be4:	80 91 38 01 	lds	r24, 0x0138
    1be8:	08 95       	ret

00001bea <usb_serial_get_control>:
    1bea:	80 91 62 01 	lds	r24, 0x0162
    1bee:	08 95       	ret

00001bf0 <usb_serial_set_control>:
    1bf0:	2f b7       	in	r18, 0x3f	; 63
    1bf2:	f8 94       	cli
    1bf4:	90 91 61 01 	lds	r25, 0x0161
    1bf8:	99 23       	and	r25, r25
    1bfa:	19 f4       	brne	.+6      	; 0x1c02 <usb_serial_set_control+0x12>
    1bfc:	2f bf       	out	0x3f, r18	; 63
    1bfe:	8f ef       	ldi	r24, 0xFF	; 255
    1c00:	08 95       	ret
    1c02:	92 e0       	ldi	r25, 0x02	; 2
    1c04:	90 93 e9 00 	sts	0x00E9, r25
    1c08:	90 91 e8 00 	lds	r25, 0x00E8
    1c0c:	95 fd       	sbrc	r25, 5
    1c0e:	03 c0       	rjmp	.+6      	; 0x1c16 <usb_serial_set_control+0x26>
    1c10:	2f bf       	out	0x3f, r18	; 63
    1c12:	8f ef       	ldi	r24, 0xFF	; 255
    1c14:	08 95       	ret
    1c16:	e1 ef       	ldi	r30, 0xF1	; 241
    1c18:	f0 e0       	ldi	r31, 0x00	; 0
    1c1a:	91 ea       	ldi	r25, 0xA1	; 161
    1c1c:	90 83       	st	Z, r25
    1c1e:	90 e2       	ldi	r25, 0x20	; 32
    1c20:	90 83       	st	Z, r25
    1c22:	10 82       	st	Z, r1
    1c24:	10 82       	st	Z, r1
    1c26:	10 82       	st	Z, r1
    1c28:	10 82       	st	Z, r1
    1c2a:	92 e0       	ldi	r25, 0x02	; 2
    1c2c:	90 83       	st	Z, r25
    1c2e:	10 82       	st	Z, r1
    1c30:	80 83       	st	Z, r24
    1c32:	10 82       	st	Z, r1
    1c34:	8a e3       	ldi	r24, 0x3A	; 58
    1c36:	80 93 e8 00 	sts	0x00E8, r24
    1c3a:	2f bf       	out	0x3f, r18	; 63
    1c3c:	80 e0       	ldi	r24, 0x00	; 0
    1c3e:	08 95       	ret

00001c40 <__vector_10>:
    1c40:	1f 92       	push	r1
    1c42:	0f 92       	push	r0
    1c44:	0f b6       	in	r0, 0x3f	; 63
    1c46:	0f 92       	push	r0
    1c48:	11 24       	eor	r1, r1
    1c4a:	8f 93       	push	r24
    1c4c:	9f 93       	push	r25
    1c4e:	ef 93       	push	r30
    1c50:	ff 93       	push	r31
    1c52:	e1 ee       	ldi	r30, 0xE1	; 225
    1c54:	f0 e0       	ldi	r31, 0x00	; 0
    1c56:	80 81       	ld	r24, Z
    1c58:	10 82       	st	Z, r1
    1c5a:	83 ff       	sbrs	r24, 3
    1c5c:	11 c0       	rjmp	.+34     	; 0x1c80 <__vector_10+0x40>
    1c5e:	10 92 e9 00 	sts	0x00E9, r1
    1c62:	91 e0       	ldi	r25, 0x01	; 1
    1c64:	90 93 eb 00 	sts	0x00EB, r25
    1c68:	10 92 ec 00 	sts	0x00EC, r1
    1c6c:	92 e1       	ldi	r25, 0x12	; 18
    1c6e:	90 93 ed 00 	sts	0x00ED, r25
    1c72:	98 e0       	ldi	r25, 0x08	; 8
    1c74:	90 93 f0 00 	sts	0x00F0, r25
    1c78:	10 92 61 01 	sts	0x0161, r1
    1c7c:	10 92 62 01 	sts	0x0162, r1
    1c80:	82 ff       	sbrs	r24, 2
    1c82:	13 c0       	rjmp	.+38     	; 0x1caa <__vector_10+0x6a>
    1c84:	80 91 61 01 	lds	r24, 0x0161
    1c88:	88 23       	and	r24, r24
    1c8a:	79 f0       	breq	.+30     	; 0x1caa <__vector_10+0x6a>
    1c8c:	80 91 60 01 	lds	r24, 0x0160
    1c90:	88 23       	and	r24, r24
    1c92:	59 f0       	breq	.+22     	; 0x1caa <__vector_10+0x6a>
    1c94:	81 50       	subi	r24, 0x01	; 1
    1c96:	80 93 60 01 	sts	0x0160, r24
    1c9a:	88 23       	and	r24, r24
    1c9c:	31 f4       	brne	.+12     	; 0x1caa <__vector_10+0x6a>
    1c9e:	84 e0       	ldi	r24, 0x04	; 4
    1ca0:	80 93 e9 00 	sts	0x00E9, r24
    1ca4:	8a e3       	ldi	r24, 0x3A	; 58
    1ca6:	80 93 e8 00 	sts	0x00E8, r24
    1caa:	ff 91       	pop	r31
    1cac:	ef 91       	pop	r30
    1cae:	9f 91       	pop	r25
    1cb0:	8f 91       	pop	r24
    1cb2:	0f 90       	pop	r0
    1cb4:	0f be       	out	0x3f, r0	; 63
    1cb6:	0f 90       	pop	r0
    1cb8:	1f 90       	pop	r1
    1cba:	18 95       	reti

00001cbc <__vector_11>:
    1cbc:	1f 92       	push	r1
    1cbe:	0f 92       	push	r0
    1cc0:	0f b6       	in	r0, 0x3f	; 63
    1cc2:	0f 92       	push	r0
    1cc4:	11 24       	eor	r1, r1
    1cc6:	0f 93       	push	r16
    1cc8:	1f 93       	push	r17
    1cca:	2f 93       	push	r18
    1ccc:	3f 93       	push	r19
    1cce:	4f 93       	push	r20
    1cd0:	5f 93       	push	r21
    1cd2:	6f 93       	push	r22
    1cd4:	7f 93       	push	r23
    1cd6:	8f 93       	push	r24
    1cd8:	9f 93       	push	r25
    1cda:	af 93       	push	r26
    1cdc:	bf 93       	push	r27
    1cde:	cf 93       	push	r28
    1ce0:	df 93       	push	r29
    1ce2:	ef 93       	push	r30
    1ce4:	ff 93       	push	r31
    1ce6:	10 92 e9 00 	sts	0x00E9, r1
    1cea:	80 91 e8 00 	lds	r24, 0x00E8
    1cee:	83 ff       	sbrs	r24, 3
    1cf0:	5b c1       	rjmp	.+694    	; 0x1fa8 <__vector_11+0x2ec>
    1cf2:	e1 ef       	ldi	r30, 0xF1	; 241
    1cf4:	f0 e0       	ldi	r31, 0x00	; 0
    1cf6:	40 81       	ld	r20, Z
    1cf8:	50 81       	ld	r21, Z
    1cfa:	60 81       	ld	r22, Z
    1cfc:	70 e0       	ldi	r23, 0x00	; 0
    1cfe:	20 81       	ld	r18, Z
    1d00:	92 2f       	mov	r25, r18
    1d02:	80 e0       	ldi	r24, 0x00	; 0
    1d04:	68 2b       	or	r22, r24
    1d06:	79 2b       	or	r23, r25
    1d08:	20 81       	ld	r18, Z
    1d0a:	30 e0       	ldi	r19, 0x00	; 0
    1d0c:	a0 81       	ld	r26, Z
    1d0e:	9a 2f       	mov	r25, r26
    1d10:	80 e0       	ldi	r24, 0x00	; 0
    1d12:	dc 01       	movw	r26, r24
    1d14:	a2 2b       	or	r26, r18
    1d16:	b3 2b       	or	r27, r19
    1d18:	30 81       	ld	r19, Z
    1d1a:	c0 81       	ld	r28, Z
    1d1c:	82 ef       	ldi	r24, 0xF2	; 242
    1d1e:	80 93 e8 00 	sts	0x00E8, r24
    1d22:	56 30       	cpi	r21, 0x06	; 6
    1d24:	09 f0       	breq	.+2      	; 0x1d28 <__vector_11+0x6c>
    1d26:	63 c0       	rjmp	.+198    	; 0x1dee <__vector_11+0x132>
    1d28:	04 c0       	rjmp	.+8      	; 0x1d32 <__vector_11+0x76>
    1d2a:	81 e2       	ldi	r24, 0x21	; 33
    1d2c:	80 93 eb 00 	sts	0x00EB, r24
    1d30:	3e c1       	rjmp	.+636    	; 0x1fae <__vector_11+0x2f2>
    1d32:	26 e0       	ldi	r18, 0x06	; 6
    1d34:	4e e2       	ldi	r20, 0x2E	; 46
    1d36:	51 e0       	ldi	r21, 0x01	; 1
    1d38:	fa 01       	movw	r30, r20
    1d3a:	85 91       	lpm	r24, Z+
    1d3c:	94 91       	lpm	r25, Z
    1d3e:	68 17       	cp	r22, r24
    1d40:	79 07       	cpc	r23, r25
    1d42:	19 f0       	breq	.+6      	; 0x1d4a <__vector_11+0x8e>
    1d44:	49 5f       	subi	r20, 0xF9	; 249
    1d46:	5f 4f       	sbci	r21, 0xFF	; 255
    1d48:	24 c0       	rjmp	.+72     	; 0x1d92 <__vector_11+0xd6>
    1d4a:	fa 01       	movw	r30, r20
    1d4c:	32 96       	adiw	r30, 0x02	; 2
    1d4e:	85 91       	lpm	r24, Z+
    1d50:	94 91       	lpm	r25, Z
    1d52:	a8 17       	cp	r26, r24
    1d54:	b9 07       	cpc	r27, r25
    1d56:	19 f0       	breq	.+6      	; 0x1d5e <__vector_11+0xa2>
    1d58:	49 5f       	subi	r20, 0xF9	; 249
    1d5a:	5f 4f       	sbci	r21, 0xFF	; 255
    1d5c:	1a c0       	rjmp	.+52     	; 0x1d92 <__vector_11+0xd6>
    1d5e:	fa 01       	movw	r30, r20
    1d60:	34 96       	adiw	r30, 0x04	; 4
    1d62:	85 91       	lpm	r24, Z+
    1d64:	94 91       	lpm	r25, Z
    1d66:	68 2f       	mov	r22, r24
    1d68:	79 2f       	mov	r23, r25
    1d6a:	4a 5f       	subi	r20, 0xFA	; 250
    1d6c:	5f 4f       	sbci	r21, 0xFF	; 255
    1d6e:	fa 01       	movw	r30, r20
    1d70:	44 91       	lpm	r20, Z
    1d72:	23 2f       	mov	r18, r19
    1d74:	30 e0       	ldi	r19, 0x00	; 0
    1d76:	9c 2f       	mov	r25, r28
    1d78:	80 e0       	ldi	r24, 0x00	; 0
    1d7a:	82 2b       	or	r24, r18
    1d7c:	93 2b       	or	r25, r19
    1d7e:	8f 3f       	cpi	r24, 0xFF	; 255
    1d80:	91 05       	cpc	r25, r1
    1d82:	19 f0       	breq	.+6      	; 0x1d8a <__vector_11+0xce>
    1d84:	10 f0       	brcs	.+4      	; 0x1d8a <__vector_11+0xce>
    1d86:	8f ef       	ldi	r24, 0xFF	; 255
    1d88:	90 e0       	ldi	r25, 0x00	; 0
    1d8a:	84 17       	cp	r24, r20
    1d8c:	28 f4       	brcc	.+10     	; 0x1d98 <__vector_11+0xdc>
    1d8e:	48 2f       	mov	r20, r24
    1d90:	03 c0       	rjmp	.+6      	; 0x1d98 <__vector_11+0xdc>
    1d92:	21 50       	subi	r18, 0x01	; 1
    1d94:	89 f6       	brne	.-94     	; 0x1d38 <__vector_11+0x7c>
    1d96:	c9 cf       	rjmp	.-110    	; 0x1d2a <__vector_11+0x6e>
    1d98:	c8 ee       	ldi	r28, 0xE8	; 232
    1d9a:	d0 e0       	ldi	r29, 0x00	; 0
    1d9c:	5e ef       	ldi	r21, 0xFE	; 254
    1d9e:	a1 ef       	ldi	r26, 0xF1	; 241
    1da0:	b0 e0       	ldi	r27, 0x00	; 0
    1da2:	10 e1       	ldi	r17, 0x10	; 16
    1da4:	88 81       	ld	r24, Y
    1da6:	90 e0       	ldi	r25, 0x00	; 0
    1da8:	9c 01       	movw	r18, r24
    1daa:	25 70       	andi	r18, 0x05	; 5
    1dac:	30 70       	andi	r19, 0x00	; 0
    1dae:	21 15       	cp	r18, r1
    1db0:	31 05       	cpc	r19, r1
    1db2:	c1 f3       	breq	.-16     	; 0x1da4 <__vector_11+0xe8>
    1db4:	82 fd       	sbrc	r24, 2
    1db6:	fb c0       	rjmp	.+502    	; 0x1fae <__vector_11+0x2f2>
    1db8:	24 2f       	mov	r18, r20
    1dba:	41 31       	cpi	r20, 0x11	; 17
    1dbc:	08 f0       	brcs	.+2      	; 0x1dc0 <__vector_11+0x104>
    1dbe:	21 2f       	mov	r18, r17
    1dc0:	22 23       	and	r18, r18
    1dc2:	71 f0       	breq	.+28     	; 0x1de0 <__vector_11+0x124>
    1dc4:	cb 01       	movw	r24, r22
    1dc6:	32 2f       	mov	r19, r18
    1dc8:	fc 01       	movw	r30, r24
    1dca:	01 96       	adiw	r24, 0x01	; 1
    1dcc:	e4 91       	lpm	r30, Z
    1dce:	ec 93       	st	X, r30
    1dd0:	31 50       	subi	r19, 0x01	; 1
    1dd2:	d1 f7       	brne	.-12     	; 0x1dc8 <__vector_11+0x10c>
    1dd4:	82 2f       	mov	r24, r18
    1dd6:	81 50       	subi	r24, 0x01	; 1
    1dd8:	90 e0       	ldi	r25, 0x00	; 0
    1dda:	01 96       	adiw	r24, 0x01	; 1
    1ddc:	68 0f       	add	r22, r24
    1dde:	79 1f       	adc	r23, r25
    1de0:	42 1b       	sub	r20, r18
    1de2:	58 83       	st	Y, r21
    1de4:	44 23       	and	r20, r20
    1de6:	f1 f6       	brne	.-68     	; 0x1da4 <__vector_11+0xe8>
    1de8:	20 31       	cpi	r18, 0x10	; 16
    1dea:	e1 f2       	breq	.-72     	; 0x1da4 <__vector_11+0xe8>
    1dec:	e0 c0       	rjmp	.+448    	; 0x1fae <__vector_11+0x2f2>
    1dee:	55 30       	cpi	r21, 0x05	; 5
    1df0:	61 f4       	brne	.+24     	; 0x1e0a <__vector_11+0x14e>
    1df2:	8e ef       	ldi	r24, 0xFE	; 254
    1df4:	80 93 e8 00 	sts	0x00E8, r24
    1df8:	e8 ee       	ldi	r30, 0xE8	; 232
    1dfa:	f0 e0       	ldi	r31, 0x00	; 0
    1dfc:	80 81       	ld	r24, Z
    1dfe:	80 ff       	sbrs	r24, 0
    1e00:	fd cf       	rjmp	.-6      	; 0x1dfc <__vector_11+0x140>
    1e02:	60 68       	ori	r22, 0x80	; 128
    1e04:	60 93 e3 00 	sts	0x00E3, r22
    1e08:	d2 c0       	rjmp	.+420    	; 0x1fae <__vector_11+0x2f2>
    1e0a:	59 30       	cpi	r21, 0x09	; 9
    1e0c:	a1 f5       	brne	.+104    	; 0x1e76 <__vector_11+0x1ba>
    1e0e:	44 23       	and	r20, r20
    1e10:	91 f5       	brne	.+100    	; 0x1e76 <__vector_11+0x1ba>
    1e12:	60 93 61 01 	sts	0x0161, r22
    1e16:	10 92 62 01 	sts	0x0162, r1
    1e1a:	10 92 60 01 	sts	0x0160, r1
    1e1e:	8e ef       	ldi	r24, 0xFE	; 254
    1e20:	80 93 e8 00 	sts	0x00E8, r24
    1e24:	41 e0       	ldi	r20, 0x01	; 1
    1e26:	28 e5       	ldi	r18, 0x58	; 88
    1e28:	31 e0       	ldi	r19, 0x01	; 1
    1e2a:	a9 ee       	ldi	r26, 0xE9	; 233
    1e2c:	b0 e0       	ldi	r27, 0x00	; 0
    1e2e:	cb ee       	ldi	r28, 0xEB	; 235
    1e30:	d0 e0       	ldi	r29, 0x00	; 0
    1e32:	6c ee       	ldi	r22, 0xEC	; 236
    1e34:	70 e0       	ldi	r23, 0x00	; 0
    1e36:	0d ee       	ldi	r16, 0xED	; 237
    1e38:	10 e0       	ldi	r17, 0x00	; 0
    1e3a:	4c 93       	st	X, r20
    1e3c:	c9 01       	movw	r24, r18
    1e3e:	01 96       	adiw	r24, 0x01	; 1
    1e40:	f9 01       	movw	r30, r18
    1e42:	54 91       	lpm	r21, Z
    1e44:	58 83       	st	Y, r21
    1e46:	55 23       	and	r21, r21
    1e48:	61 f0       	breq	.+24     	; 0x1e62 <__vector_11+0x1a6>
    1e4a:	fc 01       	movw	r30, r24
    1e4c:	84 91       	lpm	r24, Z
    1e4e:	fb 01       	movw	r30, r22
    1e50:	80 83       	st	Z, r24
    1e52:	f9 01       	movw	r30, r18
    1e54:	32 96       	adiw	r30, 0x02	; 2
    1e56:	2d 5f       	subi	r18, 0xFD	; 253
    1e58:	3f 4f       	sbci	r19, 0xFF	; 255
    1e5a:	84 91       	lpm	r24, Z
    1e5c:	f8 01       	movw	r30, r16
    1e5e:	80 83       	st	Z, r24
    1e60:	01 c0       	rjmp	.+2      	; 0x1e64 <__vector_11+0x1a8>
    1e62:	9c 01       	movw	r18, r24
    1e64:	4f 5f       	subi	r20, 0xFF	; 255
    1e66:	45 30       	cpi	r20, 0x05	; 5
    1e68:	41 f7       	brne	.-48     	; 0x1e3a <__vector_11+0x17e>
    1e6a:	ea ee       	ldi	r30, 0xEA	; 234
    1e6c:	f0 e0       	ldi	r31, 0x00	; 0
    1e6e:	8e e1       	ldi	r24, 0x1E	; 30
    1e70:	80 83       	st	Z, r24
    1e72:	10 82       	st	Z, r1
    1e74:	9c c0       	rjmp	.+312    	; 0x1fae <__vector_11+0x2f2>
    1e76:	58 30       	cpi	r21, 0x08	; 8
    1e78:	79 f4       	brne	.+30     	; 0x1e98 <__vector_11+0x1dc>
    1e7a:	40 38       	cpi	r20, 0x80	; 128
    1e7c:	69 f4       	brne	.+26     	; 0x1e98 <__vector_11+0x1dc>
    1e7e:	e8 ee       	ldi	r30, 0xE8	; 232
    1e80:	f0 e0       	ldi	r31, 0x00	; 0
    1e82:	80 81       	ld	r24, Z
    1e84:	80 ff       	sbrs	r24, 0
    1e86:	fd cf       	rjmp	.-6      	; 0x1e82 <__vector_11+0x1c6>
    1e88:	80 91 61 01 	lds	r24, 0x0161
    1e8c:	80 93 f1 00 	sts	0x00F1, r24
    1e90:	8e ef       	ldi	r24, 0xFE	; 254
    1e92:	80 93 e8 00 	sts	0x00E8, r24
    1e96:	8b c0       	rjmp	.+278    	; 0x1fae <__vector_11+0x2f2>
    1e98:	51 32       	cpi	r21, 0x21	; 33
    1e9a:	b1 f4       	brne	.+44     	; 0x1ec8 <__vector_11+0x20c>
    1e9c:	41 3a       	cpi	r20, 0xA1	; 161
    1e9e:	a1 f4       	brne	.+40     	; 0x1ec8 <__vector_11+0x20c>
    1ea0:	e8 ee       	ldi	r30, 0xE8	; 232
    1ea2:	f0 e0       	ldi	r31, 0x00	; 0
    1ea4:	80 81       	ld	r24, Z
    1ea6:	80 ff       	sbrs	r24, 0
    1ea8:	fd cf       	rjmp	.-6      	; 0x1ea4 <__vector_11+0x1e8>
    1eaa:	e2 e3       	ldi	r30, 0x32	; 50
    1eac:	f1 e0       	ldi	r31, 0x01	; 1
    1eae:	cf 01       	movw	r24, r30
    1eb0:	07 96       	adiw	r24, 0x07	; 7
    1eb2:	a1 ef       	ldi	r26, 0xF1	; 241
    1eb4:	b0 e0       	ldi	r27, 0x00	; 0
    1eb6:	21 91       	ld	r18, Z+
    1eb8:	2c 93       	st	X, r18
    1eba:	e8 17       	cp	r30, r24
    1ebc:	f9 07       	cpc	r31, r25
    1ebe:	d9 f7       	brne	.-10     	; 0x1eb6 <__vector_11+0x1fa>
    1ec0:	8e ef       	ldi	r24, 0xFE	; 254
    1ec2:	80 93 e8 00 	sts	0x00E8, r24
    1ec6:	73 c0       	rjmp	.+230    	; 0x1fae <__vector_11+0x2f2>
    1ec8:	50 32       	cpi	r21, 0x20	; 32
    1eca:	c9 f4       	brne	.+50     	; 0x1efe <__vector_11+0x242>
    1ecc:	41 32       	cpi	r20, 0x21	; 33
    1ece:	b9 f4       	brne	.+46     	; 0x1efe <__vector_11+0x242>
    1ed0:	e8 ee       	ldi	r30, 0xE8	; 232
    1ed2:	f0 e0       	ldi	r31, 0x00	; 0
    1ed4:	80 81       	ld	r24, Z
    1ed6:	82 ff       	sbrs	r24, 2
    1ed8:	fd cf       	rjmp	.-6      	; 0x1ed4 <__vector_11+0x218>
    1eda:	e2 e3       	ldi	r30, 0x32	; 50
    1edc:	f1 e0       	ldi	r31, 0x01	; 1
    1ede:	cf 01       	movw	r24, r30
    1ee0:	07 96       	adiw	r24, 0x07	; 7
    1ee2:	a1 ef       	ldi	r26, 0xF1	; 241
    1ee4:	b0 e0       	ldi	r27, 0x00	; 0
    1ee6:	2c 91       	ld	r18, X
    1ee8:	21 93       	st	Z+, r18
    1eea:	e8 17       	cp	r30, r24
    1eec:	f9 07       	cpc	r31, r25
    1eee:	d9 f7       	brne	.-10     	; 0x1ee6 <__vector_11+0x22a>
    1ef0:	e8 ee       	ldi	r30, 0xE8	; 232
    1ef2:	f0 e0       	ldi	r31, 0x00	; 0
    1ef4:	8b ef       	ldi	r24, 0xFB	; 251
    1ef6:	80 83       	st	Z, r24
    1ef8:	8e ef       	ldi	r24, 0xFE	; 254
    1efa:	80 83       	st	Z, r24
    1efc:	58 c0       	rjmp	.+176    	; 0x1fae <__vector_11+0x2f2>
    1efe:	52 32       	cpi	r21, 0x22	; 34
    1f00:	69 f4       	brne	.+26     	; 0x1f1c <__vector_11+0x260>
    1f02:	41 32       	cpi	r20, 0x21	; 33
    1f04:	59 f4       	brne	.+22     	; 0x1f1c <__vector_11+0x260>
    1f06:	60 93 62 01 	sts	0x0162, r22
    1f0a:	e8 ee       	ldi	r30, 0xE8	; 232
    1f0c:	f0 e0       	ldi	r31, 0x00	; 0
    1f0e:	80 81       	ld	r24, Z
    1f10:	80 ff       	sbrs	r24, 0
    1f12:	fd cf       	rjmp	.-6      	; 0x1f0e <__vector_11+0x252>
    1f14:	8e ef       	ldi	r24, 0xFE	; 254
    1f16:	80 93 e8 00 	sts	0x00E8, r24
    1f1a:	49 c0       	rjmp	.+146    	; 0x1fae <__vector_11+0x2f2>
    1f1c:	55 23       	and	r21, r21
    1f1e:	d1 f4       	brne	.+52     	; 0x1f54 <__vector_11+0x298>
    1f20:	e8 ee       	ldi	r30, 0xE8	; 232
    1f22:	f0 e0       	ldi	r31, 0x00	; 0
    1f24:	80 81       	ld	r24, Z
    1f26:	80 ff       	sbrs	r24, 0
    1f28:	fd cf       	rjmp	.-6      	; 0x1f24 <__vector_11+0x268>
    1f2a:	42 38       	cpi	r20, 0x82	; 130
    1f2c:	51 f4       	brne	.+20     	; 0x1f42 <__vector_11+0x286>
    1f2e:	a0 93 e9 00 	sts	0x00E9, r26
    1f32:	90 91 eb 00 	lds	r25, 0x00EB
    1f36:	81 e0       	ldi	r24, 0x01	; 1
    1f38:	95 ff       	sbrs	r25, 5
    1f3a:	80 e0       	ldi	r24, 0x00	; 0
    1f3c:	10 92 e9 00 	sts	0x00E9, r1
    1f40:	01 c0       	rjmp	.+2      	; 0x1f44 <__vector_11+0x288>
    1f42:	80 e0       	ldi	r24, 0x00	; 0
    1f44:	e1 ef       	ldi	r30, 0xF1	; 241
    1f46:	f0 e0       	ldi	r31, 0x00	; 0
    1f48:	80 83       	st	Z, r24
    1f4a:	10 82       	st	Z, r1
    1f4c:	8e ef       	ldi	r24, 0xFE	; 254
    1f4e:	80 93 e8 00 	sts	0x00E8, r24
    1f52:	2d c0       	rjmp	.+90     	; 0x1fae <__vector_11+0x2f2>
    1f54:	51 30       	cpi	r21, 0x01	; 1
    1f56:	11 f0       	breq	.+4      	; 0x1f5c <__vector_11+0x2a0>
    1f58:	53 30       	cpi	r21, 0x03	; 3
    1f5a:	31 f5       	brne	.+76     	; 0x1fa8 <__vector_11+0x2ec>
    1f5c:	42 30       	cpi	r20, 0x02	; 2
    1f5e:	21 f5       	brne	.+72     	; 0x1fa8 <__vector_11+0x2ec>
    1f60:	61 15       	cp	r22, r1
    1f62:	71 05       	cpc	r23, r1
    1f64:	09 f5       	brne	.+66     	; 0x1fa8 <__vector_11+0x2ec>
    1f66:	8a 2f       	mov	r24, r26
    1f68:	8f 77       	andi	r24, 0x7F	; 127
    1f6a:	98 2f       	mov	r25, r24
    1f6c:	91 50       	subi	r25, 0x01	; 1
    1f6e:	94 30       	cpi	r25, 0x04	; 4
    1f70:	d8 f4       	brcc	.+54     	; 0x1fa8 <__vector_11+0x2ec>
    1f72:	9e ef       	ldi	r25, 0xFE	; 254
    1f74:	90 93 e8 00 	sts	0x00E8, r25
    1f78:	80 93 e9 00 	sts	0x00E9, r24
    1f7c:	53 30       	cpi	r21, 0x03	; 3
    1f7e:	21 f4       	brne	.+8      	; 0x1f88 <__vector_11+0x2cc>
    1f80:	81 e2       	ldi	r24, 0x21	; 33
    1f82:	80 93 eb 00 	sts	0x00EB, r24
    1f86:	13 c0       	rjmp	.+38     	; 0x1fae <__vector_11+0x2f2>
    1f88:	99 e1       	ldi	r25, 0x19	; 25
    1f8a:	90 93 eb 00 	sts	0x00EB, r25
    1f8e:	21 e0       	ldi	r18, 0x01	; 1
    1f90:	30 e0       	ldi	r19, 0x00	; 0
    1f92:	a9 01       	movw	r20, r18
    1f94:	02 c0       	rjmp	.+4      	; 0x1f9a <__vector_11+0x2de>
    1f96:	44 0f       	add	r20, r20
    1f98:	55 1f       	adc	r21, r21
    1f9a:	8a 95       	dec	r24
    1f9c:	e2 f7       	brpl	.-8      	; 0x1f96 <__vector_11+0x2da>
    1f9e:	ea ee       	ldi	r30, 0xEA	; 234
    1fa0:	f0 e0       	ldi	r31, 0x00	; 0
    1fa2:	40 83       	st	Z, r20
    1fa4:	10 82       	st	Z, r1
    1fa6:	03 c0       	rjmp	.+6      	; 0x1fae <__vector_11+0x2f2>
    1fa8:	81 e2       	ldi	r24, 0x21	; 33
    1faa:	80 93 eb 00 	sts	0x00EB, r24
    1fae:	ff 91       	pop	r31
    1fb0:	ef 91       	pop	r30
    1fb2:	df 91       	pop	r29
    1fb4:	cf 91       	pop	r28
    1fb6:	bf 91       	pop	r27
    1fb8:	af 91       	pop	r26
    1fba:	9f 91       	pop	r25
    1fbc:	8f 91       	pop	r24
    1fbe:	7f 91       	pop	r23
    1fc0:	6f 91       	pop	r22
    1fc2:	5f 91       	pop	r21
    1fc4:	4f 91       	pop	r20
    1fc6:	3f 91       	pop	r19
    1fc8:	2f 91       	pop	r18
    1fca:	1f 91       	pop	r17
    1fcc:	0f 91       	pop	r16
    1fce:	0f 90       	pop	r0
    1fd0:	0f be       	out	0x3f, r0	; 63
    1fd2:	0f 90       	pop	r0
    1fd4:	1f 90       	pop	r1
    1fd6:	18 95       	reti

00001fd8 <print_P>:
    1fd8:	0f 93       	push	r16
    1fda:	1f 93       	push	r17
    1fdc:	cf 93       	push	r28
    1fde:	fc 01       	movw	r30, r24
    1fe0:	c4 91       	lpm	r28, Z
    1fe2:	cc 23       	and	r28, r28
    1fe4:	89 f0       	breq	.+34     	; 0x2008 <print_P+0x30>
    1fe6:	8c 01       	movw	r16, r24
    1fe8:	0f 5f       	subi	r16, 0xFF	; 255
    1fea:	1f 4f       	sbci	r17, 0xFF	; 255
    1fec:	ca 30       	cpi	r28, 0x0A	; 10
    1fee:	19 f4       	brne	.+6      	; 0x1ff6 <print_P+0x1e>
    1ff0:	8d e0       	ldi	r24, 0x0D	; 13
    1ff2:	0e 94 02 0c 	call	0x1804	; 0x1804 <m_usb_tx_char>
    1ff6:	8c 2f       	mov	r24, r28
    1ff8:	0e 94 02 0c 	call	0x1804	; 0x1804 <m_usb_tx_char>
    1ffc:	f8 01       	movw	r30, r16
    1ffe:	0f 5f       	subi	r16, 0xFF	; 255
    2000:	1f 4f       	sbci	r17, 0xFF	; 255
    2002:	c4 91       	lpm	r28, Z
    2004:	cc 23       	and	r28, r28
    2006:	91 f7       	brne	.-28     	; 0x1fec <print_P+0x14>
    2008:	cf 91       	pop	r28
    200a:	1f 91       	pop	r17
    200c:	0f 91       	pop	r16
    200e:	08 95       	ret

00002010 <phex1>:
    2010:	8a 30       	cpi	r24, 0x0A	; 10
    2012:	10 f4       	brcc	.+4      	; 0x2018 <phex1+0x8>
    2014:	90 e3       	ldi	r25, 0x30	; 48
    2016:	01 c0       	rjmp	.+2      	; 0x201a <phex1+0xa>
    2018:	97 e3       	ldi	r25, 0x37	; 55
    201a:	89 0f       	add	r24, r25
    201c:	0e 94 02 0c 	call	0x1804	; 0x1804 <m_usb_tx_char>
    2020:	08 95       	ret

00002022 <phex>:
    2022:	cf 93       	push	r28
    2024:	c8 2f       	mov	r28, r24
    2026:	82 95       	swap	r24
    2028:	8f 70       	andi	r24, 0x0F	; 15
    202a:	0e 94 08 10 	call	0x2010	; 0x2010 <phex1>
    202e:	8c 2f       	mov	r24, r28
    2030:	8f 70       	andi	r24, 0x0F	; 15
    2032:	0e 94 08 10 	call	0x2010	; 0x2010 <phex1>
    2036:	cf 91       	pop	r28
    2038:	08 95       	ret

0000203a <m_usb_tx_hex>:
    203a:	cf 93       	push	r28
    203c:	c8 2f       	mov	r28, r24
    203e:	89 2f       	mov	r24, r25
    2040:	0e 94 11 10 	call	0x2022	; 0x2022 <phex>
    2044:	8c 2f       	mov	r24, r28
    2046:	0e 94 11 10 	call	0x2022	; 0x2022 <phex>
    204a:	cf 91       	pop	r28
    204c:	08 95       	ret

0000204e <m_usb_tx_hexchar>:
    204e:	0e 94 11 10 	call	0x2022	; 0x2022 <phex>
    2052:	08 95       	ret

00002054 <m_usb_tx_int>:
    2054:	ef 92       	push	r14
    2056:	ff 92       	push	r15
    2058:	0f 93       	push	r16
    205a:	1f 93       	push	r17
    205c:	cf 93       	push	r28
    205e:	df 93       	push	r29
    2060:	cd b7       	in	r28, 0x3d	; 61
    2062:	de b7       	in	r29, 0x3e	; 62
    2064:	27 97       	sbiw	r28, 0x07	; 7
    2066:	0f b6       	in	r0, 0x3f	; 63
    2068:	f8 94       	cli
    206a:	de bf       	out	0x3e, r29	; 62
    206c:	0f be       	out	0x3f, r0	; 63
    206e:	cd bf       	out	0x3d, r28	; 61
    2070:	8e 01       	movw	r16, r28
    2072:	0f 5f       	subi	r16, 0xFF	; 255
    2074:	1f 4f       	sbci	r17, 0xFF	; 255
    2076:	27 e0       	ldi	r18, 0x07	; 7
    2078:	f8 01       	movw	r30, r16
    207a:	11 92       	st	Z+, r1
    207c:	2a 95       	dec	r18
    207e:	e9 f7       	brne	.-6      	; 0x207a <m_usb_tx_int+0x26>
    2080:	b8 01       	movw	r22, r16
    2082:	4a e0       	ldi	r20, 0x0A	; 10
    2084:	50 e0       	ldi	r21, 0x00	; 0
    2086:	0e 94 fd 13 	call	0x27fa	; 0x27fa <itoa>
    208a:	78 01       	movw	r14, r16
    208c:	8e 01       	movw	r16, r28
    208e:	08 5f       	subi	r16, 0xF8	; 248
    2090:	1f 4f       	sbci	r17, 0xFF	; 255
    2092:	f7 01       	movw	r30, r14
    2094:	81 91       	ld	r24, Z+
    2096:	7f 01       	movw	r14, r30
    2098:	88 23       	and	r24, r24
    209a:	11 f0       	breq	.+4      	; 0x20a0 <m_usb_tx_int+0x4c>
    209c:	0e 94 02 0c 	call	0x1804	; 0x1804 <m_usb_tx_char>
    20a0:	e0 16       	cp	r14, r16
    20a2:	f1 06       	cpc	r15, r17
    20a4:	b1 f7       	brne	.-20     	; 0x2092 <m_usb_tx_int+0x3e>
    20a6:	27 96       	adiw	r28, 0x07	; 7
    20a8:	0f b6       	in	r0, 0x3f	; 63
    20aa:	f8 94       	cli
    20ac:	de bf       	out	0x3e, r29	; 62
    20ae:	0f be       	out	0x3f, r0	; 63
    20b0:	cd bf       	out	0x3d, r28	; 61
    20b2:	df 91       	pop	r29
    20b4:	cf 91       	pop	r28
    20b6:	1f 91       	pop	r17
    20b8:	0f 91       	pop	r16
    20ba:	ff 90       	pop	r15
    20bc:	ef 90       	pop	r14
    20be:	08 95       	ret

000020c0 <m_usb_tx_uint>:
    20c0:	ef 92       	push	r14
    20c2:	ff 92       	push	r15
    20c4:	0f 93       	push	r16
    20c6:	1f 93       	push	r17
    20c8:	cf 93       	push	r28
    20ca:	df 93       	push	r29
    20cc:	00 d0       	rcall	.+0      	; 0x20ce <m_usb_tx_uint+0xe>
    20ce:	00 d0       	rcall	.+0      	; 0x20d0 <m_usb_tx_uint+0x10>
    20d0:	0f 92       	push	r0
    20d2:	cd b7       	in	r28, 0x3d	; 61
    20d4:	de b7       	in	r29, 0x3e	; 62
    20d6:	8e 01       	movw	r16, r28
    20d8:	0f 5f       	subi	r16, 0xFF	; 255
    20da:	1f 4f       	sbci	r17, 0xFF	; 255
    20dc:	25 e0       	ldi	r18, 0x05	; 5
    20de:	f8 01       	movw	r30, r16
    20e0:	11 92       	st	Z+, r1
    20e2:	2a 95       	dec	r18
    20e4:	e9 f7       	brne	.-6      	; 0x20e0 <m_usb_tx_uint+0x20>
    20e6:	b8 01       	movw	r22, r16
    20e8:	4a e0       	ldi	r20, 0x0A	; 10
    20ea:	50 e0       	ldi	r21, 0x00	; 0
    20ec:	0e 94 7f 14 	call	0x28fe	; 0x28fe <utoa>
    20f0:	78 01       	movw	r14, r16
    20f2:	8e 01       	movw	r16, r28
    20f4:	0a 5f       	subi	r16, 0xFA	; 250
    20f6:	1f 4f       	sbci	r17, 0xFF	; 255
    20f8:	f7 01       	movw	r30, r14
    20fa:	81 91       	ld	r24, Z+
    20fc:	7f 01       	movw	r14, r30
    20fe:	88 23       	and	r24, r24
    2100:	11 f0       	breq	.+4      	; 0x2106 <m_usb_tx_uint+0x46>
    2102:	0e 94 02 0c 	call	0x1804	; 0x1804 <m_usb_tx_char>
    2106:	e0 16       	cp	r14, r16
    2108:	f1 06       	cpc	r15, r17
    210a:	b1 f7       	brne	.-20     	; 0x20f8 <m_usb_tx_uint+0x38>
    210c:	0f 90       	pop	r0
    210e:	0f 90       	pop	r0
    2110:	0f 90       	pop	r0
    2112:	0f 90       	pop	r0
    2114:	0f 90       	pop	r0
    2116:	df 91       	pop	r29
    2118:	cf 91       	pop	r28
    211a:	1f 91       	pop	r17
    211c:	0f 91       	pop	r16
    211e:	ff 90       	pop	r15
    2120:	ef 90       	pop	r14
    2122:	08 95       	ret

00002124 <m_usb_tx_long>:
    2124:	ef 92       	push	r14
    2126:	ff 92       	push	r15
    2128:	0f 93       	push	r16
    212a:	1f 93       	push	r17
    212c:	cf 93       	push	r28
    212e:	df 93       	push	r29
    2130:	cd b7       	in	r28, 0x3d	; 61
    2132:	de b7       	in	r29, 0x3e	; 62
    2134:	2b 97       	sbiw	r28, 0x0b	; 11
    2136:	0f b6       	in	r0, 0x3f	; 63
    2138:	f8 94       	cli
    213a:	de bf       	out	0x3e, r29	; 62
    213c:	0f be       	out	0x3f, r0	; 63
    213e:	cd bf       	out	0x3d, r28	; 61
    2140:	8e 01       	movw	r16, r28
    2142:	0f 5f       	subi	r16, 0xFF	; 255
    2144:	1f 4f       	sbci	r17, 0xFF	; 255
    2146:	2b e0       	ldi	r18, 0x0B	; 11
    2148:	f8 01       	movw	r30, r16
    214a:	11 92       	st	Z+, r1
    214c:	2a 95       	dec	r18
    214e:	e9 f7       	brne	.-6      	; 0x214a <m_usb_tx_long+0x26>
    2150:	a8 01       	movw	r20, r16
    2152:	2a e0       	ldi	r18, 0x0A	; 10
    2154:	30 e0       	ldi	r19, 0x00	; 0
    2156:	0e 94 1e 14 	call	0x283c	; 0x283c <ltoa>
    215a:	78 01       	movw	r14, r16
    215c:	8e 01       	movw	r16, r28
    215e:	04 5f       	subi	r16, 0xF4	; 244
    2160:	1f 4f       	sbci	r17, 0xFF	; 255
    2162:	f7 01       	movw	r30, r14
    2164:	81 91       	ld	r24, Z+
    2166:	7f 01       	movw	r14, r30
    2168:	88 23       	and	r24, r24
    216a:	11 f0       	breq	.+4      	; 0x2170 <m_usb_tx_long+0x4c>
    216c:	0e 94 02 0c 	call	0x1804	; 0x1804 <m_usb_tx_char>
    2170:	e0 16       	cp	r14, r16
    2172:	f1 06       	cpc	r15, r17
    2174:	b1 f7       	brne	.-20     	; 0x2162 <m_usb_tx_long+0x3e>
    2176:	2b 96       	adiw	r28, 0x0b	; 11
    2178:	0f b6       	in	r0, 0x3f	; 63
    217a:	f8 94       	cli
    217c:	de bf       	out	0x3e, r29	; 62
    217e:	0f be       	out	0x3f, r0	; 63
    2180:	cd bf       	out	0x3d, r28	; 61
    2182:	df 91       	pop	r29
    2184:	cf 91       	pop	r28
    2186:	1f 91       	pop	r17
    2188:	0f 91       	pop	r16
    218a:	ff 90       	pop	r15
    218c:	ef 90       	pop	r14
    218e:	08 95       	ret

00002190 <m_usb_tx_ulong>:
    2190:	ef 92       	push	r14
    2192:	ff 92       	push	r15
    2194:	0f 93       	push	r16
    2196:	1f 93       	push	r17
    2198:	cf 93       	push	r28
    219a:	df 93       	push	r29
    219c:	cd b7       	in	r28, 0x3d	; 61
    219e:	de b7       	in	r29, 0x3e	; 62
    21a0:	2a 97       	sbiw	r28, 0x0a	; 10
    21a2:	0f b6       	in	r0, 0x3f	; 63
    21a4:	f8 94       	cli
    21a6:	de bf       	out	0x3e, r29	; 62
    21a8:	0f be       	out	0x3f, r0	; 63
    21aa:	cd bf       	out	0x3d, r28	; 61
    21ac:	8e 01       	movw	r16, r28
    21ae:	0f 5f       	subi	r16, 0xFF	; 255
    21b0:	1f 4f       	sbci	r17, 0xFF	; 255
    21b2:	2a e0       	ldi	r18, 0x0A	; 10
    21b4:	f8 01       	movw	r30, r16
    21b6:	11 92       	st	Z+, r1
    21b8:	2a 95       	dec	r18
    21ba:	e9 f7       	brne	.-6      	; 0x21b6 <m_usb_tx_ulong+0x26>
    21bc:	a8 01       	movw	r20, r16
    21be:	2a e0       	ldi	r18, 0x0A	; 10
    21c0:	30 e0       	ldi	r19, 0x00	; 0
    21c2:	0e 94 5a 14 	call	0x28b4	; 0x28b4 <ultoa>
    21c6:	78 01       	movw	r14, r16
    21c8:	8e 01       	movw	r16, r28
    21ca:	05 5f       	subi	r16, 0xF5	; 245
    21cc:	1f 4f       	sbci	r17, 0xFF	; 255
    21ce:	f7 01       	movw	r30, r14
    21d0:	81 91       	ld	r24, Z+
    21d2:	7f 01       	movw	r14, r30
    21d4:	88 23       	and	r24, r24
    21d6:	11 f0       	breq	.+4      	; 0x21dc <m_usb_tx_ulong+0x4c>
    21d8:	0e 94 02 0c 	call	0x1804	; 0x1804 <m_usb_tx_char>
    21dc:	e0 16       	cp	r14, r16
    21de:	f1 06       	cpc	r15, r17
    21e0:	b1 f7       	brne	.-20     	; 0x21ce <m_usb_tx_ulong+0x3e>
    21e2:	2a 96       	adiw	r28, 0x0a	; 10
    21e4:	0f b6       	in	r0, 0x3f	; 63
    21e6:	f8 94       	cli
    21e8:	de bf       	out	0x3e, r29	; 62
    21ea:	0f be       	out	0x3f, r0	; 63
    21ec:	cd bf       	out	0x3d, r28	; 61
    21ee:	df 91       	pop	r29
    21f0:	cf 91       	pop	r28
    21f2:	1f 91       	pop	r17
    21f4:	0f 91       	pop	r16
    21f6:	ff 90       	pop	r15
    21f8:	ef 90       	pop	r14
    21fa:	08 95       	ret

000021fc <smallDelay>:
    21fc:	18 16       	cp	r1, r24
    21fe:	19 06       	cpc	r1, r25
    2200:	3c f4       	brge	.+14     	; 0x2210 <smallDelay+0x14>
    2202:	20 e0       	ldi	r18, 0x00	; 0
    2204:	30 e0       	ldi	r19, 0x00	; 0
    2206:	2f 5f       	subi	r18, 0xFF	; 255
    2208:	3f 4f       	sbci	r19, 0xFF	; 255
    220a:	28 17       	cp	r18, r24
    220c:	39 07       	cpc	r19, r25
    220e:	d9 f7       	brne	.-10     	; 0x2206 <smallDelay+0xa>
    2210:	08 95       	ret

00002212 <wirelessinitial>:
    2212:	0e 94 74 08 	call	0x10e8	; 0x10e8 <m_bus_init>
    2216:	81 e0       	ldi	r24, 0x01	; 1
    2218:	67 e1       	ldi	r22, 0x17	; 23
    221a:	48 e0       	ldi	r20, 0x08	; 8
    221c:	0e 94 96 0a 	call	0x152c	; 0x152c <m_rf_open>
    2220:	08 95       	ret

00002222 <wireless_int>:
    2222:	0f 93       	push	r16
    2224:	1f 93       	push	r17
    2226:	cf 93       	push	r28
    2228:	df 93       	push	r29
    222a:	cd b7       	in	r28, 0x3d	; 61
    222c:	de b7       	in	r29, 0x3e	; 62
    222e:	28 97       	sbiw	r28, 0x08	; 8
    2230:	0f b6       	in	r0, 0x3f	; 63
    2232:	f8 94       	cli
    2234:	de bf       	out	0x3e, r29	; 62
    2236:	0f be       	out	0x3f, r0	; 63
    2238:	cd bf       	out	0x3d, r28	; 61
    223a:	8e 01       	movw	r16, r28
    223c:	0f 5f       	subi	r16, 0xFF	; 255
    223e:	1f 4f       	sbci	r17, 0xFF	; 255
    2240:	28 e0       	ldi	r18, 0x08	; 8
    2242:	f8 01       	movw	r30, r16
    2244:	11 92       	st	Z+, r1
    2246:	2a 95       	dec	r18
    2248:	e9 f7       	brne	.-6      	; 0x2244 <wireless_int+0x22>
    224a:	b8 01       	movw	r22, r16
    224c:	4a e0       	ldi	r20, 0x0A	; 10
    224e:	50 e0       	ldi	r21, 0x00	; 0
    2250:	0e 94 fd 13 	call	0x27fa	; 0x27fa <itoa>
    2254:	8d e1       	ldi	r24, 0x1D	; 29
    2256:	b8 01       	movw	r22, r16
    2258:	48 e0       	ldi	r20, 0x08	; 8
    225a:	0e 94 4d 0b 	call	0x169a	; 0x169a <m_rf_send>
    225e:	88 ee       	ldi	r24, 0xE8	; 232
    2260:	93 e0       	ldi	r25, 0x03	; 3
    2262:	0e 94 fe 10 	call	0x21fc	; 0x21fc <smallDelay>
    2266:	28 96       	adiw	r28, 0x08	; 8
    2268:	0f b6       	in	r0, 0x3f	; 63
    226a:	f8 94       	cli
    226c:	de bf       	out	0x3e, r29	; 62
    226e:	0f be       	out	0x3f, r0	; 63
    2270:	cd bf       	out	0x3d, r28	; 61
    2272:	df 91       	pop	r29
    2274:	cf 91       	pop	r28
    2276:	1f 91       	pop	r17
    2278:	0f 91       	pop	r16
    227a:	08 95       	ret

0000227c <wireless_uint>:
    227c:	0f 93       	push	r16
    227e:	1f 93       	push	r17
    2280:	cf 93       	push	r28
    2282:	df 93       	push	r29
    2284:	cd b7       	in	r28, 0x3d	; 61
    2286:	de b7       	in	r29, 0x3e	; 62
    2288:	28 97       	sbiw	r28, 0x08	; 8
    228a:	0f b6       	in	r0, 0x3f	; 63
    228c:	f8 94       	cli
    228e:	de bf       	out	0x3e, r29	; 62
    2290:	0f be       	out	0x3f, r0	; 63
    2292:	cd bf       	out	0x3d, r28	; 61
    2294:	8e 01       	movw	r16, r28
    2296:	0f 5f       	subi	r16, 0xFF	; 255
    2298:	1f 4f       	sbci	r17, 0xFF	; 255
    229a:	28 e0       	ldi	r18, 0x08	; 8
    229c:	f8 01       	movw	r30, r16
    229e:	11 92       	st	Z+, r1
    22a0:	2a 95       	dec	r18
    22a2:	e9 f7       	brne	.-6      	; 0x229e <wireless_uint+0x22>
    22a4:	b8 01       	movw	r22, r16
    22a6:	4a e0       	ldi	r20, 0x0A	; 10
    22a8:	50 e0       	ldi	r21, 0x00	; 0
    22aa:	0e 94 7f 14 	call	0x28fe	; 0x28fe <utoa>
    22ae:	8d e1       	ldi	r24, 0x1D	; 29
    22b0:	b8 01       	movw	r22, r16
    22b2:	48 e0       	ldi	r20, 0x08	; 8
    22b4:	0e 94 4d 0b 	call	0x169a	; 0x169a <m_rf_send>
    22b8:	88 ee       	ldi	r24, 0xE8	; 232
    22ba:	93 e0       	ldi	r25, 0x03	; 3
    22bc:	0e 94 fe 10 	call	0x21fc	; 0x21fc <smallDelay>
    22c0:	28 96       	adiw	r28, 0x08	; 8
    22c2:	0f b6       	in	r0, 0x3f	; 63
    22c4:	f8 94       	cli
    22c6:	de bf       	out	0x3e, r29	; 62
    22c8:	0f be       	out	0x3f, r0	; 63
    22ca:	cd bf       	out	0x3d, r28	; 61
    22cc:	df 91       	pop	r29
    22ce:	cf 91       	pop	r28
    22d0:	1f 91       	pop	r17
    22d2:	0f 91       	pop	r16
    22d4:	08 95       	ret

000022d6 <wireless_char>:
    22d6:	cf 93       	push	r28
    22d8:	df 93       	push	r29
    22da:	cd b7       	in	r28, 0x3d	; 61
    22dc:	de b7       	in	r29, 0x3e	; 62
    22de:	28 97       	sbiw	r28, 0x08	; 8
    22e0:	0f b6       	in	r0, 0x3f	; 63
    22e2:	f8 94       	cli
    22e4:	de bf       	out	0x3e, r29	; 62
    22e6:	0f be       	out	0x3f, r0	; 63
    22e8:	cd bf       	out	0x3d, r28	; 61
    22ea:	be 01       	movw	r22, r28
    22ec:	6f 5f       	subi	r22, 0xFF	; 255
    22ee:	7f 4f       	sbci	r23, 0xFF	; 255
    22f0:	98 e0       	ldi	r25, 0x08	; 8
    22f2:	fb 01       	movw	r30, r22
    22f4:	11 92       	st	Z+, r1
    22f6:	9a 95       	dec	r25
    22f8:	e9 f7       	brne	.-6      	; 0x22f4 <wireless_char+0x1e>
    22fa:	89 83       	std	Y+1, r24	; 0x01
    22fc:	8d e1       	ldi	r24, 0x1D	; 29
    22fe:	48 e0       	ldi	r20, 0x08	; 8
    2300:	0e 94 4d 0b 	call	0x169a	; 0x169a <m_rf_send>
    2304:	88 ee       	ldi	r24, 0xE8	; 232
    2306:	93 e0       	ldi	r25, 0x03	; 3
    2308:	0e 94 fe 10 	call	0x21fc	; 0x21fc <smallDelay>
    230c:	28 96       	adiw	r28, 0x08	; 8
    230e:	0f b6       	in	r0, 0x3f	; 63
    2310:	f8 94       	cli
    2312:	de bf       	out	0x3e, r29	; 62
    2314:	0f be       	out	0x3f, r0	; 63
    2316:	cd bf       	out	0x3d, r28	; 61
    2318:	df 91       	pop	r29
    231a:	cf 91       	pop	r28
    231c:	08 95       	ret

0000231e <wireless_string>:
    231e:	cf 93       	push	r28
    2320:	df 93       	push	r29
    2322:	cd b7       	in	r28, 0x3d	; 61
    2324:	de b7       	in	r29, 0x3e	; 62
    2326:	28 97       	sbiw	r28, 0x08	; 8
    2328:	0f b6       	in	r0, 0x3f	; 63
    232a:	f8 94       	cli
    232c:	de bf       	out	0x3e, r29	; 62
    232e:	0f be       	out	0x3f, r0	; 63
    2330:	cd bf       	out	0x3d, r28	; 61
    2332:	fe 01       	movw	r30, r28
    2334:	31 96       	adiw	r30, 0x01	; 1
    2336:	28 e0       	ldi	r18, 0x08	; 8
    2338:	df 01       	movw	r26, r30
    233a:	1d 92       	st	X+, r1
    233c:	2a 95       	dec	r18
    233e:	e9 f7       	brne	.-6      	; 0x233a <wireless_string+0x1c>
    2340:	16 16       	cp	r1, r22
    2342:	17 06       	cpc	r1, r23
    2344:	5c f4       	brge	.+22     	; 0x235c <wireless_string+0x3e>
    2346:	a8 2f       	mov	r26, r24
    2348:	b9 2f       	mov	r27, r25
    234a:	fe 01       	movw	r30, r28
    234c:	31 96       	adiw	r30, 0x01	; 1
    234e:	6e 0f       	add	r22, r30
    2350:	7f 1f       	adc	r23, r31
    2352:	8d 91       	ld	r24, X+
    2354:	81 93       	st	Z+, r24
    2356:	e6 17       	cp	r30, r22
    2358:	f7 07       	cpc	r31, r23
    235a:	d9 f7       	brne	.-10     	; 0x2352 <wireless_string+0x34>
    235c:	8d e1       	ldi	r24, 0x1D	; 29
    235e:	be 01       	movw	r22, r28
    2360:	6f 5f       	subi	r22, 0xFF	; 255
    2362:	7f 4f       	sbci	r23, 0xFF	; 255
    2364:	48 e0       	ldi	r20, 0x08	; 8
    2366:	0e 94 4d 0b 	call	0x169a	; 0x169a <m_rf_send>
    236a:	88 ee       	ldi	r24, 0xE8	; 232
    236c:	93 e0       	ldi	r25, 0x03	; 3
    236e:	0e 94 fe 10 	call	0x21fc	; 0x21fc <smallDelay>
    2372:	28 96       	adiw	r28, 0x08	; 8
    2374:	0f b6       	in	r0, 0x3f	; 63
    2376:	f8 94       	cli
    2378:	de bf       	out	0x3e, r29	; 62
    237a:	0f be       	out	0x3f, r0	; 63
    237c:	cd bf       	out	0x3d, r28	; 61
    237e:	df 91       	pop	r29
    2380:	cf 91       	pop	r28
    2382:	08 95       	ret

00002384 <__subsf3>:
    2384:	50 58       	subi	r21, 0x80	; 128

00002386 <__addsf3>:
    2386:	bb 27       	eor	r27, r27
    2388:	aa 27       	eor	r26, r26
    238a:	0e d0       	rcall	.+28     	; 0x23a8 <__addsf3x>
    238c:	4d c1       	rjmp	.+666    	; 0x2628 <__fp_round>
    238e:	3e d1       	rcall	.+636    	; 0x260c <__fp_pscA>
    2390:	30 f0       	brcs	.+12     	; 0x239e <__addsf3+0x18>
    2392:	43 d1       	rcall	.+646    	; 0x261a <__fp_pscB>
    2394:	20 f0       	brcs	.+8      	; 0x239e <__addsf3+0x18>
    2396:	31 f4       	brne	.+12     	; 0x23a4 <__addsf3+0x1e>
    2398:	9f 3f       	cpi	r25, 0xFF	; 255
    239a:	11 f4       	brne	.+4      	; 0x23a0 <__addsf3+0x1a>
    239c:	1e f4       	brtc	.+6      	; 0x23a4 <__addsf3+0x1e>
    239e:	33 c1       	rjmp	.+614    	; 0x2606 <__fp_nan>
    23a0:	0e f4       	brtc	.+2      	; 0x23a4 <__addsf3+0x1e>
    23a2:	e0 95       	com	r30
    23a4:	e7 fb       	bst	r30, 7
    23a6:	29 c1       	rjmp	.+594    	; 0x25fa <__fp_inf>

000023a8 <__addsf3x>:
    23a8:	e9 2f       	mov	r30, r25
    23aa:	4f d1       	rcall	.+670    	; 0x264a <__fp_split3>
    23ac:	80 f3       	brcs	.-32     	; 0x238e <__addsf3+0x8>
    23ae:	ba 17       	cp	r27, r26
    23b0:	62 07       	cpc	r22, r18
    23b2:	73 07       	cpc	r23, r19
    23b4:	84 07       	cpc	r24, r20
    23b6:	95 07       	cpc	r25, r21
    23b8:	18 f0       	brcs	.+6      	; 0x23c0 <__addsf3x+0x18>
    23ba:	71 f4       	brne	.+28     	; 0x23d8 <__addsf3x+0x30>
    23bc:	9e f5       	brtc	.+102    	; 0x2424 <__addsf3x+0x7c>
    23be:	67 c1       	rjmp	.+718    	; 0x268e <__fp_zero>
    23c0:	0e f4       	brtc	.+2      	; 0x23c4 <__addsf3x+0x1c>
    23c2:	e0 95       	com	r30
    23c4:	0b 2e       	mov	r0, r27
    23c6:	ba 2f       	mov	r27, r26
    23c8:	a0 2d       	mov	r26, r0
    23ca:	0b 01       	movw	r0, r22
    23cc:	b9 01       	movw	r22, r18
    23ce:	90 01       	movw	r18, r0
    23d0:	0c 01       	movw	r0, r24
    23d2:	ca 01       	movw	r24, r20
    23d4:	a0 01       	movw	r20, r0
    23d6:	11 24       	eor	r1, r1
    23d8:	ff 27       	eor	r31, r31
    23da:	59 1b       	sub	r21, r25
    23dc:	99 f0       	breq	.+38     	; 0x2404 <__addsf3x+0x5c>
    23de:	59 3f       	cpi	r21, 0xF9	; 249
    23e0:	50 f4       	brcc	.+20     	; 0x23f6 <__addsf3x+0x4e>
    23e2:	50 3e       	cpi	r21, 0xE0	; 224
    23e4:	68 f1       	brcs	.+90     	; 0x2440 <__addsf3x+0x98>
    23e6:	1a 16       	cp	r1, r26
    23e8:	f0 40       	sbci	r31, 0x00	; 0
    23ea:	a2 2f       	mov	r26, r18
    23ec:	23 2f       	mov	r18, r19
    23ee:	34 2f       	mov	r19, r20
    23f0:	44 27       	eor	r20, r20
    23f2:	58 5f       	subi	r21, 0xF8	; 248
    23f4:	f3 cf       	rjmp	.-26     	; 0x23dc <__addsf3x+0x34>
    23f6:	46 95       	lsr	r20
    23f8:	37 95       	ror	r19
    23fa:	27 95       	ror	r18
    23fc:	a7 95       	ror	r26
    23fe:	f0 40       	sbci	r31, 0x00	; 0
    2400:	53 95       	inc	r21
    2402:	c9 f7       	brne	.-14     	; 0x23f6 <__addsf3x+0x4e>
    2404:	7e f4       	brtc	.+30     	; 0x2424 <__addsf3x+0x7c>
    2406:	1f 16       	cp	r1, r31
    2408:	ba 0b       	sbc	r27, r26
    240a:	62 0b       	sbc	r22, r18
    240c:	73 0b       	sbc	r23, r19
    240e:	84 0b       	sbc	r24, r20
    2410:	ba f0       	brmi	.+46     	; 0x2440 <__addsf3x+0x98>
    2412:	91 50       	subi	r25, 0x01	; 1
    2414:	a1 f0       	breq	.+40     	; 0x243e <__addsf3x+0x96>
    2416:	ff 0f       	add	r31, r31
    2418:	bb 1f       	adc	r27, r27
    241a:	66 1f       	adc	r22, r22
    241c:	77 1f       	adc	r23, r23
    241e:	88 1f       	adc	r24, r24
    2420:	c2 f7       	brpl	.-16     	; 0x2412 <__addsf3x+0x6a>
    2422:	0e c0       	rjmp	.+28     	; 0x2440 <__addsf3x+0x98>
    2424:	ba 0f       	add	r27, r26
    2426:	62 1f       	adc	r22, r18
    2428:	73 1f       	adc	r23, r19
    242a:	84 1f       	adc	r24, r20
    242c:	48 f4       	brcc	.+18     	; 0x2440 <__addsf3x+0x98>
    242e:	87 95       	ror	r24
    2430:	77 95       	ror	r23
    2432:	67 95       	ror	r22
    2434:	b7 95       	ror	r27
    2436:	f7 95       	ror	r31
    2438:	9e 3f       	cpi	r25, 0xFE	; 254
    243a:	08 f0       	brcs	.+2      	; 0x243e <__addsf3x+0x96>
    243c:	b3 cf       	rjmp	.-154    	; 0x23a4 <__addsf3+0x1e>
    243e:	93 95       	inc	r25
    2440:	88 0f       	add	r24, r24
    2442:	08 f0       	brcs	.+2      	; 0x2446 <__addsf3x+0x9e>
    2444:	99 27       	eor	r25, r25
    2446:	ee 0f       	add	r30, r30
    2448:	97 95       	ror	r25
    244a:	87 95       	ror	r24
    244c:	08 95       	ret

0000244e <__divsf3>:
    244e:	0c d0       	rcall	.+24     	; 0x2468 <__divsf3x>
    2450:	eb c0       	rjmp	.+470    	; 0x2628 <__fp_round>
    2452:	e3 d0       	rcall	.+454    	; 0x261a <__fp_pscB>
    2454:	40 f0       	brcs	.+16     	; 0x2466 <__divsf3+0x18>
    2456:	da d0       	rcall	.+436    	; 0x260c <__fp_pscA>
    2458:	30 f0       	brcs	.+12     	; 0x2466 <__divsf3+0x18>
    245a:	21 f4       	brne	.+8      	; 0x2464 <__divsf3+0x16>
    245c:	5f 3f       	cpi	r21, 0xFF	; 255
    245e:	19 f0       	breq	.+6      	; 0x2466 <__divsf3+0x18>
    2460:	cc c0       	rjmp	.+408    	; 0x25fa <__fp_inf>
    2462:	51 11       	cpse	r21, r1
    2464:	15 c1       	rjmp	.+554    	; 0x2690 <__fp_szero>
    2466:	cf c0       	rjmp	.+414    	; 0x2606 <__fp_nan>

00002468 <__divsf3x>:
    2468:	f0 d0       	rcall	.+480    	; 0x264a <__fp_split3>
    246a:	98 f3       	brcs	.-26     	; 0x2452 <__divsf3+0x4>

0000246c <__divsf3_pse>:
    246c:	99 23       	and	r25, r25
    246e:	c9 f3       	breq	.-14     	; 0x2462 <__divsf3+0x14>
    2470:	55 23       	and	r21, r21
    2472:	b1 f3       	breq	.-20     	; 0x2460 <__divsf3+0x12>
    2474:	95 1b       	sub	r25, r21
    2476:	55 0b       	sbc	r21, r21
    2478:	bb 27       	eor	r27, r27
    247a:	aa 27       	eor	r26, r26
    247c:	62 17       	cp	r22, r18
    247e:	73 07       	cpc	r23, r19
    2480:	84 07       	cpc	r24, r20
    2482:	38 f0       	brcs	.+14     	; 0x2492 <__divsf3_pse+0x26>
    2484:	9f 5f       	subi	r25, 0xFF	; 255
    2486:	5f 4f       	sbci	r21, 0xFF	; 255
    2488:	22 0f       	add	r18, r18
    248a:	33 1f       	adc	r19, r19
    248c:	44 1f       	adc	r20, r20
    248e:	aa 1f       	adc	r26, r26
    2490:	a9 f3       	breq	.-22     	; 0x247c <__divsf3_pse+0x10>
    2492:	33 d0       	rcall	.+102    	; 0x24fa <__divsf3_pse+0x8e>
    2494:	0e 2e       	mov	r0, r30
    2496:	3a f0       	brmi	.+14     	; 0x24a6 <__divsf3_pse+0x3a>
    2498:	e0 e8       	ldi	r30, 0x80	; 128
    249a:	30 d0       	rcall	.+96     	; 0x24fc <__divsf3_pse+0x90>
    249c:	91 50       	subi	r25, 0x01	; 1
    249e:	50 40       	sbci	r21, 0x00	; 0
    24a0:	e6 95       	lsr	r30
    24a2:	00 1c       	adc	r0, r0
    24a4:	ca f7       	brpl	.-14     	; 0x2498 <__divsf3_pse+0x2c>
    24a6:	29 d0       	rcall	.+82     	; 0x24fa <__divsf3_pse+0x8e>
    24a8:	fe 2f       	mov	r31, r30
    24aa:	27 d0       	rcall	.+78     	; 0x24fa <__divsf3_pse+0x8e>
    24ac:	66 0f       	add	r22, r22
    24ae:	77 1f       	adc	r23, r23
    24b0:	88 1f       	adc	r24, r24
    24b2:	bb 1f       	adc	r27, r27
    24b4:	26 17       	cp	r18, r22
    24b6:	37 07       	cpc	r19, r23
    24b8:	48 07       	cpc	r20, r24
    24ba:	ab 07       	cpc	r26, r27
    24bc:	b0 e8       	ldi	r27, 0x80	; 128
    24be:	09 f0       	breq	.+2      	; 0x24c2 <__divsf3_pse+0x56>
    24c0:	bb 0b       	sbc	r27, r27
    24c2:	80 2d       	mov	r24, r0
    24c4:	bf 01       	movw	r22, r30
    24c6:	ff 27       	eor	r31, r31
    24c8:	93 58       	subi	r25, 0x83	; 131
    24ca:	5f 4f       	sbci	r21, 0xFF	; 255
    24cc:	2a f0       	brmi	.+10     	; 0x24d8 <__divsf3_pse+0x6c>
    24ce:	9e 3f       	cpi	r25, 0xFE	; 254
    24d0:	51 05       	cpc	r21, r1
    24d2:	68 f0       	brcs	.+26     	; 0x24ee <__divsf3_pse+0x82>
    24d4:	92 c0       	rjmp	.+292    	; 0x25fa <__fp_inf>
    24d6:	dc c0       	rjmp	.+440    	; 0x2690 <__fp_szero>
    24d8:	5f 3f       	cpi	r21, 0xFF	; 255
    24da:	ec f3       	brlt	.-6      	; 0x24d6 <__divsf3_pse+0x6a>
    24dc:	98 3e       	cpi	r25, 0xE8	; 232
    24de:	dc f3       	brlt	.-10     	; 0x24d6 <__divsf3_pse+0x6a>
    24e0:	86 95       	lsr	r24
    24e2:	77 95       	ror	r23
    24e4:	67 95       	ror	r22
    24e6:	b7 95       	ror	r27
    24e8:	f7 95       	ror	r31
    24ea:	9f 5f       	subi	r25, 0xFF	; 255
    24ec:	c9 f7       	brne	.-14     	; 0x24e0 <__divsf3_pse+0x74>
    24ee:	88 0f       	add	r24, r24
    24f0:	91 1d       	adc	r25, r1
    24f2:	96 95       	lsr	r25
    24f4:	87 95       	ror	r24
    24f6:	97 f9       	bld	r25, 7
    24f8:	08 95       	ret
    24fa:	e1 e0       	ldi	r30, 0x01	; 1
    24fc:	66 0f       	add	r22, r22
    24fe:	77 1f       	adc	r23, r23
    2500:	88 1f       	adc	r24, r24
    2502:	bb 1f       	adc	r27, r27
    2504:	62 17       	cp	r22, r18
    2506:	73 07       	cpc	r23, r19
    2508:	84 07       	cpc	r24, r20
    250a:	ba 07       	cpc	r27, r26
    250c:	20 f0       	brcs	.+8      	; 0x2516 <__divsf3_pse+0xaa>
    250e:	62 1b       	sub	r22, r18
    2510:	73 0b       	sbc	r23, r19
    2512:	84 0b       	sbc	r24, r20
    2514:	ba 0b       	sbc	r27, r26
    2516:	ee 1f       	adc	r30, r30
    2518:	88 f7       	brcc	.-30     	; 0x24fc <__divsf3_pse+0x90>
    251a:	e0 95       	com	r30
    251c:	08 95       	ret

0000251e <__fixsfsi>:
    251e:	04 d0       	rcall	.+8      	; 0x2528 <__fixunssfsi>
    2520:	68 94       	set
    2522:	b1 11       	cpse	r27, r1
    2524:	b5 c0       	rjmp	.+362    	; 0x2690 <__fp_szero>
    2526:	08 95       	ret

00002528 <__fixunssfsi>:
    2528:	98 d0       	rcall	.+304    	; 0x265a <__fp_splitA>
    252a:	88 f0       	brcs	.+34     	; 0x254e <__fixunssfsi+0x26>
    252c:	9f 57       	subi	r25, 0x7F	; 127
    252e:	90 f0       	brcs	.+36     	; 0x2554 <__fixunssfsi+0x2c>
    2530:	b9 2f       	mov	r27, r25
    2532:	99 27       	eor	r25, r25
    2534:	b7 51       	subi	r27, 0x17	; 23
    2536:	a0 f0       	brcs	.+40     	; 0x2560 <__fixunssfsi+0x38>
    2538:	d1 f0       	breq	.+52     	; 0x256e <__fixunssfsi+0x46>
    253a:	66 0f       	add	r22, r22
    253c:	77 1f       	adc	r23, r23
    253e:	88 1f       	adc	r24, r24
    2540:	99 1f       	adc	r25, r25
    2542:	1a f0       	brmi	.+6      	; 0x254a <__fixunssfsi+0x22>
    2544:	ba 95       	dec	r27
    2546:	c9 f7       	brne	.-14     	; 0x253a <__fixunssfsi+0x12>
    2548:	12 c0       	rjmp	.+36     	; 0x256e <__fixunssfsi+0x46>
    254a:	b1 30       	cpi	r27, 0x01	; 1
    254c:	81 f0       	breq	.+32     	; 0x256e <__fixunssfsi+0x46>
    254e:	9f d0       	rcall	.+318    	; 0x268e <__fp_zero>
    2550:	b1 e0       	ldi	r27, 0x01	; 1
    2552:	08 95       	ret
    2554:	9c c0       	rjmp	.+312    	; 0x268e <__fp_zero>
    2556:	67 2f       	mov	r22, r23
    2558:	78 2f       	mov	r23, r24
    255a:	88 27       	eor	r24, r24
    255c:	b8 5f       	subi	r27, 0xF8	; 248
    255e:	39 f0       	breq	.+14     	; 0x256e <__fixunssfsi+0x46>
    2560:	b9 3f       	cpi	r27, 0xF9	; 249
    2562:	cc f3       	brlt	.-14     	; 0x2556 <__fixunssfsi+0x2e>
    2564:	86 95       	lsr	r24
    2566:	77 95       	ror	r23
    2568:	67 95       	ror	r22
    256a:	b3 95       	inc	r27
    256c:	d9 f7       	brne	.-10     	; 0x2564 <__fixunssfsi+0x3c>
    256e:	3e f4       	brtc	.+14     	; 0x257e <__fixunssfsi+0x56>
    2570:	90 95       	com	r25
    2572:	80 95       	com	r24
    2574:	70 95       	com	r23
    2576:	61 95       	neg	r22
    2578:	7f 4f       	sbci	r23, 0xFF	; 255
    257a:	8f 4f       	sbci	r24, 0xFF	; 255
    257c:	9f 4f       	sbci	r25, 0xFF	; 255
    257e:	08 95       	ret

00002580 <__floatunsisf>:
    2580:	e8 94       	clt
    2582:	09 c0       	rjmp	.+18     	; 0x2596 <__floatsisf+0x12>

00002584 <__floatsisf>:
    2584:	97 fb       	bst	r25, 7
    2586:	3e f4       	brtc	.+14     	; 0x2596 <__floatsisf+0x12>
    2588:	90 95       	com	r25
    258a:	80 95       	com	r24
    258c:	70 95       	com	r23
    258e:	61 95       	neg	r22
    2590:	7f 4f       	sbci	r23, 0xFF	; 255
    2592:	8f 4f       	sbci	r24, 0xFF	; 255
    2594:	9f 4f       	sbci	r25, 0xFF	; 255
    2596:	99 23       	and	r25, r25
    2598:	a9 f0       	breq	.+42     	; 0x25c4 <__floatsisf+0x40>
    259a:	f9 2f       	mov	r31, r25
    259c:	96 e9       	ldi	r25, 0x96	; 150
    259e:	bb 27       	eor	r27, r27
    25a0:	93 95       	inc	r25
    25a2:	f6 95       	lsr	r31
    25a4:	87 95       	ror	r24
    25a6:	77 95       	ror	r23
    25a8:	67 95       	ror	r22
    25aa:	b7 95       	ror	r27
    25ac:	f1 11       	cpse	r31, r1
    25ae:	f8 cf       	rjmp	.-16     	; 0x25a0 <__floatsisf+0x1c>
    25b0:	fa f4       	brpl	.+62     	; 0x25f0 <__floatsisf+0x6c>
    25b2:	bb 0f       	add	r27, r27
    25b4:	11 f4       	brne	.+4      	; 0x25ba <__floatsisf+0x36>
    25b6:	60 ff       	sbrs	r22, 0
    25b8:	1b c0       	rjmp	.+54     	; 0x25f0 <__floatsisf+0x6c>
    25ba:	6f 5f       	subi	r22, 0xFF	; 255
    25bc:	7f 4f       	sbci	r23, 0xFF	; 255
    25be:	8f 4f       	sbci	r24, 0xFF	; 255
    25c0:	9f 4f       	sbci	r25, 0xFF	; 255
    25c2:	16 c0       	rjmp	.+44     	; 0x25f0 <__floatsisf+0x6c>
    25c4:	88 23       	and	r24, r24
    25c6:	11 f0       	breq	.+4      	; 0x25cc <__floatsisf+0x48>
    25c8:	96 e9       	ldi	r25, 0x96	; 150
    25ca:	11 c0       	rjmp	.+34     	; 0x25ee <__floatsisf+0x6a>
    25cc:	77 23       	and	r23, r23
    25ce:	21 f0       	breq	.+8      	; 0x25d8 <__floatsisf+0x54>
    25d0:	9e e8       	ldi	r25, 0x8E	; 142
    25d2:	87 2f       	mov	r24, r23
    25d4:	76 2f       	mov	r23, r22
    25d6:	05 c0       	rjmp	.+10     	; 0x25e2 <__floatsisf+0x5e>
    25d8:	66 23       	and	r22, r22
    25da:	71 f0       	breq	.+28     	; 0x25f8 <__floatsisf+0x74>
    25dc:	96 e8       	ldi	r25, 0x86	; 134
    25de:	86 2f       	mov	r24, r22
    25e0:	70 e0       	ldi	r23, 0x00	; 0
    25e2:	60 e0       	ldi	r22, 0x00	; 0
    25e4:	2a f0       	brmi	.+10     	; 0x25f0 <__floatsisf+0x6c>
    25e6:	9a 95       	dec	r25
    25e8:	66 0f       	add	r22, r22
    25ea:	77 1f       	adc	r23, r23
    25ec:	88 1f       	adc	r24, r24
    25ee:	da f7       	brpl	.-10     	; 0x25e6 <__floatsisf+0x62>
    25f0:	88 0f       	add	r24, r24
    25f2:	96 95       	lsr	r25
    25f4:	87 95       	ror	r24
    25f6:	97 f9       	bld	r25, 7
    25f8:	08 95       	ret

000025fa <__fp_inf>:
    25fa:	97 f9       	bld	r25, 7
    25fc:	9f 67       	ori	r25, 0x7F	; 127
    25fe:	80 e8       	ldi	r24, 0x80	; 128
    2600:	70 e0       	ldi	r23, 0x00	; 0
    2602:	60 e0       	ldi	r22, 0x00	; 0
    2604:	08 95       	ret

00002606 <__fp_nan>:
    2606:	9f ef       	ldi	r25, 0xFF	; 255
    2608:	80 ec       	ldi	r24, 0xC0	; 192
    260a:	08 95       	ret

0000260c <__fp_pscA>:
    260c:	00 24       	eor	r0, r0
    260e:	0a 94       	dec	r0
    2610:	16 16       	cp	r1, r22
    2612:	17 06       	cpc	r1, r23
    2614:	18 06       	cpc	r1, r24
    2616:	09 06       	cpc	r0, r25
    2618:	08 95       	ret

0000261a <__fp_pscB>:
    261a:	00 24       	eor	r0, r0
    261c:	0a 94       	dec	r0
    261e:	12 16       	cp	r1, r18
    2620:	13 06       	cpc	r1, r19
    2622:	14 06       	cpc	r1, r20
    2624:	05 06       	cpc	r0, r21
    2626:	08 95       	ret

00002628 <__fp_round>:
    2628:	09 2e       	mov	r0, r25
    262a:	03 94       	inc	r0
    262c:	00 0c       	add	r0, r0
    262e:	11 f4       	brne	.+4      	; 0x2634 <__fp_round+0xc>
    2630:	88 23       	and	r24, r24
    2632:	52 f0       	brmi	.+20     	; 0x2648 <__fp_round+0x20>
    2634:	bb 0f       	add	r27, r27
    2636:	40 f4       	brcc	.+16     	; 0x2648 <__fp_round+0x20>
    2638:	bf 2b       	or	r27, r31
    263a:	11 f4       	brne	.+4      	; 0x2640 <__fp_round+0x18>
    263c:	60 ff       	sbrs	r22, 0
    263e:	04 c0       	rjmp	.+8      	; 0x2648 <__fp_round+0x20>
    2640:	6f 5f       	subi	r22, 0xFF	; 255
    2642:	7f 4f       	sbci	r23, 0xFF	; 255
    2644:	8f 4f       	sbci	r24, 0xFF	; 255
    2646:	9f 4f       	sbci	r25, 0xFF	; 255
    2648:	08 95       	ret

0000264a <__fp_split3>:
    264a:	57 fd       	sbrc	r21, 7
    264c:	90 58       	subi	r25, 0x80	; 128
    264e:	44 0f       	add	r20, r20
    2650:	55 1f       	adc	r21, r21
    2652:	59 f0       	breq	.+22     	; 0x266a <__fp_splitA+0x10>
    2654:	5f 3f       	cpi	r21, 0xFF	; 255
    2656:	71 f0       	breq	.+28     	; 0x2674 <__fp_splitA+0x1a>
    2658:	47 95       	ror	r20

0000265a <__fp_splitA>:
    265a:	88 0f       	add	r24, r24
    265c:	97 fb       	bst	r25, 7
    265e:	99 1f       	adc	r25, r25
    2660:	61 f0       	breq	.+24     	; 0x267a <__fp_splitA+0x20>
    2662:	9f 3f       	cpi	r25, 0xFF	; 255
    2664:	79 f0       	breq	.+30     	; 0x2684 <__fp_splitA+0x2a>
    2666:	87 95       	ror	r24
    2668:	08 95       	ret
    266a:	12 16       	cp	r1, r18
    266c:	13 06       	cpc	r1, r19
    266e:	14 06       	cpc	r1, r20
    2670:	55 1f       	adc	r21, r21
    2672:	f2 cf       	rjmp	.-28     	; 0x2658 <__fp_split3+0xe>
    2674:	46 95       	lsr	r20
    2676:	f1 df       	rcall	.-30     	; 0x265a <__fp_splitA>
    2678:	08 c0       	rjmp	.+16     	; 0x268a <__fp_splitA+0x30>
    267a:	16 16       	cp	r1, r22
    267c:	17 06       	cpc	r1, r23
    267e:	18 06       	cpc	r1, r24
    2680:	99 1f       	adc	r25, r25
    2682:	f1 cf       	rjmp	.-30     	; 0x2666 <__fp_splitA+0xc>
    2684:	86 95       	lsr	r24
    2686:	71 05       	cpc	r23, r1
    2688:	61 05       	cpc	r22, r1
    268a:	08 94       	sec
    268c:	08 95       	ret

0000268e <__fp_zero>:
    268e:	e8 94       	clt

00002690 <__fp_szero>:
    2690:	bb 27       	eor	r27, r27
    2692:	66 27       	eor	r22, r22
    2694:	77 27       	eor	r23, r23
    2696:	cb 01       	movw	r24, r22
    2698:	97 f9       	bld	r25, 7
    269a:	08 95       	ret

0000269c <__mulsf3>:
    269c:	0b d0       	rcall	.+22     	; 0x26b4 <__mulsf3x>
    269e:	c4 cf       	rjmp	.-120    	; 0x2628 <__fp_round>
    26a0:	b5 df       	rcall	.-150    	; 0x260c <__fp_pscA>
    26a2:	28 f0       	brcs	.+10     	; 0x26ae <__mulsf3+0x12>
    26a4:	ba df       	rcall	.-140    	; 0x261a <__fp_pscB>
    26a6:	18 f0       	brcs	.+6      	; 0x26ae <__mulsf3+0x12>
    26a8:	95 23       	and	r25, r21
    26aa:	09 f0       	breq	.+2      	; 0x26ae <__mulsf3+0x12>
    26ac:	a6 cf       	rjmp	.-180    	; 0x25fa <__fp_inf>
    26ae:	ab cf       	rjmp	.-170    	; 0x2606 <__fp_nan>
    26b0:	11 24       	eor	r1, r1
    26b2:	ee cf       	rjmp	.-36     	; 0x2690 <__fp_szero>

000026b4 <__mulsf3x>:
    26b4:	ca df       	rcall	.-108    	; 0x264a <__fp_split3>
    26b6:	a0 f3       	brcs	.-24     	; 0x26a0 <__mulsf3+0x4>

000026b8 <__mulsf3_pse>:
    26b8:	95 9f       	mul	r25, r21
    26ba:	d1 f3       	breq	.-12     	; 0x26b0 <__mulsf3+0x14>
    26bc:	95 0f       	add	r25, r21
    26be:	50 e0       	ldi	r21, 0x00	; 0
    26c0:	55 1f       	adc	r21, r21
    26c2:	62 9f       	mul	r22, r18
    26c4:	f0 01       	movw	r30, r0
    26c6:	72 9f       	mul	r23, r18
    26c8:	bb 27       	eor	r27, r27
    26ca:	f0 0d       	add	r31, r0
    26cc:	b1 1d       	adc	r27, r1
    26ce:	63 9f       	mul	r22, r19
    26d0:	aa 27       	eor	r26, r26
    26d2:	f0 0d       	add	r31, r0
    26d4:	b1 1d       	adc	r27, r1
    26d6:	aa 1f       	adc	r26, r26
    26d8:	64 9f       	mul	r22, r20
    26da:	66 27       	eor	r22, r22
    26dc:	b0 0d       	add	r27, r0
    26de:	a1 1d       	adc	r26, r1
    26e0:	66 1f       	adc	r22, r22
    26e2:	82 9f       	mul	r24, r18
    26e4:	22 27       	eor	r18, r18
    26e6:	b0 0d       	add	r27, r0
    26e8:	a1 1d       	adc	r26, r1
    26ea:	62 1f       	adc	r22, r18
    26ec:	73 9f       	mul	r23, r19
    26ee:	b0 0d       	add	r27, r0
    26f0:	a1 1d       	adc	r26, r1
    26f2:	62 1f       	adc	r22, r18
    26f4:	83 9f       	mul	r24, r19
    26f6:	a0 0d       	add	r26, r0
    26f8:	61 1d       	adc	r22, r1
    26fa:	22 1f       	adc	r18, r18
    26fc:	74 9f       	mul	r23, r20
    26fe:	33 27       	eor	r19, r19
    2700:	a0 0d       	add	r26, r0
    2702:	61 1d       	adc	r22, r1
    2704:	23 1f       	adc	r18, r19
    2706:	84 9f       	mul	r24, r20
    2708:	60 0d       	add	r22, r0
    270a:	21 1d       	adc	r18, r1
    270c:	82 2f       	mov	r24, r18
    270e:	76 2f       	mov	r23, r22
    2710:	6a 2f       	mov	r22, r26
    2712:	11 24       	eor	r1, r1
    2714:	9f 57       	subi	r25, 0x7F	; 127
    2716:	50 40       	sbci	r21, 0x00	; 0
    2718:	8a f0       	brmi	.+34     	; 0x273c <__mulsf3_pse+0x84>
    271a:	e1 f0       	breq	.+56     	; 0x2754 <__mulsf3_pse+0x9c>
    271c:	88 23       	and	r24, r24
    271e:	4a f0       	brmi	.+18     	; 0x2732 <__mulsf3_pse+0x7a>
    2720:	ee 0f       	add	r30, r30
    2722:	ff 1f       	adc	r31, r31
    2724:	bb 1f       	adc	r27, r27
    2726:	66 1f       	adc	r22, r22
    2728:	77 1f       	adc	r23, r23
    272a:	88 1f       	adc	r24, r24
    272c:	91 50       	subi	r25, 0x01	; 1
    272e:	50 40       	sbci	r21, 0x00	; 0
    2730:	a9 f7       	brne	.-22     	; 0x271c <__mulsf3_pse+0x64>
    2732:	9e 3f       	cpi	r25, 0xFE	; 254
    2734:	51 05       	cpc	r21, r1
    2736:	70 f0       	brcs	.+28     	; 0x2754 <__mulsf3_pse+0x9c>
    2738:	60 cf       	rjmp	.-320    	; 0x25fa <__fp_inf>
    273a:	aa cf       	rjmp	.-172    	; 0x2690 <__fp_szero>
    273c:	5f 3f       	cpi	r21, 0xFF	; 255
    273e:	ec f3       	brlt	.-6      	; 0x273a <__mulsf3_pse+0x82>
    2740:	98 3e       	cpi	r25, 0xE8	; 232
    2742:	dc f3       	brlt	.-10     	; 0x273a <__mulsf3_pse+0x82>
    2744:	86 95       	lsr	r24
    2746:	77 95       	ror	r23
    2748:	67 95       	ror	r22
    274a:	b7 95       	ror	r27
    274c:	f7 95       	ror	r31
    274e:	e7 95       	ror	r30
    2750:	9f 5f       	subi	r25, 0xFF	; 255
    2752:	c1 f7       	brne	.-16     	; 0x2744 <__mulsf3_pse+0x8c>
    2754:	fe 2b       	or	r31, r30
    2756:	88 0f       	add	r24, r24
    2758:	91 1d       	adc	r25, r1
    275a:	96 95       	lsr	r25
    275c:	87 95       	ror	r24
    275e:	97 f9       	bld	r25, 7
    2760:	08 95       	ret

00002762 <__divmodhi4>:
    2762:	97 fb       	bst	r25, 7
    2764:	09 2e       	mov	r0, r25
    2766:	07 26       	eor	r0, r23
    2768:	0a d0       	rcall	.+20     	; 0x277e <__divmodhi4_neg1>
    276a:	77 fd       	sbrc	r23, 7
    276c:	04 d0       	rcall	.+8      	; 0x2776 <__divmodhi4_neg2>
    276e:	0c d0       	rcall	.+24     	; 0x2788 <__udivmodhi4>
    2770:	06 d0       	rcall	.+12     	; 0x277e <__divmodhi4_neg1>
    2772:	00 20       	and	r0, r0
    2774:	1a f4       	brpl	.+6      	; 0x277c <__divmodhi4_exit>

00002776 <__divmodhi4_neg2>:
    2776:	70 95       	com	r23
    2778:	61 95       	neg	r22
    277a:	7f 4f       	sbci	r23, 0xFF	; 255

0000277c <__divmodhi4_exit>:
    277c:	08 95       	ret

0000277e <__divmodhi4_neg1>:
    277e:	f6 f7       	brtc	.-4      	; 0x277c <__divmodhi4_exit>
    2780:	90 95       	com	r25
    2782:	81 95       	neg	r24
    2784:	9f 4f       	sbci	r25, 0xFF	; 255
    2786:	08 95       	ret

00002788 <__udivmodhi4>:
    2788:	aa 1b       	sub	r26, r26
    278a:	bb 1b       	sub	r27, r27
    278c:	51 e1       	ldi	r21, 0x11	; 17
    278e:	07 c0       	rjmp	.+14     	; 0x279e <__udivmodhi4_ep>

00002790 <__udivmodhi4_loop>:
    2790:	aa 1f       	adc	r26, r26
    2792:	bb 1f       	adc	r27, r27
    2794:	a6 17       	cp	r26, r22
    2796:	b7 07       	cpc	r27, r23
    2798:	10 f0       	brcs	.+4      	; 0x279e <__udivmodhi4_ep>
    279a:	a6 1b       	sub	r26, r22
    279c:	b7 0b       	sbc	r27, r23

0000279e <__udivmodhi4_ep>:
    279e:	88 1f       	adc	r24, r24
    27a0:	99 1f       	adc	r25, r25
    27a2:	5a 95       	dec	r21
    27a4:	a9 f7       	brne	.-22     	; 0x2790 <__udivmodhi4_loop>
    27a6:	80 95       	com	r24
    27a8:	90 95       	com	r25
    27aa:	bc 01       	movw	r22, r24
    27ac:	cd 01       	movw	r24, r26
    27ae:	08 95       	ret

000027b0 <atoi>:
    27b0:	fc 01       	movw	r30, r24
    27b2:	88 27       	eor	r24, r24
    27b4:	99 27       	eor	r25, r25
    27b6:	e8 94       	clt
    27b8:	21 91       	ld	r18, Z+
    27ba:	20 32       	cpi	r18, 0x20	; 32
    27bc:	e9 f3       	breq	.-6      	; 0x27b8 <atoi+0x8>
    27be:	29 30       	cpi	r18, 0x09	; 9
    27c0:	10 f0       	brcs	.+4      	; 0x27c6 <atoi+0x16>
    27c2:	2e 30       	cpi	r18, 0x0E	; 14
    27c4:	c8 f3       	brcs	.-14     	; 0x27b8 <atoi+0x8>
    27c6:	2b 32       	cpi	r18, 0x2B	; 43
    27c8:	41 f0       	breq	.+16     	; 0x27da <atoi+0x2a>
    27ca:	2d 32       	cpi	r18, 0x2D	; 45
    27cc:	39 f4       	brne	.+14     	; 0x27dc <atoi+0x2c>
    27ce:	68 94       	set
    27d0:	04 c0       	rjmp	.+8      	; 0x27da <atoi+0x2a>
    27d2:	0e 94 52 14 	call	0x28a4	; 0x28a4 <__mulhi_const_10>
    27d6:	82 0f       	add	r24, r18
    27d8:	91 1d       	adc	r25, r1
    27da:	21 91       	ld	r18, Z+
    27dc:	20 53       	subi	r18, 0x30	; 48
    27de:	2a 30       	cpi	r18, 0x0A	; 10
    27e0:	c0 f3       	brcs	.-16     	; 0x27d2 <atoi+0x22>
    27e2:	1e f4       	brtc	.+6      	; 0x27ea <atoi+0x3a>
    27e4:	90 95       	com	r25
    27e6:	81 95       	neg	r24
    27e8:	9f 4f       	sbci	r25, 0xFF	; 255
    27ea:	08 95       	ret

000027ec <memset>:
    27ec:	dc 01       	movw	r26, r24
    27ee:	01 c0       	rjmp	.+2      	; 0x27f2 <memset+0x6>
    27f0:	6d 93       	st	X+, r22
    27f2:	41 50       	subi	r20, 0x01	; 1
    27f4:	50 40       	sbci	r21, 0x00	; 0
    27f6:	e0 f7       	brcc	.-8      	; 0x27f0 <memset+0x4>
    27f8:	08 95       	ret

000027fa <itoa>:
    27fa:	fb 01       	movw	r30, r22
    27fc:	9f 01       	movw	r18, r30
    27fe:	e8 94       	clt
    2800:	42 30       	cpi	r20, 0x02	; 2
    2802:	c4 f0       	brlt	.+48     	; 0x2834 <itoa+0x3a>
    2804:	45 32       	cpi	r20, 0x25	; 37
    2806:	b4 f4       	brge	.+44     	; 0x2834 <itoa+0x3a>
    2808:	4a 30       	cpi	r20, 0x0A	; 10
    280a:	29 f4       	brne	.+10     	; 0x2816 <itoa+0x1c>
    280c:	97 fb       	bst	r25, 7
    280e:	1e f4       	brtc	.+6      	; 0x2816 <itoa+0x1c>
    2810:	90 95       	com	r25
    2812:	81 95       	neg	r24
    2814:	9f 4f       	sbci	r25, 0xFF	; 255
    2816:	64 2f       	mov	r22, r20
    2818:	77 27       	eor	r23, r23
    281a:	0e 94 c4 13 	call	0x2788	; 0x2788 <__udivmodhi4>
    281e:	80 5d       	subi	r24, 0xD0	; 208
    2820:	8a 33       	cpi	r24, 0x3A	; 58
    2822:	0c f0       	brlt	.+2      	; 0x2826 <itoa+0x2c>
    2824:	89 5d       	subi	r24, 0xD9	; 217
    2826:	81 93       	st	Z+, r24
    2828:	cb 01       	movw	r24, r22
    282a:	00 97       	sbiw	r24, 0x00	; 0
    282c:	a1 f7       	brne	.-24     	; 0x2816 <itoa+0x1c>
    282e:	16 f4       	brtc	.+4      	; 0x2834 <itoa+0x3a>
    2830:	5d e2       	ldi	r21, 0x2D	; 45
    2832:	51 93       	st	Z+, r21
    2834:	10 82       	st	Z, r1
    2836:	c9 01       	movw	r24, r18
    2838:	0c 94 95 14 	jmp	0x292a	; 0x292a <strrev>

0000283c <ltoa>:
    283c:	fa 01       	movw	r30, r20
    283e:	cf 93       	push	r28
    2840:	ff 93       	push	r31
    2842:	ef 93       	push	r30
    2844:	22 30       	cpi	r18, 0x02	; 2
    2846:	44 f1       	brlt	.+80     	; 0x2898 <ltoa+0x5c>
    2848:	25 32       	cpi	r18, 0x25	; 37
    284a:	34 f5       	brge	.+76     	; 0x2898 <ltoa+0x5c>
    284c:	c2 2f       	mov	r28, r18
    284e:	e8 94       	clt
    2850:	ca 30       	cpi	r28, 0x0A	; 10
    2852:	49 f4       	brne	.+18     	; 0x2866 <ltoa+0x2a>
    2854:	97 fb       	bst	r25, 7
    2856:	3e f4       	brtc	.+14     	; 0x2866 <ltoa+0x2a>
    2858:	90 95       	com	r25
    285a:	80 95       	com	r24
    285c:	70 95       	com	r23
    285e:	61 95       	neg	r22
    2860:	7f 4f       	sbci	r23, 0xFF	; 255
    2862:	8f 4f       	sbci	r24, 0xFF	; 255
    2864:	9f 4f       	sbci	r25, 0xFF	; 255
    2866:	2c 2f       	mov	r18, r28
    2868:	33 27       	eor	r19, r19
    286a:	44 27       	eor	r20, r20
    286c:	55 27       	eor	r21, r21
    286e:	ff 93       	push	r31
    2870:	ef 93       	push	r30
    2872:	0e 94 a5 14 	call	0x294a	; 0x294a <__udivmodsi4>
    2876:	ef 91       	pop	r30
    2878:	ff 91       	pop	r31
    287a:	60 5d       	subi	r22, 0xD0	; 208
    287c:	6a 33       	cpi	r22, 0x3A	; 58
    287e:	0c f0       	brlt	.+2      	; 0x2882 <ltoa+0x46>
    2880:	69 5d       	subi	r22, 0xD9	; 217
    2882:	61 93       	st	Z+, r22
    2884:	b9 01       	movw	r22, r18
    2886:	ca 01       	movw	r24, r20
    2888:	60 50       	subi	r22, 0x00	; 0
    288a:	70 40       	sbci	r23, 0x00	; 0
    288c:	80 40       	sbci	r24, 0x00	; 0
    288e:	90 40       	sbci	r25, 0x00	; 0
    2890:	51 f7       	brne	.-44     	; 0x2866 <ltoa+0x2a>
    2892:	16 f4       	brtc	.+4      	; 0x2898 <ltoa+0x5c>
    2894:	cd e2       	ldi	r28, 0x2D	; 45
    2896:	c1 93       	st	Z+, r28
    2898:	10 82       	st	Z, r1
    289a:	8f 91       	pop	r24
    289c:	9f 91       	pop	r25
    289e:	cf 91       	pop	r28
    28a0:	0c 94 95 14 	jmp	0x292a	; 0x292a <strrev>

000028a4 <__mulhi_const_10>:
    28a4:	7a e0       	ldi	r23, 0x0A	; 10
    28a6:	97 9f       	mul	r25, r23
    28a8:	90 2d       	mov	r25, r0
    28aa:	87 9f       	mul	r24, r23
    28ac:	80 2d       	mov	r24, r0
    28ae:	91 0d       	add	r25, r1
    28b0:	11 24       	eor	r1, r1
    28b2:	08 95       	ret

000028b4 <ultoa>:
    28b4:	fa 01       	movw	r30, r20
    28b6:	cf 93       	push	r28
    28b8:	ff 93       	push	r31
    28ba:	ef 93       	push	r30
    28bc:	22 30       	cpi	r18, 0x02	; 2
    28be:	cc f0       	brlt	.+50     	; 0x28f2 <ultoa+0x3e>
    28c0:	25 32       	cpi	r18, 0x25	; 37
    28c2:	bc f4       	brge	.+46     	; 0x28f2 <ultoa+0x3e>
    28c4:	c2 2f       	mov	r28, r18
    28c6:	2c 2f       	mov	r18, r28
    28c8:	33 27       	eor	r19, r19
    28ca:	44 27       	eor	r20, r20
    28cc:	55 27       	eor	r21, r21
    28ce:	ff 93       	push	r31
    28d0:	ef 93       	push	r30
    28d2:	0e 94 a5 14 	call	0x294a	; 0x294a <__udivmodsi4>
    28d6:	ef 91       	pop	r30
    28d8:	ff 91       	pop	r31
    28da:	60 5d       	subi	r22, 0xD0	; 208
    28dc:	6a 33       	cpi	r22, 0x3A	; 58
    28de:	0c f0       	brlt	.+2      	; 0x28e2 <ultoa+0x2e>
    28e0:	69 5d       	subi	r22, 0xD9	; 217
    28e2:	61 93       	st	Z+, r22
    28e4:	b9 01       	movw	r22, r18
    28e6:	ca 01       	movw	r24, r20
    28e8:	60 50       	subi	r22, 0x00	; 0
    28ea:	70 40       	sbci	r23, 0x00	; 0
    28ec:	80 40       	sbci	r24, 0x00	; 0
    28ee:	90 40       	sbci	r25, 0x00	; 0
    28f0:	51 f7       	brne	.-44     	; 0x28c6 <ultoa+0x12>
    28f2:	10 82       	st	Z, r1
    28f4:	8f 91       	pop	r24
    28f6:	9f 91       	pop	r25
    28f8:	cf 91       	pop	r28
    28fa:	0c 94 95 14 	jmp	0x292a	; 0x292a <strrev>

000028fe <utoa>:
    28fe:	fb 01       	movw	r30, r22
    2900:	9f 01       	movw	r18, r30
    2902:	42 30       	cpi	r20, 0x02	; 2
    2904:	74 f0       	brlt	.+28     	; 0x2922 <utoa+0x24>
    2906:	45 32       	cpi	r20, 0x25	; 37
    2908:	64 f4       	brge	.+24     	; 0x2922 <utoa+0x24>
    290a:	64 2f       	mov	r22, r20
    290c:	77 27       	eor	r23, r23
    290e:	0e 94 c4 13 	call	0x2788	; 0x2788 <__udivmodhi4>
    2912:	80 5d       	subi	r24, 0xD0	; 208
    2914:	8a 33       	cpi	r24, 0x3A	; 58
    2916:	0c f0       	brlt	.+2      	; 0x291a <utoa+0x1c>
    2918:	89 5d       	subi	r24, 0xD9	; 217
    291a:	81 93       	st	Z+, r24
    291c:	cb 01       	movw	r24, r22
    291e:	00 97       	sbiw	r24, 0x00	; 0
    2920:	a1 f7       	brne	.-24     	; 0x290a <utoa+0xc>
    2922:	10 82       	st	Z, r1
    2924:	c9 01       	movw	r24, r18
    2926:	0c 94 95 14 	jmp	0x292a	; 0x292a <strrev>

0000292a <strrev>:
    292a:	dc 01       	movw	r26, r24
    292c:	fc 01       	movw	r30, r24
    292e:	67 2f       	mov	r22, r23
    2930:	71 91       	ld	r23, Z+
    2932:	77 23       	and	r23, r23
    2934:	e1 f7       	brne	.-8      	; 0x292e <strrev+0x4>
    2936:	32 97       	sbiw	r30, 0x02	; 2
    2938:	04 c0       	rjmp	.+8      	; 0x2942 <strrev+0x18>
    293a:	7c 91       	ld	r23, X
    293c:	6d 93       	st	X+, r22
    293e:	70 83       	st	Z, r23
    2940:	62 91       	ld	r22, -Z
    2942:	ae 17       	cp	r26, r30
    2944:	bf 07       	cpc	r27, r31
    2946:	c8 f3       	brcs	.-14     	; 0x293a <strrev+0x10>
    2948:	08 95       	ret

0000294a <__udivmodsi4>:
    294a:	a1 e2       	ldi	r26, 0x21	; 33
    294c:	1a 2e       	mov	r1, r26
    294e:	aa 1b       	sub	r26, r26
    2950:	bb 1b       	sub	r27, r27
    2952:	fd 01       	movw	r30, r26
    2954:	0d c0       	rjmp	.+26     	; 0x2970 <__udivmodsi4_ep>

00002956 <__udivmodsi4_loop>:
    2956:	aa 1f       	adc	r26, r26
    2958:	bb 1f       	adc	r27, r27
    295a:	ee 1f       	adc	r30, r30
    295c:	ff 1f       	adc	r31, r31
    295e:	a2 17       	cp	r26, r18
    2960:	b3 07       	cpc	r27, r19
    2962:	e4 07       	cpc	r30, r20
    2964:	f5 07       	cpc	r31, r21
    2966:	20 f0       	brcs	.+8      	; 0x2970 <__udivmodsi4_ep>
    2968:	a2 1b       	sub	r26, r18
    296a:	b3 0b       	sbc	r27, r19
    296c:	e4 0b       	sbc	r30, r20
    296e:	f5 0b       	sbc	r31, r21

00002970 <__udivmodsi4_ep>:
    2970:	66 1f       	adc	r22, r22
    2972:	77 1f       	adc	r23, r23
    2974:	88 1f       	adc	r24, r24
    2976:	99 1f       	adc	r25, r25
    2978:	1a 94       	dec	r1
    297a:	69 f7       	brne	.-38     	; 0x2956 <__udivmodsi4_loop>
    297c:	60 95       	com	r22
    297e:	70 95       	com	r23
    2980:	80 95       	com	r24
    2982:	90 95       	com	r25
    2984:	9b 01       	movw	r18, r22
    2986:	ac 01       	movw	r20, r24
    2988:	bd 01       	movw	r22, r26
    298a:	cf 01       	movw	r24, r30
    298c:	08 95       	ret

0000298e <_exit>:
    298e:	f8 94       	cli

00002990 <__stop_program>:
    2990:	ff cf       	rjmp	.-2      	; 0x2990 <__stop_program>
